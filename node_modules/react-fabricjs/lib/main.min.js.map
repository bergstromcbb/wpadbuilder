{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///main.min.js","webpack:///webpack/bootstrap 9b7fbdad4bc509c1ef20","webpack:///./src/react-fabric.js","webpack:///./~/fabric-webpack/dist/fabric.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/base/Object.jsx","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/buffer/index.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/events/events.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_writable.js","webpack:///./src/StaticCanvas.jsx","webpack:///./src/Text.jsx","webpack:///./src/mixin/observable.js","webpack:///./src/shape/Path.jsx","webpack:///./~/deep-diff/index.js","webpack:///./~/http-browserify/index.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_readable.js","webpack:///./~/string_decoder/index.js","webpack:///./~/url/url.js","webpack:///./~/Base64/base64.js","webpack:///./src/Canvas.jsx","webpack:///./src/Color.js","webpack:///./src/IText.jsx","webpack:///./src/Image.jsx","webpack:///./src/ImageFilters.js","webpack:///./src/mixin/collection.js","webpack:///./src/shape/Circle.jsx","webpack:///./src/shape/Ellipse.jsx","webpack:///./src/shape/Line.jsx","webpack:///./src/shape/PathGroup.jsx","webpack:///./src/shape/Polygon.jsx","webpack:///./src/shape/Polyline.jsx","webpack:///./src/shape/Rect.jsx","webpack:///./src/shape/Triangle.jsx","webpack:///./~/base64-js/lib/b64.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/stream-browserify/~/isarray/index.js","webpack:///./~/stream-browserify/~/readable-stream/duplex.js","webpack:///./~/stream-browserify/~/readable-stream/passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/readable.js","webpack:///./~/stream-browserify/~/readable-stream/transform.js","webpack:///./~/stream-browserify/~/readable-stream/writable.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///(webpack)/buildin/module.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","_interopRequireDefault","obj","__esModule","default","defineProperty","value","color","imageFilter","Itext","Text","Image","Triangle","Rect","Polyline","Polygon","PathGroup","Path","Line","Ellipse","Circle","Canvas","StaticCanvas","undefined","_StaticCanvas2","_StaticCanvas3","_Canvas2","_Canvas3","_Circle2","_Circle3","_Ellipse2","_Ellipse3","_Line2","_Line3","_Path2","_Path3","_PathGroup2","_PathGroup3","_Polygon2","_Polygon3","_Polyline2","_Polyline3","_Rect2","_Rect3","_Triangle2","_Triangle3","_Image2","_Image3","_Text2","_Text3","_IText","_IText2","_ImageFilters","_ImageFilters2","_Color","_Color2","Buffer","process","fabric","version","document","window","jsdom","createWindow","parentWindow","isTouchSupported","documentElement","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","handler","__eventListeners","util","removeFromArray","length","observe","arguments","prop","on","push","stopObserving","fire","options","listenersForEvent","len","Observable","off","trigger","Collection","add","_objects","_onObjectAdded","renderOnAddRemove","renderAll","insertAt","object","index","nonSplicing","objects","getObjects","splice","remove","indexOf","_onObjectRemoved","forEachObject","callback","context","type","filter","o","item","isEmpty","size","contains","complexity","reduce","memo","current","global","sqrt","Math","atan2","PiBy180","PI","array","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","sin","cos","rx","x","y","ry","Point","addEquals","transformPoint","t","ignoreOffset","invertTransform","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","resolveNamespace","parts","split","loadImage","url","crossOrigin","img","createImage","onload","onerror","log","src","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","klass","async","fromObject","error","groupSVGElements","elements","path","setSourcePath","populateWithProperties","source","destination","properties","toString","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","proto","stateProperties","propName","capitalizedPropName","setterName","getterName","property","Function","clipContext","receiver","beginPath","clipTo","clip","multiplyTransformMatrices","getFunctionBody","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","temp","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","abs","px","py","rx2","ry2","py2","px2","pl","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","Array","join","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","boundCopy","invoke","method","byProperty","find","value1","value2","condition","searchElement","TypeError","n","POSITIVE_INFINITY","NEGATIVE_INFINITY","k","map","every","some","val","rv","extend","clone","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","trim","Dummy","bind","thisArg","_this","Subclass","callSuper","methodName","constructor","superclass","createClass","initialize","parent","shift","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","test","createListener","uid","wrappedHandler","createWrappedHandler","e","getElement","event","createDispatcher","handlers","handlersForEvent","getPointer","element","target","srcElement","unknown","scroll","getScrollLeftTop","pointerX","left","pointerY","top","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","style","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","getElementById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","defaultView","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","request","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","ActiveXObject","XMLHttpRequest","req","warn","console","animate","requestAnimFrame","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","normalize","asin","elastic","opts","pow","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","Color","setAlpha","getAlpha","toRgba","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","pop","doesSomeParentMatch","selector","matcher","nodeName","classNames","getAttribute","RegExp","elementById","node","idAttr","nodelist","parseUseDirectives","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","scaleX","scaleY","minX","minY","widthAttr","heightAttr","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","width","height","_enlivenCachedObject","cachedObject","_createSVGPattern","markup","canvas","toSVG","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","fill","gradientDefs","rotateMatrix","angle","scaleMatrix","multiplierX","multiplierY","skewXMatrix","tan","skewYMatrix","translateMatrix","iMatrix","commaWsp","skewX","skewY","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","hasAncestorWithNodeName","startTime","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","documentParsingTime","svgCache","has","name","get","set","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","fontFamily","linearGradientEls","radialGradientEls","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","font","ElementsParser","parse","parsePointsAttribute","points","parsedPoints","rules","allRules","styleContents","textContent","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","loadXML","results","hasUrl","enlivedRecord","loadSVGFromString","DOMParser","parser","parseFromString","createSVGFontFacesMarkup","createSVGRefElementsMarkup","numElements","createObjects","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","Gradient","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","getSource","_source","toRgb","toHsl","hsl","toHsla","toHex","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","substring","oColor","getColorStop","colorAlpha","keyValuePairs","key","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","colorStops","gradientTransform","addColorStop","colorStop","position","toObject","commonAttributes","sort","group","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","Pattern","repeat","toDataURL","patternSource","patternWidth","getWidth","patternHeight","getHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","CANVAS_INIT_ERROR","Error","_initStatic","activeInstance","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","preserveObjectStacking","viewportTransform","onBeforeScaleRotate","enableRetinaScaling","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","setOptions","_createCanvasElement","_initCanvasElement","_applyCanvasStyle","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","getActiveGroup","setCoords","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getActiveObject","_draw","v","_shouldRenderObject","render","_renderControls","setupState","_set","_discardActiveObject","clearContext","clearRect","clear","discardActiveGroup","discardActiveObject","contextTop","allOnTop","canvasToDrawOn","selection","_groupSelector","_renderBackground","_renderObjects","_renderActiveGroup","_renderOverlay","drawControls","sortedObjects","reverse","fillStyle","fillRect","renderTop","_drawSelection","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","setPositionByOrigin","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","_toObject","originalValue","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","sendToBack","unshift","bringToFront","sendBackwards","intersecting","newIdx","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","removeListeners","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","strokeWidth","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","centeredScaling","centeredRotation","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","_currentTransform","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","isObjectInGroup","isTargetTransparent","hasBorders","transparentCorners","contextCache","_shouldClearSelection","activeObject","shiftKey","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","theta","_translateObject","_scaleObject","by","lockScalingX","lockScalingY","lockScalingFlip","constraintPosition","translateToOriginPoint","localMouse","toLocalPoint","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","dim","_getNonTransformedDimensions","newScaleX","newScaleY","_scaleObjectEqually","_flipObject","dist","lastDist","padding","_rotateObject","lastAngle","curAngle","setCursor","cursor","_resetObjectTransform","setAngle","groupSelector","aleft","atop","strokeRect","_isLastRenderedObject","lastRenderedObjectWithControlsAboveOverlay","findTarget","skipGroup","_searchPossibleTargets","_fireOverOutEvents","_hoveredTarget","_checkTarget","isEditing","relatedTarget","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","setActiveObject","_setActiveGroup","_activeGroup","setActiveGroup","_discardActiveGroup","destroy","deactivateAll","allObjects","deactivateAllWithDispatch","_drawGroupControls","_drawObjectsControls","active","_setCursorFromEvent","Element","cursorOffset","tr","mr","br","mb","bl","ml","tl","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseWheel","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","__onOrientationChange","__onShake","__onLongPress","__onMouseDown","__onMouseUp","preventDefault","__onMouseMove","_shouldRender","isMoving","_previousPointer","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","shouldRender","_maybeGroupObjects","_handleCursorAndEvent","_scaling","hasStateChanged","_restoreOriginXY","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","ivt","_onMouseMoveInDrawingMode","isLeftClick","which","button","shouldGroup","_shouldGroup","_clearSelection","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","isType","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","_groupSelectedObjects","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","isClick","intersectsWithRect","isContainedWithinRect","setObjectsCoords","format","quality","multiplier","cropping","__toDataURLWithMultiplier","__toDataURL","croppedCanvasEl","__getCroppedCanvas","croppedCtx","shouldCrop","drawImage","origWidth","origHeight","scaledWidth","scaledHeight","_tempRemoveBordersControlsFromGroup","_restoreBordersControlsOnGroup","toDataURLWithMultiplier","origHasControls","hasControls","origBorderColor","borderColor","hideControls","origHideControls","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","cbIfLoaded","__setBgOverlay","_toDataURL","_toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","flipX","flipY","cornerSize","cornerColor","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","_initGradient","_initPattern","_initClipping","functionBody","fromLeft","_getLeftTopCoords","NUM_FRACTION_DIGITS","_removeDefaultValues","_setObject","shouldConstrainValue","_constrainScale","setOnGroup","toggle","sourcePath","getViewportTransform","noTransform","_setupCompositeOperation","_setStrokeStyles","_setFillStyles","_setOpacity","miterLimit","drawBorders","multX","multY","_removeShadow","_renderFill","_renderStroke","_stroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","centerV","getLocalPointer","pClicked","objectLeftTop","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","_getTransformedDimensions","translateToCenterPoint","leftTop","getPointByOrigin","pos","adjustPosition","to","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","oCoords","pointTL","pointBR","intersection","other","getCoords","thisCoords","otherCoords","point1","point2","lines","_getImageLines","xPoints","_findCrossPoints","topline","rightline","bottomline","leftline","xi","yi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","xCoords","maxX","yCoords","maxY","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","atan","_hypotenuse","mtr","_setCornerCoords","_calcDimensionsTransformMatrix","getSvgStyles","getSvgTransform","translatePart","anglePart","scalePart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","originalState","isVML","_controlsVisibility","isControlVisible","__corner","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","w","capped","vLine","hLine","sLine","strokeW","strokeH","shouldTransform","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","currentValue","from","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","widthBy2","heightBy2","piBy2","getRx","getRy","ellipse","_initRxRy","isRounded","_calcDimensions","_applyPointOffset","commonRender","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","pathOffset","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","parentToObject","paths","parseDimensionsFromPaths","xC","yC","isSameColor","firstPathFill","total","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","originalLeft","originalTop","_restoreObjectsState","_setObjectActive","_moveFlippedObject","delegatedProperties","textDecoration","textAlign","_renderObject","originalHasRotatingPoint","_restoreObjectState","_setObjectPosition","oldOriginX","oldOriginY","_toggleFlipping","newOrigin","rotated","_getRotatedLeftTop","groupAngle","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","props","iLen","jLen","_getBounds","minXY","maxXY","alignX","alignY","meetOrSlice","_lastScaleX","_lastScaleY","filters","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","setCrossOrigin","getOriginalSize","filterObj","_src","preserveAspectRatio","getSvgSrc","origFill","getSrc","setSrc","imgElement","forResizing","imgEl","replacement","applyTo","toBuffer","pngCompression","_filteredEl","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","aspectRatioAttrs","align","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","tmpCtx","_createImageData","createImageData","weights","pixels","side","halfSide","sw","sh","output","dst","alphaFac","sy","sx","dstOff","scy","scx","srcOff","wt","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","newWidth","newHeight","multW","multH","signW","signH","doneW","doneH","stepW","stepH","lanczosCreate","lobes","xx","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","w2","h2","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","_dimensionAffectingProps","text","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_cacheLinesWidth","_getTextWidth","_getTextHeight","_renderTextBackground","_renderText","_renderTextDecoration","_translateForTextAlign","_renderTextFill","_renderTextStroke","back","sign","textBaseline","skipTextAlign","_getFontDeclaration","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","chars","shortM","_renderTextLine","line","lineIndex","totalWidth","words","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","measureText","_getLeftOffset","_getTopOffset","_skipFillStrokeCheck","lineHeights","heightOfLine","maxHeight","_renderTextBoxBackground","_renderTextLinesBackground","lineLeftOffset","lineTopOffset","_getLineLeftOffset","__lineWidths","__lineHeights","__lineOffsets","_shouldClearCache","shouldClear","_forceClearCache","wordCount","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_getFillAttributes","fillColor","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorWidth","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","_charWidthsCache","initBehavior","__maxFontHeights","__widthOfSpace","isEmptyStyles","p3","setSelectionStart","_updateTextarea","setSelectionEnd","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","charIndex","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","renderCursorOrSelection","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","_getCachedLineOffset","widthOfLine","cursorLocation","charHeight","__isMousedown","end","startLine","endLine","lineOffset","boxWidth","j2","j2len","_renderCharsFast","prevStyle","charsToRender","thisStyle","_hasStyleChanged","_renderChar","skipFillStrokeCheck","_char","charWidth","decl","shouldStroke","shouldFill","_applyCharStylesGetWidth","_getHeightOfChar","fillText","strokeText","_renderCharDecoration","styleDeclaration","_getWidthOfCharsAt","_getCacheProp","_applyFontStyles","cacheProp","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_getWidthOfSpace","_getHeightOfCharAt","currentCharHeight","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","initSelectedHandler","selected","_hasITextHandlers","_initCanvasHandlers","_iTextInstances","exitEditingOnOthers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","clearTimeout","_currentTickCompleteState","initDelayedCursor","restart","delay","_cursorTimeout2","abortCursorAnimation","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","initHiddenTextarea","hiddenTextarea","focus","_saveEditingProps","_setEditingProps","initMouseMoveHandler","exitEditing","getSelectionStartFromPointer","__selectionStartOnMouseDown","_savedProps","_restoreEditingProps","overCursor","removeChild","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","copiedTextStyle","insertChar","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","clonedStyles","numericLine","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","stopPropagation","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onInput","copy","paste","_clickHandlerInitialized","onClick","_keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","_ctrlKeysMap","65","88","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_cancelOnInput","textLength","newTextLength","diff","charsToInsert","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","cut","getDownCursorOffset","isRight","selectionProp","textOnSameLineBeforeCursor","textOnSameLineAfterCursor","textOnNextLine","widthOfSameLineBeforeCursor","widthOfCharsOnSameLineBeforeCursor","indexOnNextLine","_getIndexOnNextLine","foundMatch","widthOfNextLine","widthOfCharsOnNextLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","moveCursorDownWithShift","moveCursorDownWithoutShift","swapSelectionPoints","swapSel","getUpCursorOffset","indexOnPrevLine","_getIndexOnPrevLine","widthOfPreviousLine","widthOfCharsOnPreviousLine","moveCursorUp","moveCursorUpWithShift","moveCursorUpWithoutShift","moveCursorLeft","moveCursorLeftWithShift","moveCursorLeftWithoutShift","_move","propMethod","_moveLeft","_moveRight","moveCursorRightWithShift","moveCursorRightWithoutShift","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","charOffset","_getSVGLineLeftOffset","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_setLineWidths","_generateStyleMap","realLineCount","realLineCharCount","charCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","largestWordWidth","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","_getTextOnPreviousLine","lIndex","override","tmp","oURL","URL","port","protocol","reqHandler","HTTPS","HTTP","hostname","response","setEncoding","statusCode","errno","ECONNREFUSED","message","requestFs","fs","readFile","createImageAndCallBack","eval","oImg","createCanvasForNode","nodeCanvasOptions","nodeCanvas","FabricCanvas","fabricCanvas","Font","createPNGStream","createJPEGStream","origSetWidth","origSetHeight","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_fabricWebpack","_deepDiff","_deepDiff2","_observable","_observable2","FabricObject","_React$Component","getPrototypeOf","state","getClipTo","getFill","getFlipX","getFlipY","getOpacity","getOriginX","getOriginY","getScaleX","getScaleY","getShadow","getStrokeWidth","getTransformMatrix","getVisible","renderf","setClipTo","setFill","setFlipX","setFlipY","setLeft","setOriginX","setOriginY","setScaleX","setScaleY","setStroke","setStrokeWidth","setTop","setTransformMatrix","setVisible","getObject","nextProps","_this2","difference","comparsion","rhs","eventChanged","cb","_this3","setState","initEvent","onAdded","onRemoved","onSelected","onModified","onRotating","onScaling","onMoving","onMousedown","onMouseup","Component","propTypes","PropTypes","bool","func","oneOf","oneOfType","instanceOf","defaultProps","lockSkewingX","lockSkewingY","ctor","superCtor","super_","TempCtor","Duplex","Readable","Writable","readable","allowHalfOpen","once","onend","_writableState","ended","nextTick","xs","f","objectKeys","keys","inherits","typedArraySupport","Uint8Array","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","assertSize","alloc","checked","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","title","browser","env","argv","versions","removeAllListeners","emit","binding","cwd","chdir","umask","Stream","EE","EventEmitter","Transform","PassThrough","pipe","dest","ondata","pause","ondrain","resume","didOnEnd","onclose","er","cleanup","listenerCount","_isStdio","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","_events","_maxListeners","defaultMaxListeners","setMaxListeners","newListener","warned","trace","fired","evlistener","emitter","TransformState","stream","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_readableState","reading","needReadable","highWaterMark","_read","sync","_flush","done","ws","_transform","_write","writeencoding","WriteReq","WritableState","hwm","defaultHwm","objectMode","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","entry","prefinish","need","endWritable","cork","uncork","_collection","_collection2","getChild","ref","prevRef","prevProps","prevState","_this4","Children","children","child","beforeRender","afterRender","onCanvasCleared","onObjectAdded","onObjectRemoved","_this5","_props","cloneElement","emptyJSON","_get","desc","getOwnPropertyDescriptor","getter","_Object","_Object2","_FabricObject","attribute","defaultSvgFontSize","assign","observableMixin","delgete","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Diff","kind","DiffEdit","DiffNew","DiffDeleted","DiffArray","arrayRemove","rest","realTypeOf","subject","deepDiff","lhs","changes","prefilter","stack","alt","ltype","rtype","akeys","pkeys","accumulateDiff","accum","applyArrayChange","change","it","applyChange","last","revertArrayChange","revertChange","applyDiff","$scope","conflict","conflictResolution","DeepDiff","observableDiff","isConflict","noConflict","http","Request","params","host","location","scheme","xhrHttp","Agent","defaultMaxSockets","axs","ax","ax_","STATUS_CODES","100","101","102","200","201","202","203","204","205","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","ReadableState","pipes","pipesCount","flowing","endEmitted","emittedReadable","readableListening","readableObjectMode","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","resumeScheduled","resume_","fromList","stringMode","cpy","endReadable","debuglog","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","events","_fromList","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr","Url","slashes","auth","hash","search","query","pathname","href","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","relative","resolve","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","lowerProto","hostEnd","hec","atSign","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","domainArray","newOut","encode","ae","esc","encodeURIComponent","escape","qm","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","isAbsolute","InvalidCharacterError","btoa","input","block","atob","bs","bc","_StaticCanvas","_Text","onChanged","onSelectionChanged","onEditingEntered","onEditingExited","css","collectionMixin","_delgete$state$canvas","_delgete$state$canvas2","_Path","init","lookup","revLookup","b64","placeHolders","Arr","L","tripletToBase64","num","encodeChunk","uint8","extraBytes","maxChunkLength","len2","Response","Base64","uri","withCredentials","responseType","_headers","headers","isSafeRequestHeader","setHeader","__aborted","handle","getHeader","removeHeader","isXHR2Compatible","unsafeHeaders","headerName","Blob","FormData","parseHeaders","getAllResponseHeaders","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","qs","sep","regexp","maxKeys","kstr","vstr","stringifyPrimitive","ks","decode","NODE_ENV","READABLE_STREAM","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","numLinesEst","prev","cur","ar","pad","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid","bold","italic","underline","inverse","grey","cyan","magenta","special","boolean","null","date","webpackPolyfill"],"mappings":"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","file":"main.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.color = exports.imageFilter = exports.Itext = exports.Text = exports.Image = exports.Triangle = exports.Rect = exports.Polyline = exports.Polygon = exports.PathGroup = exports.Path = exports.Line = exports.Ellipse = exports.Circle = exports.Canvas = exports.StaticCanvas = undefined;\n\t\n\tvar _StaticCanvas2 = __webpack_require__(14);\n\t\n\tvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\t\n\tvar _Canvas2 = __webpack_require__(25);\n\t\n\tvar _Canvas3 = _interopRequireDefault(_Canvas2);\n\t\n\tvar _Circle2 = __webpack_require__(31);\n\t\n\tvar _Circle3 = _interopRequireDefault(_Circle2);\n\t\n\tvar _Ellipse2 = __webpack_require__(32);\n\t\n\tvar _Ellipse3 = _interopRequireDefault(_Ellipse2);\n\t\n\tvar _Line2 = __webpack_require__(33);\n\t\n\tvar _Line3 = _interopRequireDefault(_Line2);\n\t\n\tvar _Path2 = __webpack_require__(17);\n\t\n\tvar _Path3 = _interopRequireDefault(_Path2);\n\t\n\tvar _PathGroup2 = __webpack_require__(34);\n\t\n\tvar _PathGroup3 = _interopRequireDefault(_PathGroup2);\n\t\n\tvar _Polygon2 = __webpack_require__(35);\n\t\n\tvar _Polygon3 = _interopRequireDefault(_Polygon2);\n\t\n\tvar _Polyline2 = __webpack_require__(36);\n\t\n\tvar _Polyline3 = _interopRequireDefault(_Polyline2);\n\t\n\tvar _Rect2 = __webpack_require__(37);\n\t\n\tvar _Rect3 = _interopRequireDefault(_Rect2);\n\t\n\tvar _Triangle2 = __webpack_require__(38);\n\t\n\tvar _Triangle3 = _interopRequireDefault(_Triangle2);\n\t\n\tvar _Image2 = __webpack_require__(28);\n\t\n\tvar _Image3 = _interopRequireDefault(_Image2);\n\t\n\tvar _Text2 = __webpack_require__(15);\n\t\n\tvar _Text3 = _interopRequireDefault(_Text2);\n\t\n\tvar _IText = __webpack_require__(27);\n\t\n\tvar _IText2 = _interopRequireDefault(_IText);\n\t\n\tvar _ImageFilters = __webpack_require__(29);\n\t\n\tvar _ImageFilters2 = _interopRequireDefault(_ImageFilters);\n\t\n\tvar _Color = __webpack_require__(26);\n\t\n\tvar _Color2 = _interopRequireDefault(_Color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Main Bundle\n\texports.default = {\n\t\tStaticCanvas: _StaticCanvas3.default,\n\t\tCanvas: _Canvas3.default,\n\t\n\t\tCircle: _Circle3.default,\n\t\tEllipse: _Ellipse3.default,\n\t\tLine: _Line3.default,\n\t\tPath: _Path3.default,\n\t\tPathGroup: _PathGroup3.default,\n\t\tPolygon: _Polygon3.default,\n\t\tPolyline: _Polyline3.default,\n\t\tRect: _Rect3.default,\n\t\tTriangle: _Triangle3.default,\n\t\n\t\tImage: _Image3.default,\n\t\tText: _Text3.default,\n\t\tItext: _IText2.default,\n\t\n\t\timageFilter: _ImageFilters2.default,\n\t\tcolor: _Color2.default\n\t};\n\t\n\t// Canvas\n\t\n\tvar StaticCanvas = exports.StaticCanvas = _StaticCanvas3.default;\n\tvar Canvas = exports.Canvas = _Canvas3.default;\n\t\n\t// Shape\n\tvar Circle = exports.Circle = _Circle3.default;\n\tvar Ellipse = exports.Ellipse = _Ellipse3.default;\n\tvar Line = exports.Line = _Line3.default;\n\tvar Path = exports.Path = _Path3.default;\n\tvar PathGroup = exports.PathGroup = _PathGroup3.default;\n\tvar Polygon = exports.Polygon = _Polygon3.default;\n\tvar Polyline = exports.Polyline = _Polyline3.default;\n\tvar Rect = exports.Rect = _Rect3.default;\n\tvar Triangle = exports.Triangle = _Triangle3.default;\n\t\n\tvar Image = exports.Image = _Image3.default;\n\tvar Text = exports.Text = _Text3.default;\n\tvar Itext = exports.Itext = _IText2.default;\n\t\n\t// utils\n\tvar imageFilter = exports.imageFilter = _ImageFilters2.default;\n\tvar color = exports.color = _Color2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.6.0-rc.1\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(60)\n\t    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\tfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\t\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t\n\t    if (handler) {\n\t      fabric.util.removeFromArray(this.__eventListeners[eventName], handler);\n\t    }\n\t    else {\n\t      this.__eventListeners[eventName].length = 0;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [ ];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      // avoiding try/catch for perf. reasons\n\t      listenersForEvent[i].call(this, options || { });\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#events}\n\t   * @see {@link http://fabricjs.com/events/|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  /**\n\t   * Adds objects to collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      this._onObjectAdded(arguments[i]);\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Iteration happens in reverse order (for performance reasons).\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects(),\n\t        i = objects.length;\n\t    while (i--) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {Any} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = point.x * cos - point.y * sin,\n\t          ry = point.x * sin + point.y * cos;\n\t      return new fabric.Point(rx, ry).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length,\n\t          obj = global || fabric.window;\n\t\n\t      for (var i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {Any} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && typeof crossOrigin !== 'undefined') {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [ ];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [ ],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        if (klass.async) {\n\t          klass.fromObject(o, function (obj, error) {\n\t            if (!error) {\n\t              enlivenedObjects[index] = obj;\n\t              reviver && reviver(o, enlivenedObjects[index]);\n\t            }\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedObjects[index] = klass.fromObject(o);\n\t          reviver && reviver(o, enlivenedObjects[index]);\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.setSourcePath(path);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(13).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype;\n\t\n\t      for (var i = proto.stateProperties.length; i--; ) {\n\t\n\t        var propName = proto.stateProperties[i],\n\t            capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1),\n\t            setterName = 'set' + capitalizedPropName,\n\t            getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        a[0] * b[4] + a[2] * b[5] + a[4],\n\t        a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1);\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n\t        var temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl/(rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl /(rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( - cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( - sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[ ], [ ], [ ], [ ]],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound = [ ], bounds = [ ],\n\t    segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n\t    boundCopy = [[ ], [ ]];\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      boundCopy[0].x = bound[0].x + fx;\n\t      boundCopy[0].y = bound[0].y + fy;\n\t      boundCopy[1].x = bound[1].x + fx;\n\t      boundCopy[1].y = bound[1].y + fy;\n\t      bounds.push(boundCopy[0]);\n\t      bounds.push(boundCopy[1]);\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [ ],\n\t        bounds = [[ ], [ ]],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {Any} searchElement\n\t     * @param {Number} [fromIndex]\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [ ];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [ ], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [initial] Object to use as the first argument to the first call of the callback\n\t     * @return {Any}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [ ];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {Any}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {Any}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Copies all enumerable properties of one object to another\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t  function extend(destination, source) {\n\t    // JScript DontEnum bug is not taken care of\n\t    for (var property in source) {\n\t      destination[property] = source[property];\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object) {\n\t    return extend({ }, object);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t}());\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} [...] Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var fn = this.constructor.superclass.prototype[methodName];\n\t    return (arguments.length > 1)\n\t      ? fn.apply(this, slice.call(arguments, 1))\n\t      : fn.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [ ];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      element.addEventListener(eventName, handler, false);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      element.removeEventListener(eventName, handler, false);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [ ];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [ ];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t    return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t  },\n\t\n\t  pointerY = function(event) {\n\t    return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t  };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    while (element && element.parentNode) {\n\t\n\t      element = element.parentNode;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {Any} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {Any} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* jshint ignore:start */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* jshint ignore:end */\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || function() { },\n\t          abort = options.abort || function() { return false; },\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start);\n\t        if (abort()) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        onChange(easing(currentTime, startValue, byValue, duration));\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      s = p / (2 * Math.PI) * Math.asin(c / a);\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d/2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2/2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5/2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t}());\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      capitalize = fabric.util.string.capitalize,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t        return parseFloat(n);\n\t      });\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (!attributes[attr] || typeof attributes[colorAttributes[attr]] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var angle = args[0];\n\t\n\t      matrix[0] = Math.cos(angle);\n\t      matrix[1] = Math.sin(angle);\n\t      matrix[2] = -Math.sin(angle);\n\t      matrix[3] = Math.cos(angle);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewXMatrix(matrix, args) {\n\t      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function skewYMatrix(matrix, args) {\n\t      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [ ];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              return (match !== '' && match != null);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewXMatrix(matrix, args);\n\t            break;\n\t          case 'skewY':\n\t            skewYMatrix(matrix, args);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = normalizeAttr(pair[0].trim().toLowerCase());\n\t      value = normalizeValue(attr, pair[1].trim());\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = normalizeAttr(prop.toLowerCase());\n\t      value = normalizeValue(attr, style[prop]);\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, idAttr, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (idAttr === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = doc.getElementsByTagName('use'), i = 0;\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        while (el2.firstChild != null) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.tagName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { };\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]),\n\t    minY = -parseFloat(viewBoxAttr[2]),\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]),\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    // preserveAspectRatio attribute to be implemented\n\t    scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    matrix = ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.tagName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      while (element.firstChild != null) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished; It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   */\n\t  fabric.parseSVGDocument = (function() {\n\t\n\t    function hasAncestorWithNodeName(element, nodeName) {\n\t      while (element && (element = element.parentNode)) {\n\t        if (nodeName.test(element.nodeName) && !element.getAttribute('instantiated_by_use')) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    return function(doc, callback, reviver) {\n\t      if (!doc) {\n\t        return;\n\t      }\n\t\n\t      parseUseDirectives(doc);\n\t\n\t      var startTime = new Date(),\n\t          svgUid =  fabric.Object.__uid++,\n\t          options = applyViewboxTransform(doc),\n\t          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t\n\t      options.svgUid = svgUid;\n\t\n\t      if (descendants.length === 0 && fabric.isLikelyNode) {\n\t        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t        // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t        var arr = [ ];\n\t        for (var i = 0, len = descendants.length; i < len; i++) {\n\t          arr[i] = descendants[i];\n\t        }\n\t        descendants = arr;\n\t      }\n\t\n\t      var elements = descendants.filter(function(el) {\n\t        applyViewboxTransform(el);\n\t        return reAllowedSVGTagNames.test(el.tagName) &&\n\t              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t      });\n\t\n\t      if (!elements || (elements && !elements.length)) {\n\t        callback && callback([], {});\n\t        return;\n\t      }\n\t\n\t      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t      // Precedence of rules:   style > class > attribute\n\t      fabric.parseElements(elements, function(instances) {\n\t        fabric.documentParsingTime = new Date() - startTime;\n\t        if (callback) {\n\t          callback(instances, options);\n\t        }\n\t      }, clone(options), reviver);\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n\t   * @namespace\n\t   */\n\t  var svgCache = {\n\t\n\t    /**\n\t     * @param {String} name\n\t     * @param {Function} callback\n\t     */\n\t    has: function (name, callback) {\n\t      callback(false);\n\t    },\n\t\n\t    get: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    set: function () {\n\t      /* NOOP */\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _enlivenCachedObject(cachedObject) {\n\t\n\t    var objects = cachedObject.objects,\n\t        options = cachedObject.options;\n\t\n\t    objects = objects.map(function (o) {\n\t      return fabric[capitalize(o.type)].fromObject(o);\n\t    });\n\t\n\t    return ({ objects: objects, options: options });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _createSVGPattern(markup, canvas, property) {\n\t    if (canvas[property] && canvas[property].toSVG) {\n\t      markup.push(\n\t        '<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n\t          'width=\"', canvas[property].source.width,\n\t          '\" height=\"', canvas[property].source.height,\n\t          '\" patternUnits=\"userSpaceOnUse\">',\n\t        '<image x=\"0\" y=\"0\" ',\n\t        'width=\"', canvas[property].source.width,\n\t        '\" height=\"', canvas[property].source.height,\n\t        '\" xlink:href=\"', canvas[property].source.src,\n\t        '\"></image></pattern>'\n\t      );\n\t    }\n\t  }\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var linearGradientEls = doc.getElementsByTagName('linearGradient'),\n\t          radialGradientEls = doc.getElementsByTagName('radialGradient'),\n\t          el, i, j = 0, id, xlink, elList = [ ],\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      elList.length = linearGradientEls.length + radialGradientEls.length;\n\t      i = linearGradientEls.length;\n\t      while (i--) {\n\t        elList[j++] = linearGradientEls[i];\n\t      }\n\t      i = radialGradientEls.length;\n\t      while (i--) {\n\t        elList[j++] = radialGradientEls[i];\n\t      }\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) {\n\t          attr = normalizeAttr(attr);\n\t          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\t\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t      if (ownAttributes.font) {\n\t        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n\t      }\n\t      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [ ], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i+=2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        var styleContents = styles[i].textContent;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t          ruleObj = { }, declaration = match[2].trim(),\n\t          propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = normalizeAttr(pair[0]),\n\t                value = normalizeValue(property, pair[1], pair[0]);\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      svgCache.has(url, function (hasUrl) {\n\t        if (hasUrl) {\n\t          svgCache.get(url, function (value) {\n\t            var enlivedRecord = _enlivenCachedObject(value);\n\t            callback(enlivedRecord.objects, enlivedRecord.options);\n\t          });\n\t        }\n\t        else {\n\t          new fabric.util.request(url, {\n\t            method: 'get',\n\t            onComplete: onComplete\n\t          });\n\t        }\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          return;\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n\t          svgCache.set(url, {\n\t            objects: fabric.util.array.invoke(results, 'toObject'),\n\t            options: options\n\t          });\n\t          callback(results, options);\n\t        }, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n\t        callback(results, options);\n\t      }, reviver);\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function(objects) {\n\t      var markup = '';\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        if (objects[i].type !== 'text' || !objects[i].path) {\n\t          continue;\n\t        }\n\t\n\t        markup += [\n\t          //jscs:disable validateIndentation\n\t          '@font-face {',\n\t            'font-family: ', objects[i].fontFamily, '; ',\n\t            'src: url(\\'', objects[i].path, '\\')',\n\t          '}'\n\t          //jscs:enable validateIndentation\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '<style type=\"text/css\">',\n\t            '<![CDATA[',\n\t              markup,\n\t            ']]>',\n\t          '</style>'\n\t          //jscs:enable validateIndentation\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function(canvas) {\n\t      var markup = [ ];\n\t\n\t      _createSVGPattern(markup, canvas, 'backgroundColor');\n\t      _createSVGPattern(markup, canvas, 'overlayColor');\n\t\n\t      return markup.join('');\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_this, i) {\n\t      setTimeout(function() {\n\t        _this.createObject(_this.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName)];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return new Point(this.x + (that.x - this.x)/2, this.y + (that.y - this.y)/2);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.points.push(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var b1 = points[i],\n\t          b2 = points[(i + 1) % length],\n\t          inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {Number} r1\n\t   * @param {Number} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) format\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        this.setSource([255, 255, 255, 0]);\n\t        return;\n\t      }\n\t\n\t      source = Color.sourceFromHex(color);\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255, g /= 255, b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1/6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1/2) {\n\t      return q;\n\t    }\n\t    if (t < 2/3) {\n\t      return p + (q - p) * (2/3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1/3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1/3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6);\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset'),\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStop) {\n\t      for (var position in colorStop) {\n\t        var color = new fabric.Color(colorStop[position]);\n\t        this.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @return {Object}\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @param {Boolean} normalize Whether coords should be normalized\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = fabric.util.object.clone(this.coords),\n\t          markup, commonAttributes;\n\t\n\t      // colorStops must be sorted ascending\n\t      this.colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '<linearGradient ',\n\t            commonAttributes,\n\t            ' x1=\"', coords.x1,\n\t            '\" y1=\"', coords.y1,\n\t            '\" x2=\"', coords.x2,\n\t            '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t          //jscs:enable validateIndentation\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '<radialGradient ',\n\t            commonAttributes,\n\t            ' cx=\"', coords.x2,\n\t            '\" cy=\"', coords.y2,\n\t            '\" r=\"', coords.r2,\n\t            '\" fx=\"', coords.x1,\n\t            '\" fy=\"', coords.y1,\n\t          '\">\\n'\n\t          //jscs:enable validateIndentation\n\t        ];\n\t      }\n\t\n\t      for (var i = 0; i < this.colorStops.length; i++) {\n\t        markup.push(\n\t          //jscs:disable validateIndentation\n\t          '<stop ',\n\t            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n\t            '\" style=\"stop-color:', this.colorStops[i].color,\n\t            (this.colorStops[i].opacity != null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n\t          '\"/>\\n'\n\t          //jscs:enable validateIndentation\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(parseFloat(offset), color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type = (el.nodeName === 'linearGradient' ? 'linear' : 'radial'),\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords = { }, ellipseMatrix;\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry/object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t/**\n\t * Pattern class\n\t * @class fabric.Pattern\n\t * @see {@link http://fabricjs.com/patterns/|Pattern demo}\n\t * @see {@link http://fabricjs.com/dynamic-patterns/|DynamicPattern demo}\n\t * @see {@link fabric.Pattern#initialize} for constructor definition\n\t */\n\tfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t  /**\n\t   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t   * @type String\n\t   * @default\n\t   */\n\t  repeat: 'repeat',\n\t\n\t  /**\n\t   * Pattern horizontal offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetX: 0,\n\t\n\t  /**\n\t   * Pattern vertical offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetY: 0,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Pattern} thisArg\n\t   */\n\t  initialize: function(options) {\n\t    options || (options = { });\n\t\n\t    this.id = fabric.Object.__uid++;\n\t\n\t    if (options.source) {\n\t      if (typeof options.source === 'string') {\n\t        // function string\n\t        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t          this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        }\n\t        else {\n\t          // img src string\n\t          var _this = this;\n\t          this.source = fabric.util.createImage();\n\t          fabric.util.loadImage(options.source, function(img) {\n\t            _this.source = img;\n\t          });\n\t        }\n\t      }\n\t      else {\n\t        // img element\n\t        this.source = options.source;\n\t      }\n\t    }\n\t    if (options.repeat) {\n\t      this.repeat = options.repeat;\n\t    }\n\t    if (options.offsetX) {\n\t      this.offsetX = options.offsetX;\n\t    }\n\t    if (options.offsetY) {\n\t      this.offsetY = options.offsetY;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of a pattern\n\t   * @return {Object} Object representation of a pattern instance\n\t   */\n\t  toObject: function() {\n\t\n\t    var source;\n\t\n\t    // callback\n\t    if (typeof this.source === 'function') {\n\t      source = String(this.source);\n\t    }\n\t    // <img> element\n\t    else if (typeof this.source.src === 'string') {\n\t      source = this.source.src;\n\t    }\n\t    // <canvas> element\n\t    else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t      source = this.source.toDataURL();\n\t    }\n\t\n\t    return {\n\t      source: source,\n\t      repeat: this.repeat,\n\t      offsetX: this.offsetX,\n\t      offsetY: this.offsetY\n\t    };\n\t  },\n\t\n\t  /* _TO_SVG_START_ */\n\t  /**\n\t   * Returns SVG representation of a pattern\n\t   * @param {fabric.Object} object\n\t   * @return {String} SVG representation of a pattern\n\t   */\n\t  toSVG: function(object) {\n\t    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t        patternWidth = patternSource.width / object.getWidth(),\n\t        patternHeight = patternSource.height / object.getHeight(),\n\t        patternOffsetX = this.offsetX / object.getWidth(),\n\t        patternOffsetY = this.offsetY / object.getHeight(),\n\t        patternImgSrc = '';\n\t    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t      patternHeight = 1;\n\t    }\n\t    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t      patternWidth = 1;\n\t    }\n\t    if (patternSource.src) {\n\t      patternImgSrc = patternSource.src;\n\t    }\n\t    else if (patternSource.toDataURL) {\n\t      patternImgSrc = patternSource.toDataURL();\n\t    }\n\t\n\t    return '<pattern id=\"SVGID_' + this.id +\n\t                  '\" x=\"' + patternOffsetX +\n\t                  '\" y=\"' + patternOffsetY +\n\t                  '\" width=\"' + patternWidth +\n\t                  '\" height=\"' + patternHeight + '\">\\n' +\n\t             '<image x=\"0\" y=\"0\"' +\n\t                    ' width=\"' + patternSource.width +\n\t                    '\" height=\"' + patternSource.height +\n\t                    '\" xlink:href=\"' + patternImgSrc +\n\t             '\"></image>\\n' +\n\t           '</pattern>\\n';\n\t  },\n\t  /* _TO_SVG_END_ */\n\t\n\t  /**\n\t   * Returns an instance of CanvasPattern\n\t   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t   * @return {CanvasPattern}\n\t   */\n\t  toLive: function(ctx) {\n\t    var source = typeof this.source === 'function'\n\t      ? this.source()\n\t      : this.source;\n\t\n\t    // if the image failed to load, return, and allow rest to continue loading\n\t    if (!source) {\n\t      return '';\n\t    }\n\t\n\t    // if an image\n\t    if (typeof source.src !== 'undefined') {\n\t      if (!source.complete) {\n\t        return '';\n\t      }\n\t      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t        return '';\n\t      }\n\t    }\n\t    return ctx.createPattern(source, this.repeat);\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows/|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [ ],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(this.offsetX) + this.blur) / object.width, 2) * 100 + 20;\n\t        fBoxY = toFixed((Math.abs(this.offsetY) + this.blur) / object.height, 2) * 100 + 20;\n\t      }\n\t\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, 3) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + this.offsetX + '\" dy=\"' + this.offsetY + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t      if (this.color !== proto.color) {\n\t        obj.color = this.color;\n\t      }\n\t      if (this.blur !== proto.blur) {\n\t        obj.blur = this.blur;\n\t      }\n\t      if (this.offsetX !== proto.offsetX) {\n\t        obj.offsetX = this.offsetX;\n\t      }\n\t      if (this.offsetY !== proto.offsetY) {\n\t        obj.offsetY = this.offsetY;\n\t      }\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas/|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      fabric.StaticCanvas.activeInstance = this;\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: true,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: [1, 0, 0, 1, 0, 0],\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      this._objects = [];\n\t\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, this.renderAll.bind(this));\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, this.renderAll.bind(this));\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, this.renderAll.bind(this));\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, this.renderAll.bind(this));\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (fabric.devicePixelRatio === 1 || !this.enableRetinaScaling) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      if (typeof ctx.imageSmoothingEnabled !== 'undefined') {\n\t        ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t        return;\n\t      }\n\t      ctx.webkitImageSmoothingEnabled = this.imageSmoothingEnabled;\n\t      ctx.mozImageSmoothingEnabled    = this.imageSmoothingEnabled;\n\t      ctx.msImageSmoothingEnabled     = this.imageSmoothingEnabled;\n\t      ctx.oImageSmoothingEnabled      = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          this[property] = new fabric.Image(img, options);\n\t          callback && callback();\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      if (color && color.source) {\n\t        var _this = this;\n\t        fabric.util.loadImage(color.source, function(img) {\n\t          _this[property] = new fabric.Pattern({\n\t            source: img,\n\t            repeat: color.repeat,\n\t            offsetX: color.offsetX,\n\t            offsetY: color.offsetY\n\t          });\n\t          callback && callback();\n\t        });\n\t      }\n\t      else {\n\t        this[property] = color;\n\t        callback && callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function() {\n\t      var element = fabric.document.createElement('canvas');\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      this._initCanvasElement(element);\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element\n\t     */\n\t    _initCanvasElement: function(element) {\n\t      fabric.util.createCanvasElement(element);\n\t\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n\t      this._initCanvasElement(this.lowerCanvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this.getActiveGroup();\n\t      this.viewportTransform = vpt;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point;\n\t      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n\t      this.viewportTransform[0] = value;\n\t      this.viewportTransform[3] = value;\n\t      var after = fabric.util.transformPoint(point, this.viewportTransform);\n\t      this.viewportTransform[4] += before.x - after.x;\n\t      this.viewportTransform[5] += before.y - after.y;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      this.viewportTransform[4] = -point.x;\n\t      this.viewportTransform[5] = -point.y;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * Returns currently selected object, if any\n\t     * @return {fabric.Object}\n\t     */\n\t    getActiveObject: function() {\n\t      return null;\n\t    },\n\t\n\t    /**\n\t     * Returns currently selected group of object, if any\n\t     * @return {fabric.Group}\n\t     */\n\t    getActiveGroup: function() {\n\t      return null;\n\t    },\n\t\n\t    /**\n\t     * Given a context, renders an object on that context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render object on\n\t     * @param {fabric.Object} object Object to render\n\t     * @private\n\t     */\n\t    _draw: function (ctx, object) {\n\t      if (!object) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      var v = this.viewportTransform;\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      if (this._shouldRenderObject(object)) {\n\t        object.render(ctx);\n\t      }\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay) {\n\t        object._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    _shouldRenderObject: function(object) {\n\t      if (!object) {\n\t        return false;\n\t      }\n\t      return (object !== this.getActiveGroup() || !this.preserveObjectStacking);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared');\n\t      }\n\t\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      if (this.discardActiveGroup) {\n\t        this.discardActiveGroup();\n\t      }\n\t      if (this.discardActiveObject) {\n\t        this.discardActiveObject();\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      if (this.contextTop) {\n\t        this.clearContext(this.contextTop);\n\t      }\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @param {Boolean} [allOnTop] Whether we want to force all images to be rendered on the top canvas\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function (allOnTop) {\n\t      var canvasToDrawOn = this[(allOnTop === true && this.interactive) ? 'contextTop' : 'contextContainer'],\n\t          activeGroup = this.getActiveGroup();\n\t\n\t      if (this.contextTop && this.selection && !this._groupSelector) {\n\t        this.clearContext(this.contextTop);\n\t      }\n\t\n\t      if (!allOnTop) {\n\t        this.clearContext(canvasToDrawOn);\n\t      }\n\t\n\t      this.fire('before:render');\n\t\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, canvasToDrawOn);\n\t      }\n\t\n\t      this._renderBackground(canvasToDrawOn);\n\t      this._renderObjects(canvasToDrawOn, activeGroup);\n\t      this._renderActiveGroup(canvasToDrawOn, activeGroup);\n\t\n\t      if (this.clipTo) {\n\t        canvasToDrawOn.restore();\n\t      }\n\t\n\t      this._renderOverlay(canvasToDrawOn);\n\t\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(canvasToDrawOn);\n\t      }\n\t\n\t      this.fire('after:render');\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {fabric.Group} activeGroup\n\t     */\n\t    _renderObjects: function(ctx, activeGroup) {\n\t      var i, length;\n\t\n\t      // fast path\n\t      if (!activeGroup || this.preserveObjectStacking) {\n\t        for (i = 0, length = this._objects.length; i < length; ++i) {\n\t          this._draw(ctx, this._objects[i]);\n\t        }\n\t      }\n\t      else {\n\t        for (i = 0, length = this._objects.length; i < length; ++i) {\n\t          if (this._objects[i] && !activeGroup.contains(this._objects[i])) {\n\t            this._draw(ctx, this._objects[i]);\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {fabric.Group} activeGroup\n\t     */\n\t    _renderActiveGroup: function(ctx, activeGroup) {\n\t\n\t      // delegate rendering to group selection (if one exists)\n\t      if (activeGroup) {\n\t\n\t        //Store objects in group preserving order, then replace\n\t        var sortedObjects = [];\n\t        this.forEachObject(function (object) {\n\t          if (activeGroup.contains(object)) {\n\t            sortedObjects.push(object);\n\t          }\n\t        });\n\t        // forEachObject reverses the object, so we reverse again\n\t        activeGroup._set('_objects', sortedObjects.reverse());\n\t        this._draw(ctx, activeGroup);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (this.backgroundColor) {\n\t        ctx.fillStyle = this.backgroundColor.toLive\n\t          ? this.backgroundColor.toLive(ctx)\n\t          : this.backgroundColor;\n\t\n\t        ctx.fillRect(\n\t          this.backgroundColor.offsetX || 0,\n\t          this.backgroundColor.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      if (this.backgroundImage) {\n\t        this._draw(ctx, this.backgroundImage);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      if (this.overlayColor) {\n\t        ctx.fillStyle = this.overlayColor.toLive\n\t          ? this.overlayColor.toLive(ctx)\n\t          : this.overlayColor;\n\t\n\t        ctx.fillRect(\n\t          this.overlayColor.offsetX || 0,\n\t          this.overlayColor.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      if (this.overlayImage) {\n\t        this._draw(ctx, this.overlayImage);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop || this.contextContainer;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection();\n\t      }\n\t\n\t      // delegate rendering to group selection if one exists\n\t      // used for drawing selection borders/controls\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.render(ctx);\n\t      }\n\t\n\t      this._renderOverlay(ctx);\n\t\n\t      this.fire('after:render');\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      this._centerObject(object, new fabric.Point(center.left, center.top));\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay());\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {};\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function() {\n\t      var data = {\n\t        background: (this.backgroundColor && this.backgroundColor.toObject)\n\t          ? this.backgroundColor.toObject()\n\t          : this.backgroundColor\n\t      };\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject()\n\t          : this.overlayColor;\n\t      }\n\t      if (this.backgroundImage) {\n\t        data.backgroundImage = this.backgroundImage.toObject();\n\t      }\n\t      if (this.overlayImage) {\n\t        data.overlayImage = this.overlayImage.toObject();\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage');\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage');\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (!options.suppressPreamble) {\n\t        markup.push(\n\t          '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>',\n\t            '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t              '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width, height, vpt;\n\t\n\t      if (options.viewBox) {\n\t        width = options.viewBox.width;\n\t        height = options.viewBox.height;\n\t      }\n\t      else {\n\t        width = this.width;\n\t        height = this.height;\n\t        if (!this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          width /= vpt[0];\n\t          height /= vpt[3];\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          (this.backgroundColor && !this.backgroundColor.toLive\n\t            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n\t            : null),\n\t          (options.viewBox\n\t              ? 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" '\n\t              : null),\n\t          'xml:space=\"preserve\">',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>',\n\t        '<defs>',\n\t          fabric.createSVGFontFacesMarkup(this.getObjects()),\n\t          fabric.createSVGRefElementsMarkup(this),\n\t        '</defs>'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        var instance = objects[i],\n\t            //If the object is in a selection group, simulate what would happen to that\n\t            //object when the group is deselected\n\t            originalProperties = this._realizeGroupTransformOnObject(instance);\n\t        markup.push(instance.toSVG(reviver));\n\t        this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG());\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      if (this[property] && this[property].source) {\n\t        markup.push(\n\t          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n\t            'width=\"',\n\t              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.height\n\t                : this.height),\n\t            '\" fill=\"url(#' + property + 'Pattern)\"',\n\t          '></rect>'\n\t        );\n\t      }\n\t      else if (this[property] && property === 'overlayColor') {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.unshift(object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.push(object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      var idx = this._objects.indexOf(object);\n\t\n\t      // if object is not on the bottom of stack\n\t      if (idx !== 0) {\n\t        var newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t\n\t        removeFromArray(this._objects, object);\n\t        this._objects.splice(newIdx, 0, object);\n\t        this.renderAll && this.renderAll();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      var idx = this._objects.indexOf(object);\n\t\n\t      // if object is not on top of stack (last item in an array)\n\t      if (idx !== this._objects.length - 1) {\n\t        var newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t\n\t        removeFromArray(this._objects, object);\n\t        this._objects.splice(newIdx, 0, object);\n\t        this.renderAll && this.renderAll();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      this.interactive && this.removeListeners();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing/|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color:            'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:            1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow:           null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap:    'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin:   'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray:  null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur;\n\t    ctx.shadowOffsetX = this.shadow.offsetX;\n\t    ctx.shadowOffsetY = this.shadow.offsetY;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [ ];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        p1.x -= 0.5;\n\t        p2.x += 0.5;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (var i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @param {Number} minX\n\t     * @param {Number} minY\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [],\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y);\n\t\n\t      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n\t      for (var i = 1, len = points.length; i < len; i++) {\n\t        var midPoint = p1.midPointFrom(p2);\n\t        // p1 is our bezier control point\n\t        // midpoint is our endpoint\n\t        // start point is p(i-1) value.\n\t        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        p1 = new fabric.Point(points[i].x, points[i].y);\n\t        if ((i + 1) < points.length) {\n\t          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n\t        }\n\t      }\n\t      path.push('L ', p1.x, ' ', p1.y, ' ');\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t                   fill: null,\n\t                   stroke: this.color,\n\t                   strokeWidth: this.width,\n\t                   strokeLineCap: this.strokeLineCap,\n\t                   strokeLineJoin: this.strokeLineJoin,\n\t                   strokeDashArray: this.strokeDashArray,\n\t                   originX: 'center',\n\t                   originY: 'center'\n\t                 });\n\t\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [ ];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [ ];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [ ];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [ ];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [ ];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [ ];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData);\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction()\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t\n\t      fabric.Canvas.activeInstance = this;\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [ ],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4/#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _resetCurrentTransform: function(e) {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(e, t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target) {\n\t      var pointer = this.getPointer(e, true),\n\t          xy = this._normalizePointer(target, pointer);\n\t\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          x = pointer.x,\n\t          y = pointer.y,\n\t          isObjectInGroup = (\n\t            activeGroup &&\n\t            object.type !== 'group' &&\n\t            activeGroup.contains(object)),\n\t          lt;\n\t\n\t      if (isObjectInGroup) {\n\t        lt = fabric.util.transformPoint(activeGroup.getCenterPoint(), this.viewportTransform, true);\n\t        x -= lt.x;\n\t        y -= lt.y;\n\t        x /= activeGroup.scaleX;\n\t        y /= activeGroup.scaleY;\n\t      }\n\t      return { x: x, y: y };\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t\n\t      this._draw(this.contextCache, target);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        this.contextCache, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(this.contextCache);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e.shiftKey)\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !e.altKey : e.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner) {\n\t      var action = 'drag';\n\t      if (corner) {\n\t        action = (corner === 'ml' || corner === 'mr')\n\t          ? 'scaleX'\n\t          : (corner === 'mt' || corner === 'mb')\n\t            ? 'scaleY'\n\t            : corner === 'mtr'\n\t              ? 'rotate'\n\t              : 'scale';\n\t      }\n\t      return action;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform(e);\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var target = this._currentTransform.target;\n\t\n\t      if (!target.get('lockMovementX')) {\n\t        target.set('left', x - this._currentTransform.offsetX);\n\t      }\n\t      if (!target.get('lockMovementY')) {\n\t        target.set('top', y - this._currentTransform.offsetY);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY);\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false,\n\t          dim = target._getNonTransformedDimensions();\n\t\n\t      transform.newScaleX = localMouse.x / dim.x;\n\t      transform.newScaleY = localMouse.y / dim.y;\n\t\n\t      if (lockScalingFlip && transform.newScaleX <= 0 && transform.newScaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && transform.newScaleY <= 0 && transform.newScaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || this._scaleObjectEqually(localMouse, target, transform);\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || target.set('scaleX', transform.newScaleX);\n\t        forbidScalingY || lockScalingY || target.set('scaleY', transform.newScaleY);\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || target.set('scaleX', transform.newScaleX);\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || target.set('scaleY', transform.newScaleY);\n\t      }\n\t\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          dim = target._getNonTransformedDimensions(),\n\t          lastDist = dim.y * transform.original.scaleY +\n\t                     dim.x * transform.original.scaleX;\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n\t      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\t\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > target.padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += target.padding;\n\t        }\n\t        else {\n\t          localMouse.x -= target.padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > target.padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += target.padding;\n\t        }\n\t        else {\n\t          localMouse.y -= target.padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t\n\t      t.target.angle = angle % 360;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawSelection: function () {\n\t      var ctx = this.contextTop,\n\t          groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      ctx.fillRect(\n\t        groupSelector.ex - ((left > 0) ? 0 : -left),\n\t        groupSelector.ey - ((top > 0) ? 0 : -top),\n\t        aleft,\n\t        atop\n\t      );\n\t\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0: aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0: atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isLastRenderedObject: function(e) {\n\t      return (\n\t        this.controlsAboveOverlay &&\n\t        this.lastRenderedObjectWithControlsAboveOverlay &&\n\t        this.lastRenderedObjectWithControlsAboveOverlay.visible &&\n\t        this.containsPoint(e, this.lastRenderedObjectWithControlsAboveOverlay) &&\n\t        this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(this.getPointer(e, true)));\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, group is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      if (this._isLastRenderedObject(e)) {\n\t        return this.lastRenderedObjectWithControlsAboveOverlay;\n\t      }\n\t\n\t      // first check current group (if one exists)\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup && !skipGroup && this.containsPoint(e, activeGroup)) {\n\t        return activeGroup;\n\t      }\n\t\n\t      var target = this._searchPossibleTargets(e, skipGroup);\n\t      this._fireOverOutEvents(target, e);\n\t\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      if (target) {\n\t        if (this._hoveredTarget !== target) {\n\t          if (this._hoveredTarget) {\n\t            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t            this._hoveredTarget.fire('mouseout');\n\t          }\n\t          this.fire('mouse:over', { target: target, e: e });\n\t          target.fire('mouseover');\n\t          this._hoveredTarget = target;\n\t        }\n\t      }\n\t      else if (this._hoveredTarget) {\n\t        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t        this._hoveredTarget.fire('mouseout');\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(e, obj, pointer) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(e, obj)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(e, skipGroup) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target,\n\t          pointer = this.getPointer(e, true),\n\t          i = this._objects.length;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if ((!this._objects[i].group || skipGroup) && this._checkTarget(e, this._objects[i], pointer)){\n\t          this.relatedTarget = this._objects[i];\n\t          target = this._objects[i];\n\t          break;\n\t        }\n\t      }\n\t\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * @param {Event} e\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = fabric.util.transformPoint(\n\t          pointer,\n\t          fabric.util.invertTransform(this.viewportTransform)\n\t        );\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      this.upperCanvasEl = this._createCanvasElement();\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      this._setActiveObject(object);\n\t      this.renderAll();\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      this._discardActiveObject();\n\t      this.renderAll();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a speicified one\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      this._discardActiveGroup();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length;\n\t      for ( ; i < len; i++) {\n\t        allObjects[i].set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t      if (activeObject) {\n\t        this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t      }\n\t      this.deactivateAll();\n\t      if (activeObject) {\n\t        this.fire('selection:cleared', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        this._drawGroupControls(ctx, activeGroup);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawGroupControls: function(ctx, activeGroup) {\n\t      activeGroup._renderControls(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t        this.lastRenderedObjectWithControlsAboveOverlay = this._objects[i];\n\t      }\n\t    }\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t    mt: 0, // n\n\t    tr: 1, // ne\n\t    mr: 2, // e\n\t    br: 3, // se\n\t    mb: 4, // s\n\t    bl: 5, // sw\n\t    ml: 6, // w\n\t    tl: 7 // nw\n\t  },\n\t  addListener = fabric.util.addListener,\n\t  removeListener = fabric.util.removeListener;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js wheel event\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onMouseWheel: function(e, self) {\n\t      this.__onMouseWheel && this.__onMouseWheel(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp);\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t      var target;\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      if (this._currentTransform) {\n\t        this._finalizeCurrentTransform();\n\t        target = this._currentTransform.target;\n\t      }\n\t      else {\n\t        target = this.findTarget(e, true);\n\t      }\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      this._maybeGroupObjects(e);\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t\n\t      shouldRender && this.renderAll();\n\t\n\t      this._handleCursorAndEvent(e, target);\n\t    },\n\t\n\t    _handleCursorAndEvent: function(e, target) {\n\t      this._setCursorFromEvent(e, target);\n\t\n\t      // TODO: why are we doing this?\n\t      var _this = this;\n\t      setTimeout(function () {\n\t        _this._setCursorFromEvent(e, target);\n\t      }, 50);\n\t\n\t      this.fire('mouse:up', { target: target, e: e });\n\t      target && target.fire('mouseup', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _finalizeCurrentTransform: function() {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t\n\t      // only fire :modified event if target coordinates were changed during mousedown-mouseup\n\t      if (this.stateful && target.hasStateChanged()) {\n\t        this.fire('object:modified', { target: target });\n\t        target.fire('modified');\n\t      }\n\t\n\t      this._restoreOriginXY(target);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var ivt = fabric.util.invertTransform(this.viewportTransform),\n\t          pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this.fire('mouse:down', { e: e });\n\t\n\t      var target = this.findTarget(e);\n\t      if (typeof target !== 'undefined') {\n\t        target.fire('mousedown', { e: e, target: target });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var ivt = fabric.util.invertTransform(this.viewportTransform),\n\t            pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this.fire('mouse:move', { e: e });\n\t\n\t      var target = this.findTarget(e);\n\t      if (typeof target !== 'undefined') {\n\t        target.fire('mousemove', { e: e, target: target });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this.fire('mouse:up', { e: e });\n\t\n\t      var target = this.findTarget(e);\n\t      if (typeof target !== 'undefined') {\n\t        target.fire('mouseup', { e: e, target: target });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clic ked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      // accept only left clicks\n\t      var isLeftClick  = 'which' in e ? e.which === 1 : e.button === 1;\n\t      if (!isLeftClick && !fabric.isTouchSupported) {\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      var target = this.findTarget(e),\n\t          pointer = this.getPointer(e, true);\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this._clearSelection(e, target, pointer);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (target && target.selectable && !shouldGroup) {\n\t        this._beforeTransform(e, target);\n\t        this._setupCurrentTransform(e, target);\n\t      }\n\t      // we must renderAll so that active image is placed on the top canvas\n\t      shouldRender && this.renderAll();\n\t\n\t      this.fire('mouse:down', { target: target, e: e });\n\t      target && target.fire('mousedown', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t      if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n\t        this.deactivateAll();\n\t        this.setActiveObject(target, e);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearSelection: function(e, target, pointer) {\n\t      this.deactivateAllWithDispatch(e);\n\t\n\t      if (target && target.selectable) {\n\t        this.setActiveObject(target, e);\n\t      }\n\t      else if (this.selection) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t\n\t        target = this.findTarget(e);\n\t\n\t        if (!target || target && !target.selectable) {\n\t          this.setCursor(this.defaultCursor);\n\t        }\n\t        else {\n\t          this._setCursorFromEvent(e, target);\n\t        }\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t\n\t      this.fire('mouse:move', { target: target, e: e });\n\t      target && target.fire('mousemove', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false,\n\t      transform.target.isMoving = true;\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action;\n\t\n\t      if (action === 'rotate') {\n\t        this._rotateObject(x, y);\n\t        this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        this._onScale(e, transform, x, y);\n\t        this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        this._scaleObject(x, y, 'x');\n\t        this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        this._scaleObject(x, y, 'y');\n\t        this._fire('scaling', target, e);\n\t      }\n\t      else {\n\t        this._translateObject(x, y);\n\t        this._fire('moving', target, e);\n\t        this.setCursor(this.moveCursor);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(e, transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform(e);\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      // rotate object only if shift key is not pressed\n\t      // and if it is not a group we are transforming\n\t      if ((e.shiftKey || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform(e, transform.target);\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target || !target.selectable) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t      else {\n\t        var activeGroup = this.getActiveGroup(),\n\t            // only show proper corner when group selection is not active\n\t            corner = target._findTargetCorner\n\t                      && (!activeGroup || !activeGroup.contains(target))\n\t                      && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t        if (!corner) {\n\t          this.setCursor(target.hoverCursor || this.hoverCursor);\n\t        }\n\t        else {\n\t          this._setCornerCursor(corner, target);\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e.shiftKey &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t\n\t      if (target === this.getActiveGroup()) {\n\t\n\t        // if it's a group, find target again, this time skipping group\n\t        target = this.findTarget(e, true);\n\t\n\t        // if even object is not found, bail out\n\t        if (!target || target.isType('group')) {\n\t          return;\n\t        }\n\t      }\n\t      if (this.getActiveGroup()) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        this._resetObjectTransform(activeGroup);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0));\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t        this._resetObjectTransform(activeGroup);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [ this._activeObject, target ]\n\t            : [ target, this._activeObject ];\n\t\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [ ],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t   * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t   * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'jpeg',\n\t   *   quality: 0.8\n\t   * });\n\t   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'png',\n\t   *   left: 100,\n\t   *   top: 100,\n\t   *   width: 200,\n\t   *   height: 200\n\t   * });\n\t   * @example <caption>Generate double scaled png dataURL</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'png',\n\t   *   multiplier: 2\n\t   * });\n\t   */\n\t  toDataURL: function (options) {\n\t    options || (options = { });\n\t\n\t    var format = options.format || 'png',\n\t        quality = options.quality || 1,\n\t        multiplier = options.multiplier || 1,\n\t        cropping = {\n\t          left: options.left,\n\t          top: options.top,\n\t          width: options.width,\n\t          height: options.height\n\t        };\n\t\n\t    if (multiplier !== 1) {\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    }\n\t    else {\n\t      return this.__toDataURL(format, quality, cropping);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __toDataURL: function(format, quality, cropping) {\n\t\n\t    this.renderAll(true);\n\t\n\t    var canvasEl = this.upperCanvasEl || this.lowerCanvasEl,\n\t        croppedCanvasEl = this.__getCroppedCanvas(canvasEl, cropping);\n\t\n\t    // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t    if (format === 'jpg') {\n\t      format = 'jpeg';\n\t    }\n\t\n\t    var data = (fabric.StaticCanvas.supports('toDataURLWithQuality'))\n\t              ? (croppedCanvasEl || canvasEl).toDataURL('image/' + format, quality)\n\t              : (croppedCanvasEl || canvasEl).toDataURL('image/' + format);\n\t\n\t    this.contextTop && this.clearContext(this.contextTop);\n\t    this.renderAll();\n\t\n\t    if (croppedCanvasEl) {\n\t      croppedCanvasEl = null;\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __getCroppedCanvas: function(canvasEl, cropping) {\n\t\n\t    var croppedCanvasEl,\n\t        croppedCtx,\n\t        shouldCrop = 'left' in cropping ||\n\t                     'top' in cropping ||\n\t                     'width' in cropping ||\n\t                     'height' in cropping;\n\t\n\t    if (shouldCrop) {\n\t\n\t      croppedCanvasEl = fabric.util.createCanvasElement();\n\t      croppedCtx = croppedCanvasEl.getContext('2d');\n\t\n\t      croppedCanvasEl.width = cropping.width || this.width;\n\t      croppedCanvasEl.height = cropping.height || this.height;\n\t\n\t      croppedCtx.drawImage(canvasEl, -cropping.left || 0, -cropping.top || 0);\n\t    }\n\t\n\t    return croppedCanvasEl;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t    var origWidth = this.getWidth(),\n\t        origHeight = this.getHeight(),\n\t        scaledWidth = origWidth * multiplier,\n\t        scaledHeight = origHeight * multiplier,\n\t        activeObject = this.getActiveObject(),\n\t        activeGroup = this.getActiveGroup(),\n\t\n\t        ctx = this.contextTop || this.contextContainer;\n\t\n\t    if (multiplier > 1) {\n\t      this.setWidth(scaledWidth).setHeight(scaledHeight);\n\t    }\n\t    ctx.scale(multiplier, multiplier);\n\t\n\t    if (cropping.left) {\n\t      cropping.left *= multiplier;\n\t    }\n\t    if (cropping.top) {\n\t      cropping.top *= multiplier;\n\t    }\n\t    if (cropping.width) {\n\t      cropping.width *= multiplier;\n\t    }\n\t    else if (multiplier < 1) {\n\t      cropping.width = scaledWidth;\n\t    }\n\t    if (cropping.height) {\n\t      cropping.height *= multiplier;\n\t    }\n\t    else if (multiplier < 1) {\n\t      cropping.height = scaledHeight;\n\t    }\n\t\n\t    if (activeGroup) {\n\t      // not removing group due to complications with restoring it with correct state afterwords\n\t      this._tempRemoveBordersControlsFromGroup(activeGroup);\n\t    }\n\t    else if (activeObject && this.deactivateAll) {\n\t      this.deactivateAll();\n\t    }\n\t\n\t    this.renderAll(true);\n\t\n\t    var data = this.__toDataURL(format, quality, cropping);\n\t\n\t    // restoring width, height for `renderAll` to draw\n\t    // background properly (while context is scaled)\n\t    this.width = origWidth;\n\t    this.height = origHeight;\n\t\n\t    ctx.scale(1 / multiplier,  1 / multiplier);\n\t    this.setWidth(origWidth).setHeight(origHeight);\n\t\n\t    if (activeGroup) {\n\t      this._restoreBordersControlsOnGroup(activeGroup);\n\t    }\n\t    else if (activeObject && this.setActiveObject) {\n\t      this.setActiveObject(activeObject);\n\t    }\n\t\n\t    this.contextTop && this.clearContext(this.contextTop);\n\t    this.renderAll();\n\t\n\t    return data;\n\t  },\n\t\n\t  /**\n\t   * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t   * @deprecated since 1.0.13\n\t   * @param {String} format (png|jpeg)\n\t   * @param {Number} multiplier\n\t   * @param {Number} quality (0..1)\n\t   * @return {String}\n\t   */\n\t  toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t    return this.toDataURL({\n\t      format: format,\n\t      multiplier: multiplier,\n\t      quality: quality\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _tempRemoveBordersControlsFromGroup: function(group) {\n\t    group.origHasControls = group.hasControls;\n\t    group.origBorderColor = group.borderColor;\n\t\n\t    group.hasControls = true;\n\t    group.borderColor = 'rgba(0,0,0,0)';\n\t\n\t    group.forEachObject(function(o) {\n\t      o.origBorderColor = o.borderColor;\n\t      o.borderColor = 'rgba(0,0,0,0)';\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _restoreBordersControlsOnGroup: function(group) {\n\t    group.hideControls = group.origHideControls;\n\t    group.borderColor = group.origBorderColor;\n\t\n\t    group.forEachObject(function(o) {\n\t      o.borderColor = o.origBorderColor;\n\t      delete o.origBorderColor;\n\t    });\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : json;\n\t\n\t    this.clear();\n\t\n\t    var _this = this;\n\t    this._enlivenObjects(serialized.objects, function () {\n\t      _this._setBgOverlay(serialized, callback);\n\t    }, reviver);\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var _this = this,\n\t        loaded = {\n\t          backgroundColor: false,\n\t          overlayColor: false,\n\t          backgroundImage: false,\n\t          overlayImage: false\n\t        };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        _this.renderAll();\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t\n\t    cbIfLoaded();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.Image.fromObject(value, function(img) {\n\t        _this[property] = img;\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    var _this = this;\n\t\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      enlivenedObjects.forEach(function(obj, index) {\n\t        _this.insertAt(obj, index, true);\n\t      });\n\t\n\t      _this.renderOnAddRemove = renderOnAddRemove;\n\t      callback && callback();\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   */\n\t  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object center. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object center. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               12,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object. Only works with text objects at the moment.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t\n\t    lockScalingFlip:          false,\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:  (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'alignX alignY meetOrSlice'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initGradient: function(options) {\n\t      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n\t        this.set('fill', new fabric.Gradient(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n\t        this.set('stroke', new fabric.Gradient(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initPattern: function(options) {\n\t      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n\t        this.set('fill', new fabric.Pattern(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n\t        this.set('stroke', new fabric.Pattern(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initClipping: function(options) {\n\t      if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t        return;\n\t      }\n\t\n\t      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t      if (typeof functionBody !== 'undefined') {\n\t        this.clipTo = new Function('ctx', functionBody);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this.set(prop, options[prop]);\n\t      }\n\t      this._initGradient(options);\n\t      this._initPattern(options);\n\t      this._initClipping(options);\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && this.canvas.preserveObjectStacking && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix\n\t          };\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Basic getter\n\t     * @param {String} property Property name\n\t     * @return {Any} value of a property\n\t     */\n\t    get: function(property) {\n\t      return this[property];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObject: function(obj) {\n\t      for (var prop in obj) {\n\t        this._set(prop, obj[prop]);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    set: function(key, value) {\n\t      if (typeof key === 'object') {\n\t        this._setObject(key);\n\t      }\n\t      else {\n\t        if (typeof value === 'function' && key !== 'clipTo') {\n\t          this._set(key, value(this.get(key)));\n\t        }\n\t        else {\n\t          this._set(key, value);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = toFixed(Math.min(0.1, 1/Math.max(this.width, this.height)), 2);\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Toggles specified property from `true` to `false` or from `false` to `true`\n\t     * @param {String} property Property to toggle\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    toggle: function(property) {\n\t      var value = this.get(property);\n\t      if (typeof value === 'boolean') {\n\t        this.set(property, !value);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value // TODO\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if ((this.width === 0 && this.height === 0) || !this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._render(ctx, noTransform);\n\t      this.clipTo && ctx.restore();\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      if (this.group) {\n\t        this.group._setOpacity(ctx);\n\t      }\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      if (!this.active || noTransform) {\n\t        return;\n\t      }\n\t      var vpt = this.getViewportTransform();\n\t      ctx.save();\n\t      var center;\n\t      if (this.group) {\n\t        center = fabric.util.transformPoint(this.group.getCenterPoint(), vpt);\n\t        ctx.translate(center.x, center.y);\n\t        ctx.rotate(degreesToRadians(this.group.angle));\n\t      }\n\t      center = fabric.util.transformPoint(this.getCenterPoint(), vpt, null != this.group);\n\t      if (this.group) {\n\t        center.x *= this.group.scaleX;\n\t        center.y *= this.group.scaleY;\n\t      }\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      this.drawBorders(ctx);\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1;\n\t\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (this.scaleX + this.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * this.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * this.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.fill.gradientTransform) {\n\t        var g = this.fill.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.fill.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.fill.offsetX || 0,\n\t          -this.height / 2 + this.fill.offsetY || 0);\n\t      }\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.strokeDashArray) {\n\t        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t        if (1 & this.strokeDashArray.length) {\n\t          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n\t        }\n\t        if (supportsLineDash) {\n\t          ctx.setLineDash(this.strokeDashArray);\n\t          this._stroke && this._stroke(ctx);\n\t        }\n\t        else {\n\t          this._renderDashedStroke && this._renderDashedStroke(ctx);\n\t        }\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        if (this.stroke.gradientTransform) {\n\t          var g = this.stroke.gradientTransform;\n\t          ctx.transform.apply(ctx, g);\n\t        }\n\t        this._stroke ? this._stroke(ctx) : ctx.stroke();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback) {\n\t      var dataUrl = this.toDataURL();\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el);\n\t\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(el.width / 2, el.height / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      for (var position in options.colorStops) {\n\t        var color = new fabric.Color(options.colorStops[position]);\n\t        gradient.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      this.canvas.remove(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX = originXOffset[toOriginX] - originXOffset[fromOriginX],\n\t          offsetY = originYOffset[toOriginY] - originYOffset[fromOriginY],\n\t          dim;\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (originX && originY) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      this.left += xFull * (originXOffset[to] - originXOffset[this.originX]);\n\t      this.top += yFull * (originXOffset[to] - originXOffset[this.originX]);\n\t\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Object containing coordinates of object's controls\n\t     * @type Object\n\t     * @default\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR) {\n\t      var oCoords = this.oCoords,\n\t          tl = new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t          tr = new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t          bl = new fabric.Point(oCoords.bl.x, oCoords.bl.y),\n\t          br = new fabric.Point(oCoords.br.x, oCoords.br.y),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            [tl, tr, br, bl],\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other) {\n\t      // extracts coords\n\t      function getCoords(oCoords) {\n\t        return {\n\t          tl: new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t          tr: new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t          bl: new fabric.Point(oCoords.bl.x, oCoords.bl.y),\n\t          br: new fabric.Point(oCoords.br.x, oCoords.br.y)\n\t        };\n\t      }\n\t      var thisCoords = getCoords(this.oCoords),\n\t          otherCoords = getCoords(other.oCoords),\n\t          intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            [thisCoords.tl, thisCoords.tr, thisCoords.br, thisCoords.bl],\n\t            [otherCoords.tl, otherCoords.tr, otherCoords.br, otherCoords.bl]\n\t          );\n\t\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other) {\n\t      var boundingRect = other.getBoundingRect(),\n\t          point1 = new fabric.Point(boundingRect.left, boundingRect.top),\n\t          point2 = new fabric.Point(boundingRect.left + boundingRect.width, boundingRect.top + boundingRect.height);\n\t\n\t      return this.isContainedWithinRect(point1, point2);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR) {\n\t      var boundingRect = this.getBoundingRect();\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point) {\n\t      var lines = this._getImageLines(this.oCoords),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} oCoords Coordinates of the object being evaluated\n\t     */\n\t    _findCrossPoints: function(point, oCoords) {\n\t      var b1, b2, a1, a2, xi, yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in oCoords) {\n\t        iLine = oCoords[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = - (a1 - a2) / (b1 - b2);\n\t          yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function() {\n\t      this.oCoords || this.setCoords();\n\t\n\t      var xCoords = [this.oCoords.tl.x, this.oCoords.tr.x, this.oCoords.br.x, this.oCoords.bl.x],\n\t          minX = fabric.util.array.min(xCoords),\n\t          maxX = fabric.util.array.max(xCoords),\n\t          width = Math.abs(minX - maxX),\n\t\n\t          yCoords = [this.oCoords.tl.y, this.oCoords.tr.y, this.oCoords.br.y, this.oCoords.bl.y],\n\t          minY = fabric.util.array.min(yCoords),\n\t          maxY = fabric.util.array.max(yCoords),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this.width * this.scaleX;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this.height * this.scaleY;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      this.setCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRectWidth() / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRectHeight() / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function() {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = this._calculateCurrentDimensions(true),\n\t          currentWidth = dim.x, currentHeight = dim.y;\n\t\n\t      // If width is negative, make postive. Fixes path selection issue\n\t      if (currentWidth < 0) {\n\t        currentWidth = Math.abs(currentWidth);\n\t      }\n\t\n\t      var sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t\n\t          // offset added for rotate and scale actions\n\t          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n\t          ml  = new fabric.Point((tl.x + bl.x)/2, (tl.y + bl.y)/2),\n\t          mt  = new fabric.Point((tr.x + tl.x)/2, (tr.y + tl.y)/2),\n\t          mr  = new fabric.Point((br.x + tr.x)/2, (br.y + tr.y)/2),\n\t          mb  = new fabric.Point((br.x + bl.x)/2, (br.y + bl.y)/2),\n\t          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      this.oCoords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t        // middle\n\t        ml: ml, mt: mt, mr: mr, mb: mb,\n\t        // rotating point\n\t        mtr: mtr\n\t      };\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      this._setCornerCoords && this._setCornerCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function() {\n\t      // introduce skew matrix here later\n\t      return [this.scaleX, 0, 0, this.scaleY, 0, 0];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Returns styles-string for svg-export\n\t   * @return {String}\n\t   */\n\t  getSvgStyles: function() {\n\t\n\t    var fill = this.fill\n\t          ? (this.fill.toLive ? 'url(#SVGID_' + this.fill.id + ')' : this.fill)\n\t          : 'none',\n\t        fillRule = this.fillRule,\n\t        stroke = this.stroke\n\t          ? (this.stroke.toLive ? 'url(#SVGID_' + this.stroke.id + ')' : this.stroke)\n\t          : 'none',\n\t\n\t        strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t        strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t        strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t        strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t        strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t        opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t\n\t        visibility = this.visible ? '' : ' visibility: hidden;',\n\t        filter = this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t\n\t    return [\n\t      'stroke: ', stroke, '; ',\n\t      'stroke-width: ', strokeWidth, '; ',\n\t      'stroke-dasharray: ', strokeDashArray, '; ',\n\t      'stroke-linecap: ', strokeLineCap, '; ',\n\t      'stroke-linejoin: ', strokeLineJoin, '; ',\n\t      'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t      'fill: ', fill, '; ',\n\t      'fill-rule: ', fillRule, '; ',\n\t      'opacity: ', opacity, ';',\n\t      filter,\n\t      visibility\n\t    ].join('');\n\t  },\n\t\n\t  /**\n\t   * Returns transform-string for svg-export\n\t   * @return {String}\n\t   */\n\t  getSvgTransform: function() {\n\t    if (this.group && this.group.type === 'path-group') {\n\t      return '';\n\t    }\n\t    var toFixed = fabric.util.toFixed,\n\t        angle = this.getAngle(),\n\t        vpt = !this.canvas || this.canvas.svgViewportTransformation ? this.getViewportTransform() : [1, 0, 0, 1, 0, 0],\n\t        center = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n\t\n\t        NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t        translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                          toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                          ' ' +\n\t                          toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                        ')',\n\t\n\t        anglePart = angle !== 0\n\t          ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t          : '',\n\t\n\t        scalePart = (this.scaleX === 1 && this.scaleY === 1 && vpt[0] === 1 && vpt[3] === 1)\n\t          ? '' :\n\t          (' scale(' +\n\t            toFixed(this.scaleX * vpt[0], NUM_FRACTION_DIGITS) +\n\t            ' ' +\n\t            toFixed(this.scaleY * vpt[3], NUM_FRACTION_DIGITS) +\n\t          ')'),\n\t\n\t        addTranslateX = this.type === 'path-group' ? this.width * vpt[0] : 0,\n\t\n\t        flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t        addTranslateY = this.type === 'path-group' ? this.height * vpt[3] : 0,\n\t\n\t        flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t    return [\n\t      translatePart, anglePart, scalePart, flipXPart, flipYPart\n\t    ].join('');\n\t  },\n\t\n\t  /**\n\t   * Returns transform-string for svg-export from the transform matrix of single elements\n\t   * @return {String}\n\t   */\n\t  getSvgTransformMatrix: function() {\n\t    return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _createBaseSVGMarkup: function() {\n\t    var markup = [ ];\n\t\n\t    if (this.fill && this.fill.toLive) {\n\t      markup.push(this.fill.toSVG(this, false));\n\t    }\n\t    if (this.stroke && this.stroke.toLive) {\n\t      markup.push(this.stroke.toSVG(this, false));\n\t    }\n\t    if (this.shadow) {\n\t      markup.push(this.shadow.toSVG(this));\n\t    }\n\t    return markup;\n\t  }\n\t});\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t/*\n\t  Depends on `stateProperties`\n\t*/\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Returns true if object state (one of its state properties) was changed\n\t   * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t   */\n\t  hasStateChanged: function() {\n\t    return this.stateProperties.some(function(prop) {\n\t      return this.get(prop) !== this.originalState[prop];\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * Saves state of an object\n\t   * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t   * @return {fabric.Object} thisArg\n\t   */\n\t  saveState: function(options) {\n\t    this.stateProperties.forEach(function(prop) {\n\t      this.originalState[prop] = this.get(prop);\n\t    }, this);\n\t\n\t    if (options && options.stateProperties) {\n\t      options.stateProperties.forEach(function(prop) {\n\t        this.originalState[prop] = this.get(prop);\n\t      }, this);\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Setups state of an object\n\t   * @return {fabric.Object} thisArg\n\t   */\n\t  setupState: function() {\n\t    this.originalState = { };\n\t    this.saveState();\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t  //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width,\n\t          h = this.height,\n\t          capped = this.strokeLineCap === 'round' || this.strokeLineCap === 'square',\n\t          vLine = this.type === 'line' && this.width === 0,\n\t          hLine = this.type === 'line' && this.height === 0,\n\t          sLine = vLine || hLine,\n\t          strokeW = (capped && hLine) || !sLine,\n\t          strokeH = (capped && vLine) || !sLine;\n\t\n\t      if (vLine) {\n\t        w = strokeWidth;\n\t      }\n\t      else if (hLine) {\n\t        h = strokeWidth;\n\t      }\n\t      if (strokeW) {\n\t        w += (w < 0 ? -strokeWidth : strokeWidth);\n\t      }\n\t      if (strokeH) {\n\t        h += (h < 0 ? -strokeWidth : strokeWidth);\n\t      }\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     */\n\t    _getTransformedDimensions: function(dimensions) {\n\t      if (!dimensions) {\n\t        dimensions = this._getNonTransformedDimensions();\n\t      }\n\t      var transformMatrix = this._calcDimensionsTransformMatrix();\n\t      return fabric.util.transformPoint(dimensions, transformMatrix, true);\n\t    },\n\t\n\t    /*\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function(shouldTransform)  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          w = dim.x, h = dim.y;\n\t\n\t      w += 2 * this.padding;\n\t      h += 2 * this.padding;\n\t\n\t      if (shouldTransform) {\n\t        return fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n\t      }\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      ctx.strokeStyle = this.borderColor;\n\t      ctx.lineWidth = 1 / this.borderScaleFactor;\n\t\n\t      var wh = this._calculateCurrentDimensions(true),\n\t          width = wh.x,\n\t          height = wh.y;\n\t      if (this.group) {\n\t        width = width * this.group.scaleX;\n\t        height = height * this.group.scaleY;\n\t      }\n\t\n\t      ctx.strokeRect(\n\t        ~~(-(width / 2)) - 0.5, // offset needed to make lines look sharper\n\t        ~~(-(height / 2)) - 0.5,\n\t        ~~(width) + 1, // double offset needed to make lines look sharper\n\t        ~~(height) + 1\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(true),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          left = -(width / 2),\n\t          top = -(height / 2),\n\t          scaleOffset = this.cornerSize / 2,\n\t          methodName = this.transparentCorners ? 'strokeRect' : 'fillRect';\n\t\n\t      ctx.save();\n\t\n\t      ctx.lineWidth = 1;\n\t\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left - scaleOffset,\n\t        top - scaleOffset);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width - scaleOffset,\n\t        top - scaleOffset);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left - scaleOffset,\n\t        top + height - scaleOffset);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width - scaleOffset,\n\t        top + height - scaleOffset);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width/2 - scaleOffset,\n\t          top - scaleOffset);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width/2 - scaleOffset,\n\t          top + height - scaleOffset);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width - scaleOffset,\n\t          top + height/2 - scaleOffset);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left - scaleOffset,\n\t          top + height/2 - scaleOffset);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width/2 - scaleOffset,\n\t          top - this.rotatingPointOffset - scaleOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize;\n\t      isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t      ctx[methodName](left, top, size, size);\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [ ], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange();\n\t      },\n\t      onComplete: function() {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete();\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint();\n\t        ctx.translate(\n\t          cp.x - this.strokeWidth / 2,\n\t          cp.y - this.strokeWidth / 2\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ',\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object) {\n\t    var points = [object.x1, object.y1, object.x2, object.y2];\n\t    return new fabric.Line(points, object);\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t      case nearest:\n\t        return Math.min(this.get(axis1), this.get(axis2));\n\t      case center:\n\t        return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t      case farthest:\n\t        return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options.radius || 0);\n\t\n\t      this.startAngle = options.startAngle || this.startAngle;\n\t      this.endAngle = options.endAngle || this.endAngle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        radius: this.get('radius'),\n\t        startAngle: this.startAngle,\n\t        endAngle: this.endAngle\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t      angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ',\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', + largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object) {\n\t    return new fabric.Circle(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('width', options.width || 100)\n\t          .set('height', options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ',\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Triangle instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} instance of Canvas.Triangle\n\t   */\n\t  fabric.Triangle.fromObject = function(object) {\n\t    return new fabric.Triangle(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('rx', options.rx || 0);\n\t      this.set('ry', options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx'),\n\t        ry: this.get('ry')\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ',\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry/this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx/this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object) {\n\t    return new fabric.Ellipse(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry', 'x', 'y');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Used to specify dash pattern for stroke on this object\n\t     * @type Array\n\t     */\n\t    strokeDashArray: null,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(0, 0, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          k = 1 - 0.5522847498 /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */;\n\t\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx') || 0,\n\t        ry: this.get('ry') || 0\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ',\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object) {\n\t    return new fabric.Rect(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [skipOffset] Whether points offsetting should be skipped\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      return fabric.Polygon.prototype.initialize.call(this, points, options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t      return fabric.Polygon.prototype._calcDimensions.call(this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _applyPointOffset: function() {\n\t      return fabric.Polygon.prototype._applyPointOffset.call(this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      if (!fabric.Polygon.prototype.commonRender.call(this, ctx)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object) {\n\t    var points = object.points;\n\t    return new fabric.Polyline(points, object, true);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polygon} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t      this.points = points || [ ];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t\n\t      this.minX = minX || 0,\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _applyPointOffset: function() {\n\t      // change points to offset polygon into a bounding box\n\t      // executed one time\n\t      this.points.forEach(function(p) {\n\t        p.x -= (this.minX + this.width / 2);\n\t        p.y -= (this.minY + this.height / 2);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [],\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n\t      }\n\t\n\t      markup.push(\n\t        '<', this.type, ' ',\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      if (!this.commonRender(ctx)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      if (this.stroke || this.strokeDashArray) {\n\t        ctx.closePath();\n\t        this._renderStroke(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    commonRender: function(ctx) {\n\t      var point, len = this.points.length;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      if (this._applyPointOffset) {\n\t        if (!(this.group && this.group.type === 'path-group')) {\n\t          this._applyPointOffset();\n\t        }\n\t        this._applyPointOffset = null;\n\t      }\n\t\n\t      ctx.moveTo(this.points[0].x, this.points[0].y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x, point.y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.points.length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object) {\n\t    return new fabric.Polygon(object.points, object, true);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t\n\t      this.setOptions(options);\n\t\n\t      if (!path) {\n\t        path = [ ];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        path: this.path.map(function(item) { return item.slice() }),\n\t        pathOffset: this.pathOffset\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      if (this.transformMatrix) {\n\t        o.transformMatrix = this.transformMatrix;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        //jscs:disable validateIndentation\n\t        '<path ',\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t        //jscs:enable validateIndentation\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [ ],\n\t          coords = [ ],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [ currentPath.charAt(0) ];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              x,\n\t              y\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   */\n\t  fabric.Path.fromObject = function(object, callback) {\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var path = elements[0],\n\t            pathUrl = object.path;\n\t\n\t        delete object.path;\n\t\n\t        fabric.util.object.extend(path, object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback(path);\n\t      });\n\t    }\n\t    else {\n\t      callback(new fabric.Path(object.path, object));\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      invoke = fabric.util.array.invoke,\n\t      parentToObject = fabric.Object.prototype.toObject;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [ ];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [ ], yC = [ ], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Renders this group on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      ctx.translate(-this.width/2, -this.height/2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {Any} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(parentToObject.call(this, propertiesToInclude), {\n\t        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = [\n\t            //jscs:disable validateIndentation\n\t            '<g ',\n\t              'style=\"', this.getSvgStyles(), '\" ',\n\t              'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t            '>\\n'\n\t            //jscs:enable validateIndentation\n\t          ];\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push(objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = (this.getObjects()[0].get('fill') || '').toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        return (path.get('fill') || '').toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    if (typeof object.paths === 'string') {\n\t      fabric.loadSVGFromURL(object.paths, function (elements) {\n\t\n\t        var pathUrl = object.paths;\n\t        delete object.paths;\n\t\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n\t        delete object.paths;\n\t        callback(new fabric.PathGroup(enlivenedObjects, object));\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      invoke = fabric.util.array.invoke;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      this.originalState = { };\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          center = this.getCenterPoint();\n\t\n\t      object.set({\n\t        originalLeft: objectLeft,\n\t        originalTop: objectTop,\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._moveFlippedObject(object);\n\t      this._restoreObjectsState();\n\t\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      opacity:          true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      // the array is now sorted in order of highest first, so start from end\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t\n\t      this.clipTo && ctx.restore();\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      this._moveFlippedObject(object);\n\t      this._setObjectPosition(object);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Moves a flipped object to the position where it's displayed\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _moveFlippedObject: function(object) {\n\t      var oldOriginX = object.get('originX'),\n\t          oldOriginY = object.get('originY'),\n\t          center = object.getCenterPoint();\n\t\n\t      object.set({\n\t        originX: 'center',\n\t        originY: 'center',\n\t        left: center.x,\n\t        top: center.y\n\t      });\n\t\n\t      this._toggleFlipping(object);\n\t\n\t      var newOrigin = object.getPointByOrigin(oldOriginX, oldOriginY);\n\t\n\t      object.set({\n\t        originX: oldOriginX,\n\t        originY: oldOriginY,\n\t        left: newOrigin.x,\n\t        top: newOrigin.y\n\t      });\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toggleFlipping: function(object) {\n\t      if (this.flipX) {\n\t        object.toggle('flipX');\n\t        object.set('left', -object.get('left'));\n\t        object.setAngle(-object.getAngle());\n\t      }\n\t      if (this.flipY) {\n\t        object.toggle('flipY');\n\t        object.set('top', -object.get('top'));\n\t        object.setAngle(-object.getAngle());\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this._setObjectPosition(object);\n\t\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      object.setCoords();\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectPosition: function(object) {\n\t      var center = this.getCenterPoint(),\n\t          rotated = this._getRotatedLeftTop(object);\n\t\n\t      object.set({\n\t        angle: object.getAngle() + this.getAngle(),\n\t        left: center.x + rotated.left,\n\t        top: center.y + rotated.top,\n\t        scaleX: object.get('scaleX') * this.get('scaleX'),\n\t        scaleY: object.get('scaleY') * this.get('scaleY')\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedLeftTop: function(object) {\n\t      var groupAngle = this.getAngle() * (Math.PI / 180);\n\t      return {\n\t        left: (-Math.sin(groupAngle) * object.getTop() * this.get('scaleY') +\n\t                Math.cos(groupAngle) * object.getLeft() * this.get('scaleX')),\n\t\n\t        top:  (Math.cos(groupAngle) * object.getTop() * this.get('scaleY') +\n\t               Math.sin(groupAngle) * object.getLeft() * this.get('scaleX'))\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      this._objects.forEach(this._moveFlippedObject, this);\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all group objects\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      this.forEachObject(function(object) {\n\t        object.setCoords();\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords();\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n\t          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n\t          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = [\n\t        //jscs:disable validateIndentation\n\t        '<g ',\n\t          'transform=\"', this.getSvgTransform(),\n\t        '\">\\n'\n\t        //jscs:enable validateIndentation\n\t      ];\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push(this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {Any}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   * @return {fabric.Group} An instance of fabric.Group\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      delete object.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"allow-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options) {\n\t      options || (options = { });\n\t      this.filters = [ ];\n\t      this.resizeFilters = [ ];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(callback);\n\t      }\n\t      else if (callback) {\n\t        callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t      ctx.beginPath();\n\t      ctx.strokeRect(-this.width / 2, -this.height / 2, this.width, this.height);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [ ];\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        src: this._originalElement.src || this._originalElement._src,\n\t        filters: filters,\n\t        crossOrigin: this.crossOrigin,\n\t        alignX: this.alignX,\n\t        alignY: this.alignY,\n\t        meetOrSlice: this.meetOrSlice\n\t      });\n\t\n\t      if (this.resizeFilters.length > 0) {\n\t        object.resizeFilters = this.resizeFilters.map(function(filterObj) {\n\t          return filterObj && filterObj.toObject();\n\t        });\n\t      }\n\t\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = [], x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none';\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image xlink:href=\"', this.getSvgSrc(),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function() {\n\t      if (this.getElement()) {\n\t        return this.getElement().src || this.getElement()._src;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Returns a clone of an instance\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var imgEl = imgElement,\n\t          canvasEl = fabric.util.createCanvasElement(),\n\t          replacement = fabric.util.createImage(),\n\t          _this = this;\n\t\n\t      canvasEl.width = imgEl.width;\n\t      canvasEl.height = imgEl.height;\n\t      canvasEl.getContext('2d').drawImage(imgEl, 0, 0, imgEl.width, imgEl.height);\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback();\n\t        return canvasEl;\n\t      }\n\t      filters.forEach(function(filter) {\n\t        filter && filter.applyTo(canvasEl, filter.scaleX || _this.scaleX, filter.scaleY || _this.scaleY);\n\t        if (!forResizing && filter && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback();\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback();\n\t          replacement.onload = canvasEl = imgEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options) {\n\t      this.setElement(fabric.util.getById(element), null, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [ ];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [ ];\n\t          var instance = new fabric.Image(img, object);\n\t          callback && callback(instance);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        align = 'xMidYMid', meetOrSlice = 'meet', alignX, alignY, aspectRatioAttrs;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      aspectRatioAttrs = parsedAttributes.preserveAspectRatio.split(' ');\n\t    }\n\t\n\t    if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t      meetOrSlice = aspectRatioAttrs.pop();\n\t      if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t        align = meetOrSlice;\n\t        meetOrSlice = 'meet';\n\t      }\n\t      else if (aspectRatioAttrs.length) {\n\t        align = aspectRatioAttrs.pop();\n\t      }\n\t    }\n\t    //divide align in alignX and alignY\n\t    alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t    alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t    parsedAttributes.alignX = alignX;\n\t    parsedAttributes.alignY = alignY;\n\t    parsedAttributes.meetOrSlice = meetOrSlice;\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Brightness = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = function(object) {\n\t    return new fabric.Image.filters.Brightness(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Convolute = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      this.tmpCtx = canvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createImageData: function(w, h) {\n\t      return this.tmpCtx.createImageData(w, h);\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side/2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t\n\t          // pad output by the convolution matrix\n\t          w = sw,\n\t          h = sh,\n\t          output = this._createImageData(w, h),\n\t\n\t          dst = output.data,\n\t\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0;\n\t\n\t      for (var y = 0; y < h; y++) {\n\t        for (var x = 0; x < w; x++) {\n\t          var sy = y,\n\t              sx = x,\n\t              dstOff = (y * w + x) * 4,\n\t              // calculate the weighed sum of the source image pixels that\n\t              // fall under the convolution matrix\n\t              r = 0, g = 0, b = 0, a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t\n\t              var scy = sy + cy - halfSide,\n\t                  scx = sx + cx - halfSide;\n\t\n\t              /* jshint maxdepth:5 */\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              var srcOff = (scy * sw + scx) * 4,\n\t                  wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = function(object) {\n\t    return new fabric.Image.filters.Convolute(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.GradientTransparency = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n\t    return new fabric.Image.filters.GradientTransparency(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Grayscale = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function() {\n\t    return new fabric.Image.filters.Grayscale();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Invert = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function() {\n\t    return new fabric.Image.filters.Invert();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  fabric.Image.filters.Mask = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [ 0, 1, 2, 3 ].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = maskEl.width;\n\t      maskCanvasEl.height = maskEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, maskEl.width, maskEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, maskEl.width, maskEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      callback && callback(new fabric.Image.filters.Mask(object));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Noise = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = function(object) {\n\t    return new fabric.Image.filters.Noise(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Pixelate = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = function(object) {\n\t    return new fabric.Image.filters.Pixelate(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.RemoveWhite = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 1;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n\t    return new fabric.Image.filters.RemoveWhite(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Sepia = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Sepia2 = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia2();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Tint = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = function(object) {\n\t    return new fabric.Image.filters.Tint(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Multiply = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = function(object) {\n\t    return new fabric.Image.filters.Multiply(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Blend = fabric.util.createClass({\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  fabric.Image.filters.Blend.fromObject = function(object) {\n\t    return new fabric.Image.filters.Blend(object);\n\t  };\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Resize = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    sliceByTwo: function(canvasEl, width, height, newWidth, newHeight) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = width, stepH = height,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      newWidth = floor(newWidth);\n\t      newHeight = floor(newHeight);\n\t      tmpCanvas.width = max(newWidth, width);\n\t      tmpCanvas.height = max(newHeight, height);\n\t\n\t      if (newWidth > width) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (newHeight > height) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, width, height);\n\t      canvasEl.width = max(newWidth, width);\n\t      canvasEl.height = max(newHeight, height);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        width = stepW;\n\t        height = stepH;\n\t        if (newWidth * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = newWidth;\n\t          doneW = true;\n\t        }\n\t        if (newHeight * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = newHeight;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, width, height);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, width, height, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, newWidth, newHeight);\n\t    },\n\t\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0, red = 0, green = 0, blue = 0, alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    bilinearFiltering: function(canvasEl, w, h, w2, h2) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (w - 1), img = context.getImageData(0, 0, w, h),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, w2, h2),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < h2; i++) {\n\t        for (j = 0; j < w2; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * w + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /*jshint maxdepth:5 */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                /*jshint maxdepth:6 */\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                /*jshint maxdepth:5 */\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /*jshint maxdepth:4 */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = function(object) {\n\t    return new fabric.Image.filters.Resize(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor'\n\t  );\n\t\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: {\n\t      fontSize: true,\n\t      fontWeight: true,\n\t      fontFamily: true,\n\t      fontStyle: true,\n\t      lineHeight: true,\n\t      stroke: true,\n\t      strokeWidth: true,\n\t      text: true,\n\t      textAlign: true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", or \"right\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.setOptions(options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t    },\n\t\n\t    /**\n\t     * Renders text object on offscreen canvas, so that it would get dimensions\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      //if textAlign is 'justify' i have to disable caching\n\t      //when calculating width of text and widths of line.\n\t      this._cacheLinesWidth = (this.textAlign !== 'justify');\n\t      this.width = this._getTextWidth(ctx);\n\t      this._cacheLinesWidth = true;\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this._setupCompositeOperation(ctx);\n\t      this._renderTextBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t      this.clipTo && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t\n\t      this._translateForTextAlign(ctx);\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t      this._translateForTextAlign(ctx, true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} back Indicates if translate back or forward\n\t     */\n\t    _translateForTextAlign: function(ctx, back) {\n\t      if (this.textAlign !== 'left' && this.textAlign !== 'justify') {\n\t        var sign = back ? -1 : 1;\n\t        ctx.translate(this.textAlign === 'center' ? (sign * this.width / 2) : sign * this.width, 0);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      if (!this.skipTextAlign) {\n\t        ctx.textAlign = this.textAlign;\n\t      }\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._textLines.length * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4);\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      ctx[method](chars, left, top);\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      if (this.textAlign !== 'justify') {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex),\n\t          totalWidth = this.width;\n\t      if (totalWidth >= lineWidth) {\n\t        // stretch the line\n\t        var words = line.split(/\\s+/),\n\t            wordsWidth = this._getWidthOfWords(ctx, line, lineIndex),\n\t            widthDiff = totalWidth - wordsWidth,\n\t            numSpaces = words.length - 1,\n\t            spaceWidth = widthDiff / numSpaces,\n\t            leftOffset = 0;\n\t\n\t        for (var i = 0, len = words.length; i < len; i++) {\n\t          this._renderChars(method, ctx, words[i], left + leftOffset, top, lineIndex);\n\t          leftOffset += ctx.measureText(words[i]).width + spaceWidth;\n\t        }\n\t      }\n\t      else {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} line\n\t     */\n\t    _getWidthOfWords: function (ctx, line) {\n\t      return ctx.measureText(line.replace(/\\s+/g, '')).width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && !this._skipFillStrokeCheck) {\n\t        return;\n\t      }\n\t\n\t      var lineHeights = 0;\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight;\n\t\n\t        this._renderTextLine(\n\t          'fillText',\n\t          ctx,\n\t          this._textLines[i],\n\t          this._getLeftOffset(),\n\t          this._getTopOffset() + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && !this._skipFillStrokeCheck) {\n\t        return;\n\t      }\n\t\n\t      var lineHeights = 0;\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.strokeDashArray) {\n\t        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t        if (1 & this.strokeDashArray.length) {\n\t          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n\t        }\n\t        supportsLineDash && ctx.setLineDash(this.strokeDashArray);\n\t      }\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight;\n\t\n\t        this._renderTextLine(\n\t          'strokeText',\n\t          ctx,\n\t          this._textLines[i],\n\t          this._getLeftOffset(),\n\t          this._getTopOffset() + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    _getHeightOfLine: function() {\n\t      return this.fontSize * this._fontSizeMult * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} textLines Array of all text lines\n\t     */\n\t    _renderTextBackground: function(ctx) {\n\t      this._renderTextBoxBackground(ctx);\n\t      this._renderTextLinesBackground(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextBoxBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        this._getLeftOffset(),\n\t        this._getTopOffset(),\n\t        this.width,\n\t        this.height\n\t      );\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine = this._getHeightOfLine(),\n\t          lineWidth, lineLeftOffset;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this._textLines[i] !== '') {\n\t          lineWidth = this._getLineWidth(ctx, i);\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            this.fontSize * this._fontSizeMult\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [ ];\n\t      this.__lineHeights = [ ];\n\t      this.__lineOffsets = [ ];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearCache: function() {\n\t      var shouldClear = false;\n\t      if (this._forceClearCache) {\n\t        this._forceClearCache = false;\n\t        return true;\n\t      }\n\t      for (var prop in this._dimensionAffectingProps) {\n\t        if (this['__' + prop] !== this[prop]) {\n\t          this['__' + prop] = this[prop];\n\t          shouldClear = true;\n\t        }\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex];\n\t      }\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else if (this.textAlign === 'justify' && this._cacheLinesWidth) {\n\t        wordCount = line.split(' ');\n\t        //consider not justify last line, not for now.\n\t        if (wordCount.length > 1) {\n\t          width = this.width;\n\t        }\n\t        else {\n\t          width = ctx.measureText(line).width;\n\t        }\n\t      }\n\t      else {\n\t        width = ctx.measureText(line).width;\n\t      }\n\t      this._cacheLinesWidth && (this.__lineWidths[lineIndex] = width);\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i),\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth),\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t\n\t      if (this._shouldClearCache()) {\n\t        this._initDimensions(ctx);\n\t      }\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._render(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        text:                 this.text,\n\t        fontSize:             this.fontSize,\n\t        fontWeight:           this.fontWeight,\n\t        fontFamily:           this.fontFamily,\n\t        fontStyle:            this.fontStyle,\n\t        lineHeight:           this.lineHeight,\n\t        textDecoration:       this.textDecoration,\n\t        textAlign:            this.textAlign,\n\t        textBackgroundColor:  this.textBackgroundColor\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      markup.push(\n\t        '\\t<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ': ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ': ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ': ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ': ''),\n\t            'style=\"', this.getSvgStyles(), '\" >',\n\t            textAndBg.textSpans.join(''),\n\t          '</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [ ],\n\t          textBgRects = [ ],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      textSpans.push(\n\t        '<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this.__lineWidths[i], NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {Any} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key in this._dimensionAffectingProps) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t    var textContent = element.textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' '),\n\t        text = new fabric.Text(textContent, options),\n\t        /*\n\t          Adjust positioning:\n\t            x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t            top/left properties in Fabric correspond to center point of text bounding box\n\t        */\n\t        offX = 0;\n\t\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - text.getHeight() / 2 + text.fontSize * (0.18 + text._fontSizeFraction) /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object) {\n\t    return new fabric.Text(object.text, clone(object));\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    _skipFillStrokeCheck: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _charWidthsCache: { },\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__maxFontHeights = [ ];\n\t      this.__widthOfSpace = [ ];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          /*jshint unused:false */\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      if (this.selectionStart !== index) {\n\t        this.fire('selection:changed');\n\t        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t        this.selectionStart = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      if (this.selectionEnd !== index) {\n\t        this.fire('selection:changed');\n\t        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t        this.selectionEnd = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [ ];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t      this.isEditing && this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active) {\n\t        return;\n\t      }\n\t\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t\n\t      if (this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t\n\t      var lineLeftOffset = 0,\n\t\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getCachedLineOffset(lineIndex);\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCachedLineOffset: function(lineIndex) {\n\t      var widthOfLine = this._getLineWidth(this.ctx, lineIndex);\n\t\n\t      return this.__lineOffsets[lineIndex] ||\n\t        (this.__lineOffsets[lineIndex] = this._getLineLeftOffset(widthOfLine));\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getCachedLineOffset(lineIndex)\n\t                    : boundaries.leftOffset;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset,\n\t        boundaries.top + boundaries.topOffset,\n\t        this.cursorWidth / this.scaleX,\n\t        charHeight);\n\t\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getCachedLineOffset(i) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t        }\n\t\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      this.skipTextAlign = true;\n\t\n\t      // set proper box offset\n\t      left -= this.textAlign === 'center'\n\t        ? (this.width / 2)\n\t        : (this.textAlign === 'right')\n\t          ? this.width\n\t          : 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          lineLeftOffset = this._getCachedLineOffset(lineIndex),\n\t          prevStyle,\n\t          charsToRender = '';\n\t\n\t      left += lineLeftOffset || 0;\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = 0, len = line.length; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        var thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i];\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t      this.skipTextAlign = false;\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t\n\t      if (decl) {\n\t        var shouldStroke = decl.stroke || this.stroke,\n\t            shouldFill = decl.fill || this.fill;\n\t\n\t        ctx.save();\n\t        charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl);\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t\n\t        if (shouldFill) {\n\t          ctx.fillText(_char, left, top);\n\t        }\n\t        if (shouldStroke) {\n\t          ctx.strokeText(_char, left, top);\n\t        }\n\t\n\t        this._renderCharDecoration(ctx, decl, left, top, offset, charWidth, charHeight);\n\t        ctx.restore();\n\t\n\t        ctx.translate(charWidth, 0);\n\t      }\n\t      else {\n\t        if (method === 'strokeText' && this.stroke) {\n\t          ctx[method](_char, left, top);\n\t        }\n\t        if (method === 'fillText' && this.fill) {\n\t          ctx[method](_char, left, top);\n\t        }\n\t        charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i);\n\t        this._renderCharDecoration(ctx, null, left, top, offset, charWidth, this.fontSize);\n\t\n\t        ctx.translate(ctx.measureText(_char).width, 0);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, styleDeclaration, left, top, offset, charWidth, charHeight) {\n\t\n\t      var textDecoration = styleDeclaration\n\t            ? (styleDeclaration.textDecoration || this.textDecoration)\n\t            : this.textDecoration;\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      if (textDecoration.indexOf('underline') > -1) {\n\t        ctx.fillRect(\n\t          left,\n\t          top + charHeight / 10,\n\t          charWidth ,\n\t          charHeight / 15\n\t        );\n\t      }\n\t      if (textDecoration.indexOf('line-through') > -1) {\n\t        ctx.fillRect(\n\t          left,\n\t          top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + charHeight / 15,\n\t          charWidth,\n\t          charHeight / 15\n\t        );\n\t      }\n\t      if (textDecoration.indexOf('overline') > -1) {\n\t        ctx.fillRect(\n\t          left,\n\t          top - (this._fontSizeMult - this._fontSizeFraction) * charHeight,\n\t          charWidth,\n\t          charHeight / 15\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor && !this.styles) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.textBackgroundColor) {\n\t        ctx.fillStyle = this.textBackgroundColor;\n\t      }\n\t\n\t      var lineHeights = 0;\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t\n\t        var heightOfLine = this._getHeightOfLine(ctx, i);\n\t        if (this._textLines[i] === '') {\n\t          lineHeights += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        var lineWidth = this._getLineWidth(ctx, i),\n\t            lineLeftOffset = this._getCachedLineOffset(i);\n\t\n\t        if (this.textBackgroundColor) {\n\t          ctx.fillStyle = this.textBackgroundColor;\n\t\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineHeights,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        if (this._getLineStyle(i)) {\n\t          for (var j = 0, jlen = this._textLines[i].length; j < jlen; j++) {\n\t            var style = this._getStyleDeclaration(i, j);\n\t            if (style && style.textBackgroundColor) {\n\t\n\t              var _char = this._textLines[i][j];\n\t\n\t              ctx.fillStyle = style.textBackgroundColor;\n\t\n\t              ctx.fillRect(\n\t                this._getLeftOffset() + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n\t                this._getTopOffset() + lineHeights,\n\t                this._getWidthOfChar(ctx, _char, i, j) + 1,\n\t                heightOfLine / this.lineHeight\n\t              );\n\t            }\n\t          }\n\t        }\n\t        lineHeights += heightOfLine;\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontFamily +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle +\n\t             styleDeclaration.shadow;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var styleDeclaration = decl || this._getStyleDeclaration(lineIndex, charIndex);\n\t\n\t      if (styleDeclaration) {\n\t        // cloning so that original style object is not polluted with following font declarations\n\t        styleDeclaration = clone(styleDeclaration);\n\t      }\n\t      else {\n\t        styleDeclaration = { };\n\t      }\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t\n\t      var cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles\n\t      if (this.isEmptyStyles() && this._charWidthsCache[cacheProp] && this.caching) {\n\t        return this._charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t      this._setShadow.call(styleDeclaration, ctx);\n\t\n\t      if (!this.caching) {\n\t        return ctx.measureText(_char).width;\n\t      }\n\t\n\t      if (!this._charWidthsCache[cacheProp]) {\n\t        this._charWidthsCache[cacheProp] = ctx.measureText(_char).width;\n\t      }\n\t\n\t      return this._charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t\n\t      var styleDeclaration = this._getStyleDeclaration(lineIndex, charIndex, true);\n\t      this._applyFontStyles(styleDeclaration);\n\t      var cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      if (this._charWidthsCache[cacheProp] && this.caching) {\n\t        return this._charWidthsCache[cacheProp];\n\t      }\n\t      else if (ctx) {\n\t        ctx.save();\n\t        var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t        ctx.restore();\n\t        return width;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfCharAt: function(ctx, lineIndex, charIndex) {\n\t      var _char = this._textLines[lineIndex][charIndex];\n\t      return this._getHeightOfChar(ctx, _char, lineIndex, charIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex];\n\t      }\n\t      this.__lineWidths[lineIndex] = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      return this.__lineWidths[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = widthDiff / numSpaces;\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} line\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, line[0], lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, line[i], lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__maxFontHeights[lineIndex] = maxHeight;\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        height += this._getHeightOfLine(ctx, i);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * This method is overwritten to account for different top offset\n\t     * @private\n\t     */\n\t    _renderTextBoxBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        this._getLeftOffset(),\n\t        this._getTopOffset(),\n\t        this.width,\n\t        this.height\n\t      );\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clone(this.styles)\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object) {\n\t    return new fabric.IText(object.text, clone(object));\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t    },\n\t\n\t    /**\n\t     * Initializes \"selected\" event handler\n\t     */\n\t    initSelectedHandler: function() {\n\t      this.on('selected', function() {\n\t\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          _this.selected = true;\n\t        }, 100);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        if (this.canvas && !this.canvas._hasITextHandlers) {\n\t          this.canvas._hasITextHandlers = true;\n\t          this._initCanvasHandlers();\n\t        }\n\t\n\t        // Track IText instances per-canvas. Only register in this array once added\n\t        // to a canvas; we don't want to leak a reference to the instance forever\n\t        // simply because it existed at some point.\n\t        // (Might be added to a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          _this.canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        // (Might be removed from a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function() {\n\t      var _this = this;\n\t\n\t      this.canvas.on('selection:cleared', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t\n\t      this.canvas.on('mouse:up', function() {\n\t        if (_this.canvas._iTextInstances) {\n\t          _this.canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      });\n\t\n\t      this.canvas.on('object:selected', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          if (obj.canvas) {\n\t            obj.canvas.clearContext(obj.canvas.contextTop || obj.ctx);\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t      clearTimeout(this._cursorTimeout1);\n\t      this._currentCursorOpacity = 1;\n\t      if (this.canvas) {\n\t        this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t        this.renderCursorOrSelection();\n\t      }\n\t      if (this._cursorTimeout2) {\n\t        clearTimeout(this._cursorTimeout2);\n\t      }\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.setSelectionStart(0);\n\t      this.setSelectionEnd(this.text.length);\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction: 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd   = this.searchWordBoundary(selectionStart, 1);\n\t      /* search forward */\n\t\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd   = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function() {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t\n\t      this.initHiddenTextarea();\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t\n\t      this.canvas.renderAll();\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      var _this = this;\n\t      this.canvas.on('mouse:move', function(options) {\n\t        if (!_this.__isMousedown || !_this.isEditing) {\n\t          return;\n\t        }\n\t\n\t        var newSelectionStart = _this.getSelectionStartFromPointer(options.e);\n\t        if (newSelectionStart >= _this.__selectionStartOnMouseDown) {\n\t          _this.setSelectionStart(_this.__selectionStartOnMouseDown);\n\t          _this.setSelectionEnd(newSelectionStart);\n\t        }\n\t        else {\n\t          _this.setSelectionStart(newSelectionStart);\n\t          _this.setSelectionEnd(_this.__selectionStartOnMouseDown);\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea) {\n\t        return;\n\t      }\n\t\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t      this.hiddenTextarea = null;\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      this.canvas && this.canvas.fire('text:editing:exited', { target: this });\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.setSelectionStart(start);\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t        this.setSelectionEnd(this.selectionStart);\n\t      }\n\t\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.copiedTextStyle[i];\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.setSelectionStart(this.selectionStart + 1);\n\t      this.setSelectionEnd(this.selectionStart);\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this.canvas && this.canvas.renderAll();\n\t      this.setCoords();\n\t      this.fire('changed');\n\t      this.canvas && this.canvas.fire('text:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      if (!this.styles[lineIndex + 1]) {\n\t        this.styles[lineIndex + 1] = {};\n\t      }\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        for (var index in this.styles[lineIndex]) {\n\t          if (parseInt(index, 10) >= charIndex) {\n\t            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t\n\t      this.styles[lineIndex][charIndex] =\n\t        style || clone(currentLineStyles[charIndex - 1]);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (isBeginningOfLine) {\n\t\n\t        var textOnPreviousLine     = this._textLines[lineIndex - 1],\n\t            newCharIndexOnPrevLine = textOnPreviousLine\n\t              ? textOnPreviousLine.length\n\t              : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t\n\t        this.shiftLineStyles(lineIndex, -1);\n\t\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t          //console.log('deleting', lineIndex, charIndex + offset);\n\t        }\n\t\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initSelectedHandler();\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t\n\t      var pointer = this.canvas.getPointer(options.e);\n\t\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.hiddenTextarea && this.canvas) {\n\t        this.canvas.wrapperEl.appendChild(this.hiddenTextarea);\n\t      }\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        this.initDelayedCursor(true);\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (this._isObjectMoved(options.e)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected) {\n\t        this.enterEditing();\n\t        this.initDelayedCursor(true);\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelectionStart = this.getSelectionStartFromPointer(e);\n\t\n\t    if (e.shiftKey) {\n\t      if (newSelectionStart < this.selectionStart) {\n\t        this.setSelectionEnd(this.selectionStart);\n\t        this.setSelectionStart(newSelectionStart);\n\t      }\n\t      else {\n\t        this.setSelectionEnd(newSelectionStart);\n\t      }\n\t    }\n\t    else {\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionStart);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      if (this.flipX) {\n\t        // when oject is horizontally flipped we reverse chars\n\t        // we should reverse also style or do not revers at all.\n\t        this._textLines[i] = line.reverse().join('');\n\t      }\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    this.hiddenTextarea.style.cssText = 'position: fixed; bottom: 20px; left: 0px; opacity: 0;'\n\t                                        + ' width: 0px; height: 0px; z-index: -999;';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMap: {\n\t    65: 'selectAll',\n\t    88: 'cut'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this._keysMap) {\n\t      this[this._keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this._ctrlKeysMap) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMap[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this._cancelOnInput) {\n\t      this._cancelOnInput = false;\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff = newTextLength - textLength,\n\t        charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(\n\t                          this.selectionStart,\n\t                          this.selectionEnd);\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    this._cancelOnInput = true;\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy();\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return e && (e.clipboardData || fabric.window.clipboardData);\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        _char, lineLeftOffset, lineIndex = cursorLocation.lineIndex,\n\t        textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n\t        textOnSameLineAfterCursor = this._textLines[lineIndex].slice(cursorLocation.charIndex),\n\t        textOnNextLine = this._textLines[lineIndex + 1] || '';\n\t\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t\n\t    var widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, lineIndex);\n\t    lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor);\n\t\n\t    var widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\t\n\t    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n\t      _char = textOnSameLineBeforeCursor[i];\n\t      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t\n\t    var indexOnNextLine = this._getIndexOnNextLine(\n\t      cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor);\n\t\n\t    return textOnSameLineAfterCursor.length + 1 + indexOnNextLine;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getIndexOnNextLine: function(cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor) {\n\t    var lineIndex = cursorLocation.lineIndex + 1,\n\t        widthOfNextLine = this._getLineWidth(this.ctx, lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfNextLine),\n\t        widthOfCharsOnNextLine = lineLeftOffset,\n\t        indexOnNextLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnNextLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnNextLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnNextLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnNextLine > widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnNextLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnNextLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n\t            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\t\n\t        indexOnNextLine = offsetFromRightEdge < offsetFromLeftEdge ? j + 1 : j;\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnNextLine = textOnNextLine.length;\n\t    }\n\t\n\t    return indexOnNextLine;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    var offset = this.getDownCursorOffset(e, this._selectionDirection === 'right');\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorDownWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorDownWithoutShift(offset);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down without keeping selection\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorDownWithoutShift: function(offset) {\n\t    this._selectionDirection = 'right';\n\t    this.setSelectionStart(this.selectionStart + offset);\n\t    this.setSelectionEnd(this.selectionStart);\n\t  },\n\t\n\t  /**\n\t   * private\n\t   */\n\t  swapSelectionPoints: function() {\n\t    var swapSel = this.selectionEnd;\n\t    this.setSelectionEnd(this.selectionStart);\n\t    this.setSelectionStart(swapSel);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down while keeping selection\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorDownWithShift: function(offset) {\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._selectionDirection = 'right';\n\t    }\n\t    if (this._selectionDirection === 'right') {\n\t      this.setSelectionEnd(this.selectionEnd + offset);\n\t    }\n\t    else {\n\t      this.setSelectionStart(this.selectionStart + offset);\n\t    }\n\t    if (this.selectionEnd < this.selectionStart  && this._selectionDirection === 'left') {\n\t      this.swapSelectionPoints();\n\t      this._selectionDirection = 'right';\n\t    }\n\t    if (this.selectionEnd > this.text.length) {\n\t      this.setSelectionEnd(this.text.length);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on first line, up cursor goes to start of line\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      return selectionProp;\n\t    }\n\t\n\t    var textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n\t        textOnPreviousLine = this._textLines[lineIndex - 1] || '',\n\t        _char,\n\t        widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, cursorLocation.lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor),\n\t        widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\t\n\t    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n\t      _char = textOnSameLineBeforeCursor[i];\n\t      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t\n\t    var indexOnPrevLine = this._getIndexOnPrevLine(\n\t      cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor);\n\t\n\t    return textOnPreviousLine.length - indexOnPrevLine + textOnSameLineBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getIndexOnPrevLine: function(cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t    var lineIndex = cursorLocation.lineIndex - 1,\n\t        widthOfPreviousLine = this._getLineWidth(this.ctx, lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfPreviousLine),\n\t        widthOfCharsOnPreviousLine = lineLeftOffset,\n\t        indexOnPrevLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnPreviousLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnPreviousLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnPreviousLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnPreviousLine > widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnPreviousLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnPreviousLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n\t            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\t\n\t        indexOnPrevLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnPrevLine = textOnPreviousLine.length - 1;\n\t    }\n\t\n\t    return indexOnPrevLine;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    var offset = this.getUpCursorOffset(e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorUpWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorUpWithoutShift(offset);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorUpWithShift: function(offset) {\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._selectionDirection = 'left';\n\t    }\n\t    if (this._selectionDirection === 'right') {\n\t      this.setSelectionEnd(this.selectionEnd - offset);\n\t    }\n\t    else {\n\t      this.setSelectionStart(this.selectionStart - offset);\n\t    }\n\t    if (this.selectionEnd < this.selectionStart && this._selectionDirection === 'right') {\n\t      this.swapSelectionPoints();\n\t      this._selectionDirection = 'left';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorUpWithoutShift: function(offset) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this.setSelectionStart(this.selectionStart - offset);\n\t    }\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._selectionDirection = 'left';\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorLeftWithShift(e);\n\t    }\n\t    else {\n\t      this.moveCursorLeftWithoutShift(e);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var propMethod = (prop === 'selectionStart' ? 'setSelectionStart' : 'setSelectionEnd');\n\t    if (e.altKey) {\n\t      this[propMethod](this['findWordBoundary' + direction](this[prop]));\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      this[propMethod](this['findLineBoundary' + direction](this[prop]));\n\t    }\n\t    else {\n\t      this[propMethod](this[prop] + (direction === 'Left' ? -1 : 1));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._moveLeft(e, 'selectionStart');\n\t    }\n\t    this.setSelectionEnd(this.selectionStart);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else {\n\t      this._selectionDirection = 'left';\n\t      this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorRightWithShift(e);\n\t    }\n\t    else {\n\t      this.moveCursorRightWithoutShift(e);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      this._moveRight(e, 'selectionStart');\n\t    }\n\t    else {\n\t      this._selectionDirection = 'right';\n\t      this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._moveRight(e, 'selectionStart');\n\t      this.setSelectionEnd(this.selectionStart);\n\t    }\n\t    else {\n\t      this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText());\n\t      this.setSelectionStart(this.selectionEnd);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this.styles[lineIndex]) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getSVGLineLeftOffset(lineIndex) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this.styles[lineIndex][i] || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineLeftOffset: function(lineIndex) {\n\t      return fabric.util.toFixed(this._getLineLeftOffset(this.__lineWidths[lineIndex]), 2);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        //jscs:disable validateIndentation\n\t        '<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>'\n\t        //jscs:enable validateIndentation\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text'\n\t      }, styleDecl));\n\t\n\t      return [\n\t        //jscs:disable validateIndentation\n\t        '<tspan x=\"', lineLeftOffset + charOffset, '\" y=\"',\n\t          lineTopOffset - this.height/2, '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ': ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ': ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ': ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ': ''),\n\t          'style=\"', fillStyles, '\">',\n\t          fabric.util.string.escapeXml(_char),\n\t        '</tspan>'\n\t        //jscs:enable validateIndentation\n\t      ].join('');\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {}),\n\t      clone  = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 0,\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this.callSuper('initialize', text, options);\n\t      this.set({\n\t        lockUniScaling: false,\n\t        lockScalingY: true,\n\t        lockScalingFlip: true,\n\t        hasBorders: true\n\t      });\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.width = true;\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines();\n\t\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t      this._setLineWidths();\n\t    },\n\t\n\t    /**\n\t     * set the __lineWidths cache array to support\n\t     * functions that expect it to be filled\n\t     * @private\n\t     */\n\t    _setLineWidths: function() {\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        this.__lineWidths[i] = this.width;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n') {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ') {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : {};\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0, decl;\n\t      charOffset = charOffset || 0;\n\t\n\t      for (var i = 0; i < text.length; i++) {\n\t        if (this.styles && this.styles[lineIndex] && (decl = this.styles[lineIndex][i + charOffset])) {\n\t          ctx.save();\n\t          width += this._applyCharStylesGetWidth(ctx, text[i], lineIndex, i, decl);\n\t          ctx.restore();\n\t        }\n\t        else {\n\t          // @note: we intentionally pass in an empty style declaration, because if we pass in nothing, it will\n\t          // retry fetching style declaration\n\t          width += this._applyCharStylesGetWidth(ctx, text[i], lineIndex, i, {});\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var maxWidth  = this.width,\n\t          lineWidth = this._measureText(ctx, text, lineIndex, 0);\n\t\n\t      // first case: does the whole line fit?\n\t      if (lineWidth < maxWidth) {\n\t        // if the current line is only one word, we need to keep track of it if it's a large word\n\t        if (text.indexOf(' ') === -1 && lineWidth > this.dynamicMinWidth) {\n\t          this.dynamicMinWidth = lineWidth;\n\t        }\n\t\n\t        return [text];\n\t      }\n\t\n\t      // if the whole line doesn't fit, we break it up into words\n\t      var lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          offset           = 0,\n\t          infix            = '',\n\t          wordWidth        = 0,\n\t          largestWordWidth = 0;\n\t\n\t      while (words.length > 0) {\n\t        infix = line === '' ? '' : ' ';\n\t        wordWidth = this._measureText(ctx, words[0], lineIndex, line.length + infix.length + offset);\n\t        lineWidth = line === '' ? wordWidth : this._measureText(ctx, line + infix + words[0], lineIndex, offset);\n\t\n\t        if (lineWidth < maxWidth || (line === '' && wordWidth >= maxWidth)) {\n\t          line += infix + words.shift();\n\t        }\n\t        else {\n\t          offset += line.length + 1; // add 1 because each word is separated by a space\n\t          lines.push(line);\n\t          line = '';\n\t        }\n\t\n\t        if (words.length === 0) {\n\t          lines.push(line);\n\t        }\n\t\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      this.ctx.save();\n\t      this._setTextStyles(this.ctx);\n\t\n\t      var lines = this._wrapText(this.ctx, this.text);\n\t\n\t      this.ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getCachedLineOffset(cursorLocation.lineIndex);\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        minWidth: this.minWidth\n\t      });\n\t    }\n\t  });\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object) {\n\t    return new fabric.Textbox(object.text, clone(object));\n\t  };\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t  /**\n\t   * Contains all fabric.Textbox objects that have been created\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @type Array\n\t   */\n\t  fabric.Textbox.instances = [];\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t      }\n\t    }\n\t    else {\n\t      setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles),\n\t          map          = this._styleMap[lineIndex];\n\t\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t          //console.log('deleting', lineIndex, charIndex + offset);\n\t        }\n\t\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(61).DOMParser,\n\t      URL = __webpack_require__(23),\n\t      HTTP = __webpack_require__(19),\n\t      HTTPS = __webpack_require__(42),\n\t\n\t      Canvas = __webpack_require__(13),\n\t      Image = __webpack_require__(13).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(59);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      var oImg = new fabric.Image(img);\n\t\n\t      oImg._initConfig(object);\n\t      oImg._initFilters(object.filters, function(filters) {\n\t        oImg.filters = filters || [ ];\n\t        oImg._initFilters(object.resizeFilters, function(resizeFilters) {\n\t          oImg.resizeFilters = resizeFilters || [ ];\n\t          callback && callback(oImg);\n\t        });\n\t      });\n\t    });\n\t  };\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.Font = Canvas.Font;\n\t\n\t    return fabricCanvas;\n\t  };\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  var origSetWidth = fabric.StaticCanvas.prototype.setWidth;\n\t  fabric.StaticCanvas.prototype.setWidth = function(width, options) {\n\t    origSetWidth.call(this, width, options);\n\t    this.nodeCanvas.width = width;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth;\n\t  }\n\t\n\t  var origSetHeight = fabric.StaticCanvas.prototype.setHeight;\n\t  fabric.StaticCanvas.prototype.setHeight = function(height, options) {\n\t    origSetHeight.call(this, height, options);\n\t    this.nodeCanvas.height = height;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, __webpack_require__(7)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tvar _deepDiff = __webpack_require__(18);\n\t\n\tvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\t\n\tvar _observable = __webpack_require__(16);\n\t\n\tvar _observable2 = _interopRequireDefault(_observable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar FabricObject = function (_React$Component) {\n\t\t_inherits(FabricObject, _React$Component);\n\t\n\t\tfunction FabricObject(props, context) {\n\t\t\t_classCallCheck(this, FabricObject);\n\t\n\t\t\t// Observable\n\t\t\tvar _this = _possibleConstructorReturn(this, (FabricObject.__proto__ || Object.getPrototypeOf(FabricObject)).call(this, props, context));\n\t\n\t\t\t(0, _observable2.default)(_this);\n\t\n\t\t\t//Object\n\t\t\t_this.adjustPosition = function (to) {\n\t\t\t\treturn _this.state.object && _this.state.object.adjustPosition(to);\n\t\t\t};\n\t\t\t_this.animate = function (property, value, opts) {\n\t\t\t\treturn _this.state.object && _this.state.object.animate(property, value, opts);\n\t\t\t};\n\t\t\t_this.bringForward = function (intersecting) {\n\t\t\t\treturn _this.state.object && _this.state.object.bringForward(intersecting);\n\t\t\t};\n\t\t\t_this.bringToFront = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.bringToFront();\n\t\t\t};\n\t\t\t_this.center = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.center();\n\t\t\t};\n\t\t\t_this.centerH = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.centerH();\n\t\t\t};\n\t\t\t_this.centerV = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.centerV();\n\t\t\t};\n\t\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t\t};\n\t\t\t_this.cloneAsImage = function (callback) {\n\t\t\t\treturn _this.state.object && _this.state.object.cloneAsImage(callback);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\t_this.containsPoint = function (point) {\n\t\t\t\treturn _this.state.object && _this.state.object.containsPoint(point);\n\t\t\t};\n\t\t\t_this.drawBorders = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.drawBorders(ctx);\n\t\t\t};\n\t\t\t_this.drawControls = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.drawControls(ctx);\n\t\t\t};\n\t\t\t_this.fxStraighten = function (callbacks) {\n\t\t\t\treturn _this.state.object && _this.state.object.fxStraighten(callbacks);\n\t\t\t};\n\t\t\t_this.get = function (property) {\n\t\t\t\treturn _this.state.object && _this.state.object.get(property);\n\t\t\t};\n\t\t\t_this.getAngle = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getAngle();\n\t\t\t};\n\t\t\t_this.getBoundingRect = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRect();\n\t\t\t};\n\t\t\t_this.getBoundingRectHeight = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRectHeight();\n\t\t\t};\n\t\t\t_this.getBoundingRectWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRectWidth();\n\t\t\t};\n\t\t\t_this.getCenterPoint = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getCenterPoint();\n\t\t\t};\n\t\t\t_this.getClipTo = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getClipTo();\n\t\t\t};\n\t\t\t_this.getFill = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFill();\n\t\t\t};\n\t\t\t_this.getFlipX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFlipX();\n\t\t\t};\n\t\t\t_this.getFlipY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFlipY();\n\t\t\t};\n\t\t\t_this.getLeft = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getLeft();\n\t\t\t};\n\t\t\t_this.getLocalPointer = function (e, pointer) {\n\t\t\t\treturn _this.state.object && _this.state.object.getLocalPointer(e, pointer);\n\t\t\t};\n\t\t\t_this.getOpacity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOpacity();\n\t\t\t};\n\t\t\t_this.getOriginX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginX();\n\t\t\t};\n\t\t\t_this.getOriginY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginY();\n\t\t\t};\n\t\t\t_this.getPointByOrigin = function (originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.getPointByOrigin(originX, originY);\n\t\t\t};\n\t\n\t\t\t_this.getScaleX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getScaleX();\n\t\t\t};\n\t\t\t_this.getScaleY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getScaleY();\n\t\t\t};\n\t\t\t_this.getShadow = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getShadow();\n\t\t\t};\n\t\t\t_this.getStrokeWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getStrokeWidth();\n\t\t\t};\n\t\t\t_this.getSvgStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgStyles();\n\t\t\t};\n\t\t\t_this.getSvgTransform = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgTransform();\n\t\t\t};\n\t\t\t_this.getSvgTransformMatrix = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgTransformMatrix();\n\t\t\t};\n\t\t\t_this.getTop = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getTop();\n\t\t\t};\n\t\t\t_this.getTransformMatrix = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getTransformMatrix();\n\t\t\t};\n\t\t\t_this.getViewportTransform = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getViewportTransform();\n\t\t\t};\n\t\t\t_this.getVisible = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getVisible();\n\t\t\t};\n\t\t\t_this.getWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getWidth();\n\t\t\t};\n\t\t\t_this.hasStateChanged = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.hasStateChanged();\n\t\t\t};\n\t\t\t_this.intersectsWithObject = function (other) {\n\t\t\t\treturn _this.state.object && _this.state.object.intersectsWithObject(other);\n\t\t\t};\n\t\t\t_this.intersectsWithRect = function (pointTL, pointBR) {\n\t\t\t\treturn _this.state.object && _this.state.object.intersectsWithRect(pointTL, pointBR);\n\t\t\t};\n\t\t\t_this.isContainedWithinObject = function (other) {\n\t\t\t\treturn _this.state.object && _this.state.object.isContainedWithinObject(other);\n\t\t\t};\n\t\t\t_this.isContainedWithinRect = function (pointTL, pointBR) {\n\t\t\t\treturn _this.state.object && _this.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\t\t};\n\t\t\t_this.isControlVisible = function (controlName) {\n\t\t\t\treturn _this.state.object && _this.state.object.isControlVisible(controlName);\n\t\t\t};\n\t\t\t_this.isType = function (type) {\n\t\t\t\treturn _this.state.object && _this.state.object.isType(type);\n\t\t\t};\n\t\t\t_this.moveTo = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.moveTo(index);\n\t\t\t};\n\t\t\t_this.remove = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.remove();\n\t\t\t};\n\t\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t\t};\n\t\t\t_this.saveState = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.saveState(options);\n\t\t\t};\n\t\t\t_this.scale = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scale(value);\n\t\t\t};\n\t\t\t_this.scaleToHeight = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scaleToHeight(value);\n\t\t\t};\n\t\t\t_this.scaleToWidth = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scaleToWidth(value);\n\t\t\t};\n\t\t\t_this.sendBackwards = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.sendBackwards();\n\t\t\t};\n\t\t\t_this.sendToBack = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.sendToBack();\n\t\t\t};\n\t\t\t_this.set = function (key, value) {\n\t\t\t\treturn _this.state.object && _this.state.object.set(key, value);\n\t\t\t};\n\t\t\t_this.setAngle = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setAngle(value);\n\t\t\t};\n\t\t\t_this.setClipTo = function (clipTo) {\n\t\t\t\treturn _this.state.object && _this.state.object.setClipTo(clipTo);\n\t\t\t};\n\t\t\t_this.setColor = function (color) {\n\t\t\t\treturn _this.state.object && _this.state.object.setColor(color);\n\t\t\t};\n\t\t\t_this.setControlsVisibility = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setControlsVisibility(options);\n\t\t\t};\n\t\t\t_this.setControlVisible = function (controlName, visible) {\n\t\t\t\treturn _this.state.object && _this.state.object.setControlVisible(controlName, visible);\n\t\t\t};\n\t\t\t_this.setCoords = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setCoords(value);\n\t\t\t};\n\t\t\t_this.setFill = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFill(value);\n\t\t\t};\n\t\t\t_this.setFlipX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFlipX(value);\n\t\t\t};\n\t\t\t_this.setFlipY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFlipY(value);\n\t\t\t};\n\t\t\t_this.setGradient = function (property, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setGradient(property, options);\n\t\t\t};\n\t\t\t_this.setLeft = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setLeft(value);\n\t\t\t};\n\t\t\t_this.setOpacity = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOpacity(value);\n\t\t\t};\n\t\t\t_this.setOptions = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOptions(options);\n\t\t\t};\n\t\t\t_this.setOriginX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOriginX(value);\n\t\t\t};\n\t\t\t_this.setOriginY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOriginY(value);\n\t\t\t};\n\t\t\t_this.setPatternFill = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setPatternFill(options);\n\t\t\t};\n\t\t\t_this.setPositionByOrigin = function (pos, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.setPositionByOrigin(pos, originX, originY);\n\t\t\t};\n\t\t\t_this.setScaleX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setScaleX(value);\n\t\t\t};\n\t\t\t_this.setScaleY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setScaleY(value);\n\t\t\t};\n\t\t\t_this.setShadow = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setShadow(options);\n\t\t\t};\n\t\t\t_this.setSourcePath = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSourcePath(value);\n\t\t\t};\n\t\t\t_this.setStroke = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setStroke(value);\n\t\t\t};\n\t\t\t_this.setStrokeWidth = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setStrokeWidth(value);\n\t\t\t};\n\t\t\t_this.setTop = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setTop(value);\n\t\t\t};\n\t\t\t_this.setTransformMatrix = function (transformMatrix) {\n\t\t\t\treturn _this.state.object && _this.state.object.setTransformMatrix(transformMatrix);\n\t\t\t};\n\t\t\t_this.setupState = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.setupState(value);\n\t\t\t};\n\t\t\t_this.setVisible = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setVisible(value);\n\t\t\t};\n\t\t\t_this.straighten = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.straighten();\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toDatalessObject();\n\t\t\t};\n\t\t\t_this.toDataURL = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toDataURL(options);\n\t\t\t};\n\t\t\t_this.toggle = function (property) {\n\t\t\t\treturn _this.state.object && _this.state.object.toggle(property);\n\t\t\t};\n\t\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toLocalPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.toLocalPoint(point, originX, originY);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.transform = function (ctx, fromLeft) {\n\t\t\t\treturn _this.state.object && _this.state.object.transform(ctx, fromLeft);\n\t\t\t};\n\t\t\t_this.translateToCenterPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.translateToCenterPoint(point, originX, originY);\n\t\t\t};\n\t\t\t_this.translateToOriginPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.translateToOriginPoint(point, originX, originY);\n\t\t\t};\n\t\n\t\t\t// React\n\t\t\t_this.getObject = function () {\n\t\t\t\treturn _this.state.object;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(FabricObject, [{\n\t\t\tkey: 'componentWillReceiveProps',\n\t\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar difference = (0, _deepDiff2.default)(this.props, nextProps);\n\t\t\t\tif (difference) {\n\t\t\t\t\tdifference.forEach(function (comparsion) {\n\t\t\t\t\t\t_this2.set(comparsion.path[0], comparsion.rhs);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.eventChanged(nextProps);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(object, cb) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.setState({ object: object }, function () {\n\t\t\t\t\tcb && cb(object);\n\t\t\t\t\t// canvas.add(object);\n\t\t\t\t\t_this3.initEvent();\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabricWebpack.fabric.Object)) return;\n\t\n\t\t\t\tif (this.props.onAdded instanceof Function) {\n\t\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t\t}\n\t\t\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelected instanceof Function) {\n\t\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t\t}\n\t\t\t\tif (this.props.onModified instanceof Function) {\n\t\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t\t}\n\t\t\t\tif (this.props.onRotating instanceof Function) {\n\t\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t\t}\n\t\t\t\tif (this.props.onScaling instanceof Function) {\n\t\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMoving instanceof Function) {\n\t\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabricWebpack.fabric.Object)) return;\n\t\n\t\t\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\t\t\tobject.off('added');\n\t\t\t\t} else if (nextProps.onAdded instanceof Function) {\n\t\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\t\t\tobject.off('removed');\n\t\t\t\t} else if (nextProps.onRemoved instanceof Function) {\n\t\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\t\t\tobject.off('selected');\n\t\t\t\t} else if (nextProps.onSelected instanceof Function) {\n\t\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\t\t\tobject.off('modified');\n\t\t\t\t} else if (nextProps.onModified instanceof Function) {\n\t\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\t\t\tobject.off('rotating');\n\t\t\t\t} else if (nextProps.onRotating instanceof Function) {\n\t\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\t\t\tobject.off('scaling');\n\t\t\t\t} else if (nextProps.onScaling instanceof Function) {\n\t\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\t\t\tobject.off('moving');\n\t\t\t\t} else if (nextProps.onMoving instanceof Function) {\n\t\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\t\t\tobject.off('mousedown');\n\t\t\t\t} else if (nextProps.onMousedown instanceof Function) {\n\t\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\t\t\tobject.off('mouseup');\n\t\t\t\t} else if (nextProps.onMouseup instanceof Function) {\n\t\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn FabricObject;\n\t}(_react2.default.Component);\n\t\n\texports.default = FabricObject;\n\t\n\t\n\tFabricObject.__uid = _fabricWebpack.fabric.Object.__uid;\n\tFabricObject.NUM_FRACTION_DIGITS = _fabricWebpack.fabric.Object.NUM_FRACTION_DIGITS;\n\tFabricObject.rotate = _fabricWebpack.fabric.Object.rotate;\n\t\n\tFabricObject.propTypes = {\n\t\tangle: _react.PropTypes.number,\n\t\tbackgroundColor: _react.PropTypes.string,\n\t\tborderColor: _react.PropTypes.string,\n\t\tborderOpacityWhenMoving: _react.PropTypes.number,\n\t\tborderScaleFactor: _react.PropTypes.number,\n\t\tcenteredRotation: _react.PropTypes.bool,\n\t\tcenteredScaling: _react.PropTypes.bool,\n\t\tclipTo: _react.PropTypes.func,\n\t\tcornerColor: _react.PropTypes.string,\n\t\tcornerSize: _react.PropTypes.number,\n\t\tevented: _react.PropTypes.bool,\n\t\tfill: _react.PropTypes.string,\n\t\tfillRule: _react.PropTypes.string,\n\t\tflipX: _react.PropTypes.bool,\n\t\tflipY: _react.PropTypes.bool,\n\t\tglobalCompositeOperation: _react.PropTypes.string,\n\t\thasBorders: _react.PropTypes.bool,\n\t\thasControls: _react.PropTypes.bool,\n\t\thasRotatingPoint: _react.PropTypes.bool,\n\t\theight: _react.PropTypes.number,\n\t\thoverCursor: _react.PropTypes.string,\n\t\tincludeDefaultValues: _react.PropTypes.bool,\n\t\tleft: _react.PropTypes.number,\n\t\tlockMovementX: _react.PropTypes.bool,\n\t\tlockMovementY: _react.PropTypes.bool,\n\t\tlockRotation: _react.PropTypes.bool,\n\t\tlockScalingFlip: _react.PropTypes.bool,\n\t\tlockScalingX: _react.PropTypes.bool,\n\t\tlockScalingY: _react.PropTypes.bool,\n\t\tlockUniScaling: _react.PropTypes.bool,\n\t\tminScaleLimit: _react.PropTypes.number,\n\t\toCoords: _react.PropTypes.object,\n\t\topacity: _react.PropTypes.number,\n\t\toriginX: _react.PropTypes.oneOf(['left', 'right', 'center']),\n\t\toriginY: _react.PropTypes.oneOf(['top', 'bottom', 'center']),\n\t\tpadding: _react.PropTypes.number,\n\t\tperPixelTargetFind: _react.PropTypes.bool,\n\t\trotatingPointOffset: _react.PropTypes.number,\n\t\tscaleX: _react.PropTypes.number,\n\t\tscaleY: _react.PropTypes.number,\n\t\tselectable: _react.PropTypes.bool,\n\t\tshadow: _react.PropTypes.oneOfType([_react2.default.PropTypes.instanceOf(_fabricWebpack.fabric.Shadow), _react.PropTypes.string]),\n\t\tstateProperties: _react.PropTypes.array,\n\t\tstroke: _react.PropTypes.string,\n\t\tstrokeDashArray: _react.PropTypes.array,\n\t\tstrokeLineCap: _react.PropTypes.oneOf(['butt', 'round', 'square']),\n\t\tstrokeLineJoin: _react.PropTypes.oneOf(['bevil', 'round', 'miter']),\n\t\tstrokeMiterLimit: _react.PropTypes.number,\n\t\tstrokeWidth: _react.PropTypes.number,\n\t\ttop: _react.PropTypes.number,\n\t\ttransformMatrix: _react.PropTypes.array,\n\t\ttransparentCorners: _react.PropTypes.bool,\n\t\ttype: _react.PropTypes.string,\n\t\tvisible: _react.PropTypes.bool,\n\t\twidth: _react.PropTypes.number\n\t};\n\t\n\tFabricObject.defaultProps = {\n\t\ttype: 'object',\n\t\toriginX: 'left',\n\t\toriginY: 'top',\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t\tscaleX: 1,\n\t\tscaleY: 1,\n\t\tflipX: false,\n\t\tflipY: false,\n\t\topacity: 1,\n\t\tangle: 0,\n\t\tskewX: 0,\n\t\tskewY: 0,\n\t\tcornerSize: 12,\n\t\ttransparentCorners: true,\n\t\thoverCursor: null,\n\t\tpadding: 0,\n\t\tborderColor: 'rgba(102,153,255,0.75)',\n\t\tcornerColor: 'rgba(102,153,255,0.5)',\n\t\tcenteredScaling: false,\n\t\tcenteredRotation: true,\n\t\tfill: 'rgb(0,0,0)',\n\t\tfillRule: 'nonzero',\n\t\tglobalCompositeOperation: 'source-over',\n\t\tbackgroundColor: '',\n\t\tstroke: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeDashArray: null,\n\t\tstrokeLineCap: 'butt',\n\t\tstrokeLineJoin: 'miter',\n\t\tstrokeMiterLimit: 10,\n\t\tshadow: null,\n\t\tborderOpacityWhenMoving: 0.4,\n\t\tborderScaleFactor: 1,\n\t\ttransformMatrix: null,\n\t\tminScaleLimit: 0.01,\n\t\tselectable: true,\n\t\tevented: true,\n\t\tvisible: true,\n\t\thasControls: true,\n\t\thasBorders: true,\n\t\thasRotatingPoint: true,\n\t\trotatingPointOffset: 40,\n\t\tperPixelTargetFind: false,\n\t\tincludeDefaultValues: true,\n\t\n\t\tclipTo: null,\n\t\n\t\tlockMovementX: false,\n\t\tlockMovementY: false,\n\t\tlockRotation: false,\n\t\tlockScalingX: false,\n\t\tlockScalingY: false,\n\t\tlockUniScaling: false,\n\t\tlockSkewingX: false,\n\t\tlockSkewingY: false,\n\t\tlockScalingFlip: false,\n\t\n\t\t// oCoords: null,\n\t\n\t\tstateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' + 'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' + 'alignX alignY meetOrSlice skewX skewY').split(' ')\n\t\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(21);\n\tvar Writable = __webpack_require__(12);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tforEach(objectKeys(Writable.prototype), function(method) {\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] = Writable.prototype[method];\n\t});\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex))\n\t    return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false)\n\t    this.readable = false;\n\t\n\t  if (options && options.writable === false)\n\t    this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false)\n\t    this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended)\n\t    return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  process.nextTick(this.end.bind(this));\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(39)\n\tvar ieee754 = __webpack_require__(43)\n\tvar isArray = __webpack_require__(44)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(10).EventEmitter;\n\tvar inherits = __webpack_require__(4);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(51);\n\tStream.Writable = __webpack_require__(53);\n\tStream.Duplex = __webpack_require__(49);\n\tStream.Transform = __webpack_require__(52);\n\tStream.PassThrough = __webpack_require__(50);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(5);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\t\n\tfunction TransformState(options, stream) {\n\t  this.afterTransform = function(er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb)\n\t    return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\t\n\t  if (cb)\n\t    cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform))\n\t    return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(options, this);\n\t\n\t  // when the writable side finishes, then flush out anything remaining.\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  this.once('prefinish', function() {\n\t    if (util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t        done(stream, er);\n\t      });\n\t    else\n\t      done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function(chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function(chunk, encoding, cb) {\n\t  throw new Error('not implemented');\n\t};\n\t\n\tTransform.prototype._write = function(chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform ||\n\t        rs.needReadable ||\n\t        rs.length < rs.highWaterMark)\n\t      this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function(n) {\n\t  var ts = this._transformState;\n\t\n\t  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\t\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return stream.emit('error', er);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length)\n\t    throw new Error('calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming)\n\t    throw new Error('calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(8);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function(er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.buffer = [];\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t}\n\t\n\tfunction Writable(options) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex))\n\t    return new Writable(options);\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function() {\n\t  this.emit('error', new Error('Cannot pipe. Not readable.'));\n\t};\n\t\n\t\n\tfunction writeAfterEnd(stream, state, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    cb(er);\n\t  });\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    var er = new TypeError('Invalid non-string/buffer chunk');\n\t    stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      cb(er);\n\t    });\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  else if (!encoding)\n\t    encoding = state.defaultEncoding;\n\t\n\t  if (!util.isFunction(cb))\n\t    cb = function() {};\n\t\n\t  if (state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function() {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function() {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing &&\n\t        !state.corked &&\n\t        !state.finished &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length)\n\t      clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode &&\n\t      state.decodeStrings !== false &&\n\t      util.isString(chunk)) {\n\t    chunk = new Buffer(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret)\n\t    state.needDrain = true;\n\t\n\t  if (state.writing || state.corked)\n\t    state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    state.pendingcb--;\n\t    cb(er);\n\t  }\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er)\n\t    onwriteError(stream, state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(stream, state);\n\t\n\t    if (!finished &&\n\t        !state.corked &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      process.nextTick(function() {\n\t        afterWrite(stream, state, finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t\n\t  if (stream._writev && state.buffer.length > 1) {\n\t    // Fast case, write everything using _writev()\n\t    var cbs = [];\n\t    for (var c = 0; c < state.buffer.length; c++)\n\t      cbs.push(state.buffer[c].callback);\n\t\n\t    // count the one we are adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n\t      for (var i = 0; i < cbs.length; i++) {\n\t        state.pendingcb--;\n\t        cbs[i](err);\n\t      }\n\t    });\n\t\n\t    // Clear buffer\n\t    state.buffer = [];\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    for (var c = 0; c < state.buffer.length; c++) {\n\t      var entry = state.buffer[c];\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (c < state.buffer.length)\n\t      state.buffer = state.buffer.slice(c);\n\t    else\n\t      state.buffer.length = 0;\n\t  }\n\t\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function(chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\t\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (util.isFunction(chunk)) {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (!util.isNullOrUndefined(chunk))\n\t    this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished)\n\t    endWritable(this, state, cb);\n\t};\n\t\n\t\n\tfunction needFinish(stream, state) {\n\t  return (state.ending &&\n\t          state.length === 0 &&\n\t          !state.finished &&\n\t          !state.writing);\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(stream, state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else\n\t      prefinish(stream, state);\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      process.nextTick(cb);\n\t    else\n\t      stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tvar _deepDiff = __webpack_require__(18);\n\t\n\tvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\t\n\tvar _collection = __webpack_require__(30);\n\t\n\tvar _collection2 = _interopRequireDefault(_collection);\n\t\n\tvar _observable = __webpack_require__(16);\n\t\n\tvar _observable2 = _interopRequireDefault(_observable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar StaticCanvas = function (_React$Component) {\n\t\t_inherits(StaticCanvas, _React$Component);\n\t\n\t\tfunction StaticCanvas(props, context) {\n\t\t\t_classCallCheck(this, StaticCanvas);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (StaticCanvas.__proto__ || Object.getPrototypeOf(StaticCanvas)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tcanvas: null\n\t\t\t};\n\t\n\t\t\t(0, _collection2.default)(_this);\n\t\t\t(0, _observable2.default)(_this);\n\t\n\t\t\t//Static Canvas\n\t\t\t_this.absolutePan = function (point) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.absolutePan(point);\n\t\t\t};\n\t\t\t_this.bringForward = function (object, intersecting) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.bringForward(object, intersecting);\n\t\t\t};\n\t\t\t_this.bringToFront = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.bringToFront(object);\n\t\t\t};\n\t\t\t_this.centerObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObject(object);\n\t\t\t};\n\t\t\t_this.centerObjectH = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectH(object);\n\t\t\t};\n\t\t\t_this.centerObjectV = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectV(object);\n\t\t\t};\n\t\t\t_this.clear = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clear();\n\t\t\t};\n\t\t\t_this.clearContext = function (ctx) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clearContext(ctx);\n\t\t\t};\n\t\t\t_this.clone = function (callback, properties) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clone(callback, properties);\n\t\t\t};\n\t\t\t_this.cloneWithoutData = function (callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.cloneWithoutData(callback);\n\t\t\t};\n\t\t\t_this.dispose = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t\t};\n\t\t\t_this.fxCenterObjectH = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectH(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxCenterObjectV = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectV(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxRemove = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxRemove(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxStraightenObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxStraightenObject(object);\n\t\t\t};\n\t\t\t_this.getActiveGroup = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveGroup();\n\t\t\t};\n\t\t\t_this.getActiveObject = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t\t};\n\t\t\t_this.getCenter = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getCenter();\n\t\t\t};\n\t\t\t_this.getContext = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getContext();\n\t\t\t};\n\t\t\t_this.getElement = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getElement();\n\t\t\t};\n\t\t\t_this.getHeight = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getHeight();\n\t\t\t};\n\t\t\t_this.getWidth = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getWidth();\n\t\t\t};\n\t\t\t_this.getZoom = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getZoom();\n\t\t\t};\n\t\t\t_this.loadFromDatalessJSON = function (json, callback, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\t\t};\n\t\t\t_this.loadFromJSON = function (json, callback, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromJSON(json, callback, reviver);\n\t\t\t};\n\t\t\t_this.moveTo = function (object, index) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.moveTo(object, index);\n\t\t\t};\n\t\t\t_this.onBeforeScaleRotate = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.onBeforeScaleRotate();\n\t\t\t};\n\t\t\t_this.relativePan = function (point) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.relativePan(point);\n\t\t\t};\n\t\t\t_this.renderAll = function (allOnTop) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.renderAll(allOnTop);\n\t\t\t};\n\t\t\t_this.renderTop = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.renderTop();\n\t\t\t};\n\t\t\t_this.sendBackwards = function (object, intersecting) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.sendBackwards(object, intersecting);\n\t\t\t};\n\t\t\t_this.sendToBack = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.sendToBack(object);\n\t\t\t};\n\t\t\t_this.setBackgroundColor = function (backgroundColor, callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\t\t};\n\t\t\t_this.setBackgroundImage = function (image, callback, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundImage(image, callback, options);\n\t\t\t};\n\t\t\t_this.setDimensions = function (dimensions, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setDimensions(dimensions, options);\n\t\t\t};\n\t\t\t_this.setHeight = function (value, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setHeight(value, options);\n\t\t\t};\n\t\t\t_this.setOverlayColor = function (overlayColor, callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayColor(overlayColor, callback);\n\t\t\t};\n\t\t\t_this.setOverlayImage = function (image, callback, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayImage(image, callback, options);\n\t\t\t};\n\t\t\t_this.setViewportTransform = function (vpt) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setViewportTransform(vpt);\n\t\t\t};\n\t\t\t_this.setWidth = function (value, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setWidth(value, options);\n\t\t\t};\n\t\t\t_this.setZoom = function (value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setZoom(value);\n\t\t\t};\n\t\t\t_this.straightenObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.straightenObject(object);\n\t\t\t};\n\t\t\t_this.toDatalessJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDataURL = function (options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURL(options);\n\t\t\t};\n\t\t\t_this.toDataURLWithMultiplier = function (format, multiplier, quality) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\t\t};\n\t\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toString();\n\t\t\t};\n\t\t\t_this.toSVG = function (options, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toSVG(options, reviver);\n\t\t\t};\n\t\t\t_this.zoomToPoint = function (point, value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.zoomToPoint(point, value);\n\t\t\t};\n\t\n\t\t\t// React\n\t\t\t_this.getChild = _this.getChild.bind(_this);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(StaticCanvas, [{\n\t\t\tkey: 'componentDidMount',\n\t\t\tvalue: function componentDidMount() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar canvas = new _fabricWebpack.fabric.Canvas(this.props.id);\n\t\n\t\t\t\tthis.setState({ canvas: canvas }, function () {\n\t\t\t\t\t_this2.initEvent.call(_this2);\n\t\t\t\t\tObject.keys(_this2.ref).forEach(function (key) {\n\t\t\t\t\t\tvar ref = _this2.ref[key];\n\t\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\t\treturn _this2.add(obj);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'componentWillReceiveProps',\n\t\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.prevRef = {};\n\t\t\t\tObject.keys(this.ref).forEach(function (key) {\n\t\t\t\t\t_this3.prevRef[key] = _this3.ref[key];\n\t\t\t\t});\n\t\t\t\tthis.ref = {};\n\t\n\t\t\t\t/* Options Changed */\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t\t\t}\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.height !== nextProps.height) {\n\t\t\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t\t\t}\n\t\t\t\tif (this.props.width !== nextProps.width) {\n\t\t\t\t\tthis.state.canvas.setHeight(nextProps.width);\n\t\t\t\t}\n\t\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t\t\t}\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t\t\t}\n\t\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t\t\t}\n\t\n\t\t\t\t/* TODO: Event Changed */\n\t\t\t\tthis.eventChanged(nextProps);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'componentDidUpdate',\n\t\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\t\tvar _this4 = this;\n\t\n\t\t\t\t/* TODO: Children Changed */\n\t\n\t\t\t\tif (prevState.canvas) {\n\t\t\t\t\t_react2.default.Children.map(this.props.children, function (child, i) {\n\t\t\t\t\t\tif (!child) return;\n\t\n\t\t\t\t\t\tvar key = child.ref ? child.ref : 'layer' + i;\n\t\t\t\t\t\tvar ref = _this4.ref[key];\n\t\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\t\treturn _this4.add(obj);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\n\t\t\t\t\tObject.keys(this.prevRef).forEach(function (key) {\n\t\t\t\t\t\tvar ref = _this4.prevRef[key];\n\t\t\t\t\t\t_this4.remove(ref.getObject());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t\t\t}\n\t\n\t\t\t// childAddedrRemove(oldChild, child, index) {\n\t\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t\t// } else if (oldChild && !child) {\n\t\t\t// \tconst key = oldChild.ref;\n\t\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t\t// \tconst obj = ref.getObject();\n\t\t\t//\n\t\t\t// \tthis.remove(obj);\n\t\t\t// \tthis.ref[ref] = null;\n\t\t\t// }\n\t\t\t// }\n\t\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar canvas = this.state.canvas;\n\t\n\t\t\t\tif (!canvas) return;\n\t\n\t\t\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t\t}\n\t\t\t\tif (this.props.afterRender instanceof Function) {\n\t\t\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t\t\t}\n\t\t\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t\t}\n\t\t\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t\t\t}\n\t\t\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar canvas = this.state.canvas;\n\t\n\t\t\t\tif (!canvas) return;\n\t\n\t\t\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\t\t\tcanvas.off('before:render');\n\t\t\t\t} else if (nextProps.beforeRender instanceof Function) {\n\t\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\t\t\tobject.off('after:render');\n\t\t\t\t} else if (nextProps.afterRender instanceof Function) {\n\t\t\t\t\tobject.on('after:render', this.props.afterRender);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\t\t\tobject.off('canvas:cleared');\n\t\t\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n\t\t\t\t\tobject.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\t\t\tobject.off('object:added');\n\t\t\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n\t\t\t\t\tobject.on('object:added', this.props.onObjectAdded);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\t\t\tobject.off('object:removed');\n\t\t\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n\t\t\t\t\tobject.on('object:removed', this.props.onObjectRemoved);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getChild',\n\t\t\tvalue: function getChild(ref) {\n\t\t\t\treturn this.ref[ref];\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render() {\n\t\t\t\tvar _this5 = this;\n\t\n\t\t\t\tvar _props = this.props;\n\t\t\t\tvar id = _props.id;\n\t\t\t\tvar children = _props.children;\n\t\n\t\t\t\treturn _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\tnull,\n\t\t\t\t\t_react2.default.createElement('canvas', { id: id, width: this.props.width, height: this.props.height }),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.state.canvas && _react2.default.Children.map(children, function (child, i) {\n\t\t\t\t\t\t\treturn child && _react2.default.cloneElement(child, {\n\t\t\t\t\t\t\t\tref: function ref(c) {\n\t\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t\t_this5.ref[child.ref || 'layer' + i] = c;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn StaticCanvas;\n\t}(_react2.default.Component);\n\t\n\texports.default = StaticCanvas;\n\t\n\t\n\tStaticCanvas.emptyJSON = _fabricWebpack.fabric.StaticCanvas.EMPTY_JSON;\n\tStaticCanvas.supports = function (methodName) {\n\t\treturn _fabricWebpack.fabric.StaticCanvas.supports(methodName);\n\t};\n\t\n\tStaticCanvas.propTypes = {\n\t\tallowTouchScrolling: _react.PropTypes.bool,\n\t\tbackgroundColor: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.instanceOf(_fabricWebpack.fabric.Pattern)]),\n\t\tbackgroundImage: _react.PropTypes.instanceOf(_fabricWebpack.fabric.Image),\n\t\tclipTo: _react.PropTypes.func,\n\t\tcontrolsAboveOverlay: _react.PropTypes.bool,\n\t\tFX_DURATION: _react.PropTypes.number,\n\t\timageSmoothingEnabled: _react.PropTypes.bool,\n\t\tincludeDefaultValues: _react.PropTypes.bool,\n\t\toverlayColor: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.instanceOf(_fabricWebpack.fabric.Pattern)]),\n\t\toverlayImage: _react.PropTypes.instanceOf(_fabricWebpack.fabric.Image),\n\t\tpreserveObjectStacking: _react.PropTypes.bool,\n\t\trenderOnAddRemove: _react.PropTypes.bool,\n\t\tstateful: _react.PropTypes.bool,\n\t\tsvgViewportTransformation: _react.PropTypes.bool,\n\t\tviewportTransform: _react.PropTypes.array,\n\t\n\t\twidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),\n\t\n\t\theight: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),\n\t\n\t\tid: _react.PropTypes.string,\n\t\tbeforeRender: _react.PropTypes.func,\n\t\tafterRender: _react.PropTypes.func,\n\t\tonCanvasCleared: _react.PropTypes.func,\n\t\tonObjectAdded: _react.PropTypes.func,\n\t\tonObjectRemoved: _react.PropTypes.func\n\t};\n\t\n\tStaticCanvas.defaultProps = {\n\t\tallowTouchScrolling: false,\n\t\tbackgroundColor: '',\n\t\tbackgroundImage: null,\n\t\tclipTo: null,\n\t\tcontrolsAboveOverlay: false,\n\t\tFX_DURATION: 500,\n\t\timageSmoothingEnabled: true,\n\t\tincludeDefaultValues: true,\n\t\toverlayColor: '',\n\t\toverlayImage: null,\n\t\tpreserveObjectStacking: false,\n\t\trenderOnAddRemove: true,\n\t\tstateful: true,\n\t\tsvgViewportTransformation: true,\n\t\tviewportTransform: null,\n\t\n\t\twidth: 100,\n\t\theight: 100,\n\t\n\t\tid: 'c'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = function (_FabricObject) {\n\t\t_inherits(Text, _FabricObject);\n\t\n\t\tfunction Text(props, context) {\n\t\t\t_classCallCheck(this, Text);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.isEmptyStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isEmptyStyles();\n\t\t\t};\n\t\t\t_this.renderf = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Text, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Text.fromObject(this.props.object);\n\t\t\t\t} else if (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Text.fromElement(this.props.element, this.props);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Text(this.props.text, this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Text;\n\t}(_Object2.default);\n\t\n\texports.default = Text;\n\t\n\t\n\tText.attribute = _fabricWebpack.fabric.Text.ATTRIBUTE_NAMES;\n\tText.defaultSvgFontSize = _fabricWebpack.fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\tText.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Text.fromElement(element, options);\n\t};\n\tText.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Text.fromObject(object);\n\t};\n\t\n\tText.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tfontSize: _react.PropTypes.number,\n\t\tfontWeight: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),\n\t\tfontFamily: _react.PropTypes.string,\n\t\ttextDecoration: _react.PropTypes.oneOf(['', 'underline', 'overline', 'line-through']),\n\t\ttextAlign: _react.PropTypes.oneOf(['left', 'center', 'right', 'justify']),\n\t\tfontStyle: _react.PropTypes.oneOf(['', 'normal', 'italic', 'oblique']),\n\t\tlineHeight: _react.PropTypes.number,\n\t\ttextBackgroundColor: _react.PropTypes.string\n\t});\n\t\n\tText.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'text',\n\t\tstateProperties: _Object2.default.defaultProps.stateProperties.concat(['fontFamily', 'fontWeight', 'fontSize', 'text', 'textDecoration', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor']),\n\t\tfontSize: 40,\n\t\tfontWeight: 'normal',\n\t\tfontFamily: 'Times New Roman',\n\t\ttextDecoration: '',\n\t\ttextAlign: 'left',\n\t\tfontStyle: '',\n\t\tlineHeight: 1.16,\n\t\ttextBackgroundColor: '',\n\t\tstroke: null,\n\t\tshadow: null\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction observableMixin(delgete) {\n\t\tdelgete.observe = function (eventName, handler) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.observe(eventName, handler);\n\t\t};\n\t\tdelgete.stopObserving = function (eventName, handler) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.stopObserving(eventName, handler);\n\t\t};\n\t\tdelgete.fire = function (eventName, options) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.fire(eventName, options);\n\t\t};\n\t\tdelgete.on = delgete.observe;\n\t\tdelgete.off = delgete.stopObserving;\n\t\tdelgete.trigger = delgete.fire;\n\t}\n\t\n\texports.default = observableMixin;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Path = function (_FabricObject) {\n\t\t_inherits(Path, _FabricObject);\n\t\n\t\tfunction Path(props, context) {\n\t\t\t_classCallCheck(this, Path);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Path.__proto__ || Object.getPrototypeOf(Path)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Path, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.Path.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.Path.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar object = new _fabricWebpack.fabric.Path(this.props.path, this.props);\n\t\t\t\t\t_get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', this).call(this, object, cb);\n\t\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Path;\n\t}(_Object2.default);\n\t\n\texports.default = Path;\n\t\n\t\n\tPath.fromElement = function (element, callback, options) {\n\t\treturn _fabricWebpack.fabric.Path.fromElement(element, callback, options);\n\t};\n\tPath.fromObject = function (object, callback) {\n\t\treturn _fabricWebpack.fabric.Path.fromObject(object, callback);\n\t};\n\tPath.attribute = _fabricWebpack.fabric.Path.ATTRIBUTE_NAMES;\n\t\n\tPath.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tpath: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string]),\n\t\tminX: _react.PropTypes.number,\n\t\tminY: _react.PropTypes.number\n\t});\n\t\n\tPath.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'path',\n\t\tpath: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * deep-diff.\n\t * Licensed under the MIT License.\n\t */\n\t;(function(root, factory) {\n\t  'use strict';\n\t  if (true) {\n\t    // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return factory();\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // Node. Does not work with strict CommonJS, but\n\t    // only CommonJS-like environments that support module.exports,\n\t    // like Node.\n\t    module.exports = factory();\n\t  } else {\n\t    // Browser globals (root is window)\n\t    root.DeepDiff = factory();\n\t  }\n\t}(this, function(undefined) {\n\t  'use strict';\n\t\n\t  var $scope, conflict, conflictResolution = [];\n\t  if (typeof global === 'object' && global) {\n\t    $scope = global;\n\t  } else if (typeof window !== 'undefined') {\n\t    $scope = window;\n\t  } else {\n\t    $scope = {};\n\t  }\n\t  conflict = $scope.DeepDiff;\n\t  if (conflict) {\n\t    conflictResolution.push(\n\t      function() {\n\t        if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n\t          $scope.DeepDiff = conflict;\n\t          conflict = undefined;\n\t        }\n\t      });\n\t  }\n\t\n\t  // nodejs compatible on server side and in the browser.\n\t  function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  }\n\t\n\t  function Diff(kind, path) {\n\t    Object.defineProperty(this, 'kind', {\n\t      value: kind,\n\t      enumerable: true\n\t    });\n\t    if (path && path.length) {\n\t      Object.defineProperty(this, 'path', {\n\t        value: path,\n\t        enumerable: true\n\t      });\n\t    }\n\t  }\n\t\n\t  function DiffEdit(path, origin, value) {\n\t    DiffEdit.super_.call(this, 'E', path);\n\t    Object.defineProperty(this, 'lhs', {\n\t      value: origin,\n\t      enumerable: true\n\t    });\n\t    Object.defineProperty(this, 'rhs', {\n\t      value: value,\n\t      enumerable: true\n\t    });\n\t  }\n\t  inherits(DiffEdit, Diff);\n\t\n\t  function DiffNew(path, value) {\n\t    DiffNew.super_.call(this, 'N', path);\n\t    Object.defineProperty(this, 'rhs', {\n\t      value: value,\n\t      enumerable: true\n\t    });\n\t  }\n\t  inherits(DiffNew, Diff);\n\t\n\t  function DiffDeleted(path, value) {\n\t    DiffDeleted.super_.call(this, 'D', path);\n\t    Object.defineProperty(this, 'lhs', {\n\t      value: value,\n\t      enumerable: true\n\t    });\n\t  }\n\t  inherits(DiffDeleted, Diff);\n\t\n\t  function DiffArray(path, index, item) {\n\t    DiffArray.super_.call(this, 'A', path);\n\t    Object.defineProperty(this, 'index', {\n\t      value: index,\n\t      enumerable: true\n\t    });\n\t    Object.defineProperty(this, 'item', {\n\t      value: item,\n\t      enumerable: true\n\t    });\n\t  }\n\t  inherits(DiffArray, Diff);\n\t\n\t  function arrayRemove(arr, from, to) {\n\t    var rest = arr.slice((to || from) + 1 || arr.length);\n\t    arr.length = from < 0 ? arr.length + from : from;\n\t    arr.push.apply(arr, rest);\n\t    return arr;\n\t  }\n\t\n\t  function realTypeOf(subject) {\n\t    var type = typeof subject;\n\t    if (type !== 'object') {\n\t      return type;\n\t    }\n\t\n\t    if (subject === Math) {\n\t      return 'math';\n\t    } else if (subject === null) {\n\t      return 'null';\n\t    } else if (Array.isArray(subject)) {\n\t      return 'array';\n\t    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n\t      return 'date';\n\t    } else if (typeof subject.toString !== 'undefined' && /^\\/.*\\//.test(subject.toString())) {\n\t      return 'regexp';\n\t    }\n\t    return 'object';\n\t  }\n\t\n\t  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n\t    path = path || [];\n\t    var currentPath = path.slice(0);\n\t    if (typeof key !== 'undefined') {\n\t      if (prefilter) {\n\t        if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) { return; }\n\t        else if (typeof(prefilter) === 'object') {\n\t          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) { return; }\n\t          if (prefilter.normalize) {\n\t            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n\t            if (alt) {\n\t              lhs = alt[0];\n\t              rhs = alt[1];\n\t            }\n\t          }\n\t        }\n\t      }\n\t      currentPath.push(key);\n\t    }\n\t\n\t    // Use string comparison for regexes\n\t    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n\t      lhs = lhs.toString();\n\t      rhs = rhs.toString();\n\t    }\n\t\n\t    var ltype = typeof lhs;\n\t    var rtype = typeof rhs;\n\t    if (ltype === 'undefined') {\n\t      if (rtype !== 'undefined') {\n\t        changes(new DiffNew(currentPath, rhs));\n\t      }\n\t    } else if (rtype === 'undefined') {\n\t      changes(new DiffDeleted(currentPath, lhs));\n\t    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n\t      changes(new DiffEdit(currentPath, lhs, rhs));\n\t    } else if (Object.prototype.toString.call(lhs) === '[object Date]' && Object.prototype.toString.call(rhs) === '[object Date]' && ((lhs - rhs) !== 0)) {\n\t      changes(new DiffEdit(currentPath, lhs, rhs));\n\t    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n\t      stack = stack || [];\n\t      if (stack.indexOf(lhs) < 0) {\n\t        stack.push(lhs);\n\t        if (Array.isArray(lhs)) {\n\t          var i, len = lhs.length;\n\t          for (i = 0; i < lhs.length; i++) {\n\t            if (i >= rhs.length) {\n\t              changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n\t            } else {\n\t              deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n\t            }\n\t          }\n\t          while (i < rhs.length) {\n\t            changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n\t          }\n\t        } else {\n\t          var akeys = Object.keys(lhs);\n\t          var pkeys = Object.keys(rhs);\n\t          akeys.forEach(function(k, i) {\n\t            var other = pkeys.indexOf(k);\n\t            if (other >= 0) {\n\t              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n\t              pkeys = arrayRemove(pkeys, other);\n\t            } else {\n\t              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n\t            }\n\t          });\n\t          pkeys.forEach(function(k) {\n\t            deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n\t          });\n\t        }\n\t        stack.length = stack.length - 1;\n\t      }\n\t    } else if (lhs !== rhs) {\n\t      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n\t        changes(new DiffEdit(currentPath, lhs, rhs));\n\t      }\n\t    }\n\t  }\n\t\n\t  function accumulateDiff(lhs, rhs, prefilter, accum) {\n\t    accum = accum || [];\n\t    deepDiff(lhs, rhs,\n\t      function(diff) {\n\t        if (diff) {\n\t          accum.push(diff);\n\t        }\n\t      },\n\t      prefilter);\n\t    return (accum.length) ? accum : undefined;\n\t  }\n\t\n\t  function applyArrayChange(arr, index, change) {\n\t    if (change.path && change.path.length) {\n\t      var it = arr[index],\n\t          i, u = change.path.length - 1;\n\t      for (i = 0; i < u; i++) {\n\t        it = it[change.path[i]];\n\t      }\n\t      switch (change.kind) {\n\t        case 'A':\n\t          applyArrayChange(it[change.path[i]], change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          delete it[change.path[i]];\n\t          break;\n\t        case 'E':\n\t        case 'N':\n\t          it[change.path[i]] = change.rhs;\n\t          break;\n\t      }\n\t    } else {\n\t      switch (change.kind) {\n\t        case 'A':\n\t          applyArrayChange(arr[index], change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          arr = arrayRemove(arr, index);\n\t          break;\n\t        case 'E':\n\t        case 'N':\n\t          arr[index] = change.rhs;\n\t          break;\n\t      }\n\t    }\n\t    return arr;\n\t  }\n\t\n\t  function applyChange(target, source, change) {\n\t    if (target && source && change && change.kind) {\n\t      var it = target,\n\t          i = -1,\n\t          last = change.path ? change.path.length - 1 : 0;\n\t      while (++i < last) {\n\t        if (typeof it[change.path[i]] === 'undefined') {\n\t          it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n\t        }\n\t        it = it[change.path[i]];\n\t      }\n\t      switch (change.kind) {\n\t        case 'A':\n\t          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          delete it[change.path[i]];\n\t          break;\n\t        case 'E':\n\t        case 'N':\n\t          it[change.path[i]] = change.rhs;\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t  function revertArrayChange(arr, index, change) {\n\t    if (change.path && change.path.length) {\n\t      // the structure of the object at the index has changed...\n\t      var it = arr[index],\n\t          i, u = change.path.length - 1;\n\t      for (i = 0; i < u; i++) {\n\t        it = it[change.path[i]];\n\t      }\n\t      switch (change.kind) {\n\t        case 'A':\n\t          revertArrayChange(it[change.path[i]], change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          it[change.path[i]] = change.lhs;\n\t          break;\n\t        case 'E':\n\t          it[change.path[i]] = change.lhs;\n\t          break;\n\t        case 'N':\n\t          delete it[change.path[i]];\n\t          break;\n\t      }\n\t    } else {\n\t      // the array item is different...\n\t      switch (change.kind) {\n\t        case 'A':\n\t          revertArrayChange(arr[index], change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          arr[index] = change.lhs;\n\t          break;\n\t        case 'E':\n\t          arr[index] = change.lhs;\n\t          break;\n\t        case 'N':\n\t          arr = arrayRemove(arr, index);\n\t          break;\n\t      }\n\t    }\n\t    return arr;\n\t  }\n\t\n\t  function revertChange(target, source, change) {\n\t    if (target && source && change && change.kind) {\n\t      var it = target,\n\t          i, u;\n\t      u = change.path.length - 1;\n\t      for (i = 0; i < u; i++) {\n\t        if (typeof it[change.path[i]] === 'undefined') {\n\t          it[change.path[i]] = {};\n\t        }\n\t        it = it[change.path[i]];\n\t      }\n\t      switch (change.kind) {\n\t        case 'A':\n\t          // Array was modified...\n\t          // it will be an array...\n\t          revertArrayChange(it[change.path[i]], change.index, change.item);\n\t          break;\n\t        case 'D':\n\t          // Item was deleted...\n\t          it[change.path[i]] = change.lhs;\n\t          break;\n\t        case 'E':\n\t          // Item was edited...\n\t          it[change.path[i]] = change.lhs;\n\t          break;\n\t        case 'N':\n\t          // Item is new...\n\t          delete it[change.path[i]];\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t  function applyDiff(target, source, filter) {\n\t    if (target && source) {\n\t      var onChange = function(change) {\n\t        if (!filter || filter(target, source, change)) {\n\t          applyChange(target, source, change);\n\t        }\n\t      };\n\t      deepDiff(target, source, onChange);\n\t    }\n\t  }\n\t\n\t  Object.defineProperties(accumulateDiff, {\n\t\n\t    diff: {\n\t      value: accumulateDiff,\n\t      enumerable: true\n\t    },\n\t    observableDiff: {\n\t      value: deepDiff,\n\t      enumerable: true\n\t    },\n\t    applyDiff: {\n\t      value: applyDiff,\n\t      enumerable: true\n\t    },\n\t    applyChange: {\n\t      value: applyChange,\n\t      enumerable: true\n\t    },\n\t    revertChange: {\n\t      value: revertChange,\n\t      enumerable: true\n\t    },\n\t    isConflict: {\n\t      value: function() {\n\t        return 'undefined' !== typeof conflict;\n\t      },\n\t      enumerable: true\n\t    },\n\t    noConflict: {\n\t      value: function() {\n\t        if (conflictResolution) {\n\t          conflictResolution.forEach(function(it) {\n\t            it();\n\t          });\n\t          conflictResolution = null;\n\t        }\n\t        return accumulateDiff;\n\t      },\n\t      enumerable: true\n\t    }\n\t  });\n\t\n\t  return accumulateDiff;\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(10).EventEmitter;\n\tvar Request = __webpack_require__(40);\n\tvar url = __webpack_require__(23)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(11);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough))\n\t    return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function(chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(48);\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\tvar EE = __webpack_require__(10).EventEmitter;\n\t\n\t/*<replacement>*/\n\tif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(8);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar StringDecoder;\n\t\n\t\n\t/*<replacement>*/\n\tvar debug = __webpack_require__(62);\n\tif (debug && debug.debuglog) {\n\t  debug = debug.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction ReadableState(options, stream) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.buffer = [];\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder)\n\t      StringDecoder = __webpack_require__(22).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  if (!(this instanceof Readable))\n\t    return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function(chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (util.isString(chunk) && !state.objectMode) {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = new Buffer(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function(chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) {\n\t    state.reading = false;\n\t    if (!state.ended)\n\t      onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', e);\n\t    } else {\n\t      if (state.decoder && !addToFront && !encoding)\n\t        chunk = state.decoder.write(chunk);\n\t\n\t      if (!addToFront)\n\t        state.reading = false;\n\t\n\t      // if we want the data now, just emit it.\n\t      if (state.flowing && state.length === 0 && !state.sync) {\n\t        stream.emit('data', chunk);\n\t        stream.read(0);\n\t      } else {\n\t        // update the buffer info.\n\t        state.length += state.objectMode ? 1 : chunk.length;\n\t        if (addToFront)\n\t          state.buffer.unshift(chunk);\n\t        else\n\t          state.buffer.push(chunk);\n\t\n\t        if (state.needReadable)\n\t          emitReadable(stream);\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended &&\n\t         (state.needReadable ||\n\t          state.length < state.highWaterMark ||\n\t          state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function(enc) {\n\t  if (!StringDecoder)\n\t    StringDecoder = __webpack_require__(22).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 128MB\n\tvar MAX_HWM = 0x800000;\n\tfunction roundUpToNextPowerOf2(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2\n\t    n--;\n\t    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\tfunction howMuchToRead(n, state) {\n\t  if (state.length === 0 && state.ended)\n\t    return 0;\n\t\n\t  if (state.objectMode)\n\t    return n === 0 ? 0 : 1;\n\t\n\t  if (isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a time\n\t    if (state.flowing && state.buffer.length)\n\t      return state.buffer[0].length;\n\t    else\n\t      return state.length;\n\t  }\n\t\n\t  if (n <= 0)\n\t    return 0;\n\t\n\t  // If we're asking for more than the target buffer level,\n\t  // then raise the water mark.  Bump up to the next highest\n\t  // power of 2, to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n > state.highWaterMark)\n\t    state.highWaterMark = roundUpToNextPowerOf2(n);\n\t\n\t  // don't have that much.  return null, unless we've ended.\n\t  if (n > state.length) {\n\t    if (!state.ended) {\n\t      state.needReadable = true;\n\t      return 0;\n\t    } else\n\t      return state.length;\n\t  }\n\t\n\t  return n;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function(n) {\n\t  debug('read', n);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (!util.isNumber(n) || n > 0)\n\t    state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 &&\n\t      state.needReadable &&\n\t      (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended)\n\t      endReadable(this);\n\t    else\n\t      emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0)\n\t      endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  }\n\t\n\t  if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0)\n\t      state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t  }\n\t\n\t  // If _read pushed data synchronously, then `reading` will be false,\n\t  // and we need to re-evaluate how much data we can return to the user.\n\t  if (doRead && !state.reading)\n\t    n = howMuchToRead(nOrig, state);\n\t\n\t  var ret;\n\t  if (n > 0)\n\t    ret = fromList(n, state);\n\t  else\n\t    ret = null;\n\t\n\t  if (util.isNull(ret)) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  }\n\t\n\t  state.length -= n;\n\t\n\t  // If we have nothing in the buffer, then we want to know\n\t  // as soon as we *do* get something into the buffer.\n\t  if (state.length === 0 && !state.ended)\n\t    state.needReadable = true;\n\t\n\t  // If we tried to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig !== n && state.ended && state.length === 0)\n\t    endReadable(this);\n\t\n\t  if (!util.isNull(ret))\n\t    this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.decoder && !state.ended) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t        emitReadable_(stream);\n\t      });\n\t    else\n\t      emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    process.nextTick(function() {\n\t      maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended &&\n\t         state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;\n\t    else\n\t      len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function(n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function(dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n\t              dest !== process.stdout &&\n\t              dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain &&\n\t        (!dest._writableState || dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\t\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    var ret = dest.write(chunk);\n\t    if (false === ret) {\n\t      debug('false write response, pause',\n\t            src._readableState.awaitDrain);\n\t      src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, 'error') === 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // This is a brutally ugly hack to make sure that our error handler\n\t  // is attached before any userland ones.  NEVER DO THIS.\n\t  if (!dest._events || !dest._events.error)\n\t    dest.on('error', onerror);\n\t  else if (isArray(dest._events.error))\n\t    dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error = [onerror, dest._events.error];\n\t\n\t\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function() {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\t\n\tReadable.prototype.unpipe = function(dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0)\n\t    return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes)\n\t      return this;\n\t\n\t    if (!dest)\n\t      dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++)\n\t      dests[i].emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var i = indexOf(state.pipes, dest);\n\t  if (i === -1)\n\t    return this;\n\t\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1)\n\t    state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function(ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  // If listening to data, and it has not explicitly been paused,\n\t  // then call resume to start the flow of data on the next tick.\n\t  if (ev === 'data' && false !== this._readableState.flowing) {\n\t    this.resume();\n\t  }\n\t\n\t  if (ev === 'readable' && this.readable) {\n\t    var state = this._readableState;\n\t    if (!state.readableListening) {\n\t      state.readableListening = true;\n\t      state.emittedReadable = false;\n\t      state.needReadable = true;\n\t      if (!state.reading) {\n\t        var self = this;\n\t        process.nextTick(function() {\n\t          debug('readable nexttick read 0');\n\t          self.read(0);\n\t        });\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function() {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    if (!state.reading) {\n\t      debug('resume read 0');\n\t      this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    process.nextTick(function() {\n\t      resume_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  state.resumeScheduled = false;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading)\n\t    stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function() {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if (state.flowing) {\n\t    do {\n\t      var chunk = stream.read();\n\t    } while (null !== chunk && state.flowing);\n\t  }\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function(stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function() {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length)\n\t        self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder)\n\t      chunk = state.decoder.write(chunk);\n\t    if (!chunk || !state.objectMode && !chunk.length)\n\t      return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n\t      this[i] = function(method) { return function() {\n\t        return stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function(n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list = state.buffer;\n\t  var length = state.length;\n\t  var stringMode = !!state.decoder;\n\t  var objectMode = !!state.objectMode;\n\t  var ret;\n\t\n\t  // nothing in the list, definitely empty.\n\t  if (list.length === 0)\n\t    return null;\n\t\n\t  if (length === 0)\n\t    ret = null;\n\t  else if (objectMode)\n\t    ret = list.shift();\n\t  else if (!n || n >= length) {\n\t    // read it all, truncate the array.\n\t    if (stringMode)\n\t      ret = list.join('');\n\t    else\n\t      ret = Buffer.concat(list, length);\n\t    list.length = 0;\n\t  } else {\n\t    // read just some of it.\n\t    if (n < list[0].length) {\n\t      // just take a part of the first list item.\n\t      // slice is the same for buffers and strings.\n\t      var buf = list[0];\n\t      ret = buf.slice(0, n);\n\t      list[0] = buf.slice(n);\n\t    } else if (n === list[0].length) {\n\t      // first list is a perfect match\n\t      ret = list.shift();\n\t    } else {\n\t      // complex case.\n\t      // we have enough to cover it, but it spans past the first buffer.\n\t      if (stringMode)\n\t        ret = '';\n\t      else\n\t        ret = new Buffer(n);\n\t\n\t      var c = 0;\n\t      for (var i = 0, l = list.length; i < l && c < n; i++) {\n\t        var buf = list[0];\n\t        var cpy = Math.min(n - c, buf.length);\n\t\n\t        if (stringMode)\n\t          ret += buf.slice(0, cpy);\n\t        else\n\t          buf.copy(ret, c, 0, cpy);\n\t\n\t        if (cpy < buf.length)\n\t          list[0] = buf.slice(cpy);\n\t        else\n\t          list.shift();\n\t\n\t        c += cpy;\n\t      }\n\t    }\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0)\n\t    throw new Error('endReadable called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    process.nextTick(function() {\n\t      // Check that we didn't get one last unshift.\n\t      if (!state.endEmitted && state.length === 0) {\n\t        state.endEmitted = true;\n\t        stream.readable = false;\n\t        stream.emit('end');\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf (xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(54);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(47);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _StaticCanvas2 = __webpack_require__(14);\n\t\n\tvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Canvas = function (_StaticCanvas) {\n\t\t_inherits(Canvas, _StaticCanvas);\n\t\n\t\tfunction Canvas(props, context) {\n\t\t\t_classCallCheck(this, Canvas);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tcanvas: null\n\t\t\t};\n\t\n\t\t\t_this.ref = {};\n\t\t\t_this.containsPoint = function (e, target) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.containsPoint(e, target);\n\t\t\t};\n\t\t\t_this.isTargetTransparent = function (target, x, y) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.isTargetTransparent(target, x, y);\n\t\t\t};\n\t\t\t_this.setCursor = function (value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setCursor(value);\n\t\t\t};\n\t\t\t_this.findTarget = function (e, skipGroup) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.findTarget(e, skipGroup);\n\t\t\t};\n\t\t\t_this.getPointer = function (e, ignoreZoom, upperCanvasEl) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\t\t};\n\t\t\t_this.getSelectionContext = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionContext();\n\t\t\t};\n\t\t\t_this.getSelectionElement = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionElement();\n\t\t\t};\n\t\t\t_this.setActiveObject = function (object, e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveObject(object, e);\n\t\t\t};\n\t\t\t_this.getActiveObject = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t\t};\n\t\t\t_this.discardActiveObject = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveObject(e);\n\t\t\t};\n\t\t\t_this.setActiveGroup = function (group, e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveGroup(group, e);\n\t\t\t};\n\t\t\t_this.discardActiveGroup = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveGroup(e);\n\t\t\t};\n\t\t\t_this.deactivateAll = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAll();\n\t\t\t};\n\t\t\t_this.deactivateAllWithDispatch = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAllWithDispatch(e);\n\t\t\t};\n\t\t\t_this.dispose = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t\t};\n\t\t\t_this.drawControls = function (ctx) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.drawControls(ctx);\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Canvas;\n\t}(_StaticCanvas3.default);\n\t\n\texports.default = Canvas;\n\t\n\t\n\tCanvas.propTypes = Object.assign(_StaticCanvas3.default.propTypes, {\n\t\tuniScaleTransform: _react.PropTypes.bool,\n\t\tcenteredScaling: _react.PropTypes.bool,\n\t\tcenteredRotation: _react.PropTypes.bool,\n\t\tinteractive: _react.PropTypes.bool,\n\t\tselection: _react.PropTypes.bool,\n\t\tselectionColor: _react.PropTypes.string,\n\t\tselectionDashArray: _react.PropTypes.array,\n\t\tselectionBorderColor: _react.PropTypes.string,\n\t\tselectionLineWidth: _react.PropTypes.number,\n\t\thoverCursor: _react.PropTypes.string,\n\t\tmoveCursor: _react.PropTypes.string,\n\t\tdefaultCursor: _react.PropTypes.string,\n\t\tfreeDrawingCursor: _react.PropTypes.string,\n\t\trotationCursor: _react.PropTypes.string,\n\t\tcontainerClass: _react.PropTypes.string,\n\t\tperPixelTargetFind: _react.PropTypes.bool,\n\t\ttargetFindTolerance: _react.PropTypes.number,\n\t\tskipTargetFind: _react.PropTypes.bool,\n\t\tisDrawingMode: _react.PropTypes.bool\n\t});\n\t\n\tCanvas.defaultProps = Object.assign(_StaticCanvas3.default.defaultProps, {\n\t\tuniScaleTransform: false,\n\t\tcenteredScaling: false,\n\t\tcenteredRotation: false,\n\t\tinteractive: true,\n\t\tselection: true,\n\t\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\t\tselectionDashArray: [],\n\t\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\t\tselectionLineWidth: 1,\n\t\thoverCursor: 'move',\n\t\tmoveCursor: 'move',\n\t\tdefaultCursor: 'default',\n\t\tfreeDrawingCursor: 'crosshair',\n\t\trotationCursor: 'crosshair',\n\t\tcontainerClass: 'canvas-container',\n\t\tperPixelTargetFind: false,\n\t\ttargetFindTolerance: 0,\n\t\tskipTargetFind: false,\n\t\tisDrawingMode: false\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\texports.default = _fabricWebpack.fabric.Color;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Text2 = __webpack_require__(15);\n\t\n\tvar _Text3 = _interopRequireDefault(_Text2);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IText = function (_Text) {\n\t\t_inherits(IText, _Text);\n\t\n\t\tfunction IText(props, context) {\n\t\t\t_classCallCheck(this, IText);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (IText.__proto__ || Object.getPrototypeOf(IText)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.isEmptyStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isEmptyStyles();\n\t\t\t};\n\t\t\t_this.setSelectionStart = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionStart(index);\n\t\t\t};\n\t\t\t_this.setSelectionEnd = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionEnd(index);\n\t\t\t};\n\t\t\t_this.getSelectionStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSelectionStyles();\n\t\t\t};\n\t\t\t_this.setSelectionStyles = function (styles) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionStyles(styles);\n\t\t\t};\n\t\t\t_this.renderCursorOrSelection = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.renderCursorOrSelection();\n\t\t\t};\n\t\t\t_this.get2DCursorLocation = function (selectionStart) {\n\t\t\t\treturn _this.state.object && _this.state.object.get2DCursorLocation(selectionStart);\n\t\t\t};\n\t\t\t_this.getCurrentCharStyle = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharStyle(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.getCurrentCharFontSize = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.getCurrentCharColor = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharColor(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.renderCursor = function (boundaries, ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderCursor(boundaries, ctx);\n\t\t\t};\n\t\t\t_this.renderSelection = function (chars, boundaries, ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderSelection(chars, boundaries, ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(IText, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(canvas) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.IText.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.IText(this.props.text, this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'draw', this).call(this, canvas, object);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabricWebpack.fabric.Object)) return;\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'initEvent', this).call(this);\n\t\t\t\tif (this.props.onChanged instanceof Function) {\n\t\t\t\t\tobject.on('changed', this.props.onChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelectionChanged instanceof Function) {\n\t\t\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingEntered instanceof Function) {\n\t\t\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingExited instanceof Function) {\n\t\t\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabricWebpack.fabric.Object)) return;\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'eventChanged', this).call(this, nextProps);\n\t\t\t\tif (this.props.onChanged && !nextProps.onChanged) {\n\t\t\t\t\tobject.off('changed');\n\t\t\t\t} else if (nextProps.onChanged instanceof Function) {\n\t\t\t\t\tobject.on('changed', this.props.onChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n\t\t\t\t\tobject.off('selection:changed');\n\t\t\t\t} else if (nextProps.onSelectionChanged instanceof Function) {\n\t\t\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n\t\t\t\t\tobject.off('editing:entered');\n\t\t\t\t} else if (nextProps.onEditingEntered instanceof Function) {\n\t\t\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingExited && !nextProps.onEditingExited) {\n\t\t\t\t\tobject.off('editing:exited');\n\t\t\t\t} else if (nextProps.onEditingExited instanceof Function) {\n\t\t\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn IText;\n\t}(_Text3.default);\n\t\n\texports.default = IText;\n\t\n\tIText.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.IText.fromObject(object);\n\t};\n\t\n\tIText.propTypes = Object.assign(_Text3.default.propTypes, {\n\t\tselectionStart: _react.PropTypes.number,\n\t\tselectionEnd: _react.PropTypes.number,\n\t\tselectionColor: _react.PropTypes.string,\n\t\tisEditing: _react.PropTypes.bool,\n\t\teditable: _react.PropTypes.bool,\n\t\teditingBorderColor: _react.PropTypes.string,\n\t\tcursorWidth: _react.PropTypes.number,\n\t\tcursorColor: _react.PropTypes.string,\n\t\tcursorDelay: _react.PropTypes.number,\n\t\tcursorDuration: _react.PropTypes.number,\n\t\tstyles: _react.PropTypes.object,\n\t\tcaching: _react.PropTypes.bool\n\t});\n\t\n\tIText.defaultProps = Object.assign(_Text3.default.defaultProps, {\n\t\ttype: 'i-text',\n\t\tselectionStart: 0,\n\t\tselectionEnd: 0,\n\t\tselectionColor: 'rgba(17,119,255,0.3)',\n\t\tisEditing: false,\n\t\teditable: true,\n\t\teditingBorderColor: 'rgba(102,153,255,0.25)',\n\t\tcursorWidth: 2,\n\t\tcursorColor: '#333',\n\t\tcursorDelay: 1000,\n\t\tcursorDuration: 600\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Image = function (_FabricObject) {\n\t\t_inherits(Image, _FabricObject);\n\t\n\t\tfunction Image(props, context) {\n\t\t\t_classCallCheck(this, Image);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.getElement = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getElement();\n\t\t\t};\n\t\t\t_this.setElement = function (element, callback, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setElement(element, callback, options);\n\t\t\t};\n\t\t\t_this.setCrossOrigin = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setCrossOrigin(value);\n\t\t\t};\n\t\t\t_this.getOriginalSize = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginalSize();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.getSrc = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSrc();\n\t\t\t};\n\t\t\t_this.setSrc = function (src, callback, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSrc(src, callback, options);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t\t};\n\t\t\t_this.applyFilters = function (callback, filters, imgElement, forResizing) {\n\t\t\t\treturn _this.state.object && _this.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Image, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (typeof this.props.src === 'string') {\n\t\t\t\t\t_fabricWebpack.fabric.Image.fromURL(this.props.src, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.Image.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else if (this.props.element instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.Image.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else {\n\t\t\t\t\tvar instance = new _fabricWebpack.fabric.Image(this.props.imgElement, this.props);\n\t\t\t\t\t_get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', this).call(this, instance, cb);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Image;\n\t}(_Object2.default);\n\t\n\texports.default = Image;\n\t\n\t\n\tImage.getSvgSrc = _fabricWebpack.fabric.Image.prototype.getSrc;\n\tImage.css = _fabricWebpack.fabric.Image.CSS_CANVAS;\n\tImage.fromObject = function (object, callback) {\n\t\treturn _fabricWebpack.fabric.Image.fromObject(object, callback);\n\t};\n\tImage.fromURL = function (url, callback, imgOptions) {\n\t\treturn _fabricWebpack.fabric.Image.fromURL(url, callback, imgOptions);\n\t};\n\tImage.fromElement = function (element, callback, options) {\n\t\treturn _fabricWebpack.fabric.Image.fromElement(element, callback, options);\n\t};\n\tImage.attribute = _fabricWebpack.fabric.Image.ATTRIBUTE_NAMES;\n\tImage.async = true;\n\tImage.pngCompression = 1;\n\t\n\tImage.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tcrossOrigin: _react.PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\t\talignX: _react.PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\t\talignY: _react.PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\t\tmeetOrSlice: _react.PropTypes.oneOf(['meet', 'slice'])\n\t});\n\t\n\tImage.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'image',\n\t\tcrossOrigin: '',\n\t\talignX: 'none',\n\t\talignY: 'none',\n\t\tmeetOrSlice: 'meet',\n\t\tstrokeWidth: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tint = exports.Sepia2 = exports.Sepia = exports.Resize = exports.RemoveWhite = exports.Pixelate = exports.Noise = exports.Multiply = exports.Mask = exports.Invert = exports.Grayscale = exports.GradientTransparency = exports.Convolute = exports.Brightness = exports.BaseFilter = undefined;\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tvar BaseFilter = exports.BaseFilter = _fabricWebpack.fabric.Image.filters.BaseFilter;\n\tvar Brightness = exports.Brightness = _fabricWebpack.fabric.Image.filters.Brightness;\n\tvar Convolute = exports.Convolute = _fabricWebpack.fabric.Image.filters.Convolute;\n\tvar GradientTransparency = exports.GradientTransparency = _fabricWebpack.fabric.Image.filters.GradientTransparency;\n\tvar Grayscale = exports.Grayscale = _fabricWebpack.fabric.Image.filters.Grayscale;\n\tvar Invert = exports.Invert = _fabricWebpack.fabric.Image.filters.Invert;\n\tvar Mask = exports.Mask = _fabricWebpack.fabric.Image.filters.Mask;\n\tvar Multiply = exports.Multiply = _fabricWebpack.fabric.Image.filters.Multiply;\n\t\n\tvar Noise = exports.Noise = _fabricWebpack.fabric.Image.filters.Noise;\n\tvar Pixelate = exports.Pixelate = _fabricWebpack.fabric.Image.filters.Pixelate;\n\tvar RemoveWhite = exports.RemoveWhite = _fabricWebpack.fabric.Image.filters.RemoveWhite;\n\tvar Resize = exports.Resize = _fabricWebpack.fabric.Image.filters.Resize;\n\tvar Sepia = exports.Sepia = _fabricWebpack.fabric.Image.filters.Sepia;\n\tvar Sepia2 = exports.Sepia2 = _fabricWebpack.fabric.Image.filters.Sepia2;\n\tvar Tint = exports.Tint = _fabricWebpack.fabric.Image.filters.Tint;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction collectionMixin(delgete) {\n\t\tdelgete.add = function () {\n\t\t\tvar _delgete$state$canvas;\n\t\n\t\t\treturn delgete.state.canvas && (_delgete$state$canvas = delgete.state.canvas).add.apply(_delgete$state$canvas, arguments);\n\t\t};\n\t\tdelgete.insertAt = function (object, index, nonSplicing) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.insertAt(object, index, nonSplicing);\n\t\t};\n\t\tdelgete.remove = function () {\n\t\t\tvar _delgete$state$canvas2;\n\t\n\t\t\treturn delgete.state.canvas && (_delgete$state$canvas2 = delgete.state.canvas).remove.apply(_delgete$state$canvas2, arguments);\n\t\t}; // arguments\n\t\tdelgete.forEachObject = function (callback, context) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.forEachObject(callback, context);\n\t\t};\n\t\tdelgete.getObjects = function (type) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.getObjects(type);\n\t\t};\n\t\tdelgete.item = function (index) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.item(index);\n\t\t};\n\t\tdelgete.isEmpty = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.isEmpty();\n\t\t};\n\t\tdelgete.size = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.size();\n\t\t};\n\t\tdelgete.contains = function (object) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.contains(object);\n\t\t};\n\t\tdelgete.complexity = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.complexity(object);\n\t\t};\n\t};\n\t\n\texports.default = collectionMixin;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PI = Math.PI;\n\t\n\tvar Circle = function (_FabricObject) {\n\t\t_inherits(Circle, _FabricObject);\n\t\n\t\tfunction Circle(props, context) {\n\t\t\t_classCallCheck(this, Circle);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.getRadiusX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRadiusX();\n\t\t\t};\n\t\t\t_this.getRadiusY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRadiusY();\n\t\t\t};\n\t\t\t_this.setRadius = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setRadius(value);\n\t\t\t};\n\t\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Circle, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Circle.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Circle.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Circle(this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(Circle.prototype.__proto__ || Object.getPrototypeOf(Circle.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Circle;\n\t}(_Object2.default);\n\t\n\texports.default = Circle;\n\t\n\t\n\tCircle.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Circle.fromElement(element, options);\n\t};\n\tCircle.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Circle.fromObject(object);\n\t};\n\tCircle.attribute = _fabricWebpack.fabric.Circle.ATTRIBUTE_NAMES;\n\t\n\tCircle.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tendAngle: _react.PropTypes.number,\n\t\tradius: _react.PropTypes.number,\n\t\tstartAngle: _react.PropTypes.number\n\t});\n\t\n\tCircle.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\tendAngle: 2 * PI,\n\t\tradius: 0,\n\t\tstartAngle: 0,\n\t\ttype: 'circle'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Ellipse = function (_FabricObject) {\n\t\t_inherits(Ellipse, _FabricObject);\n\t\n\t\tfunction Ellipse(props, context) {\n\t\t\t_classCallCheck(this, Ellipse);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Ellipse.__proto__ || Object.getPrototypeOf(Ellipse)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.getRx = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRx();\n\t\t\t};\n\t\t\t_this.getRy = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRy();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(reviver);\n\t\t\t};\n\t\t\t_this.renderf = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.render();\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Ellipse, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Ellipse.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Ellipse(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Ellipse.prototype.__proto__ || Object.getPrototypeOf(Ellipse.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Ellipse;\n\t}(_Object2.default);\n\t\n\texports.default = Ellipse;\n\t\n\t\n\tEllipse.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Ellipse.fromElement(element, options);\n\t};\n\tEllipse.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Ellipse.fromObject(object);\n\t};\n\tEllipse.attribute = _fabricWebpack.fabric.Ellipse.ATTRIBUTE_NAMES;\n\t\n\tEllipse.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\trx: _react.PropTypes.number,\n\t\try: _react.PropTypes.number\n\t});\n\t\n\tEllipse.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\trx: 0,\n\t\try: 0,\n\t\ttype: 'ellipse'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Line = function (_FabricObject) {\n\t\t_inherits(Line, _FabricObject);\n\t\n\t\tfunction Line(props, context) {\n\t\t\t_classCallCheck(this, Line);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.calcLinePoints = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.calcLinePoints();\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Line, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Line.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Line.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Line(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Line.prototype.__proto__ || Object.getPrototypeOf(Line.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Line;\n\t}(_Object2.default);\n\t\n\texports.default = Line;\n\t\n\t\n\tLine.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Line.fromElement(element, options);\n\t};\n\tLine.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Line.fromObject(object);\n\t};\n\tLine.attribute = _fabricWebpack.fabric.Line.ATTRIBUTE_NAMES;\n\t\n\tLine.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tx1: _react.PropTypes.number,\n\t\ty1: _react.PropTypes.number,\n\t\tx2: _react.PropTypes.number,\n\t\ty2: _react.PropTypes.number\n\t});\n\t\n\tLine.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'line',\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Path2 = __webpack_require__(17);\n\t\n\tvar _Path3 = _interopRequireDefault(_Path2);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PathGroup = function (_Path) {\n\t\t_inherits(PathGroup, _Path);\n\t\n\t\tfunction PathGroup(props, context) {\n\t\t\t_classCallCheck(this, PathGroup);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (PathGroup.__proto__ || Object.getPrototypeOf(PathGroup)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.parseDimensionsFromPaths = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.parseDimensionsFromPaths(options);\n\t\t\t};\n\t\t\t_this.renderf = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderf(ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG();\n\t\t\t};\n\t\t\t_this.isSameColor = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isSameColor();\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\t_this.getObjects = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getObjects();\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(PathGroup, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.PathGroup.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabricWebpack.fabric.PathGroup.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t(function () {\n\t\t\t\t\t\tvar paths = [];\n\t\t\t\t\t\tif (_this2.props.children instanceof Array) {\n\t\t\t\t\t\t\t_this2.props.children.forEach(function (child) {\n\t\t\t\t\t\t\t\treturn paths.push(new _fabricWebpack.fabric.Path(child.props.path, child.props));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpaths.push(new _fabricWebpack.fabric.Path(_this2.props.children.props.path, _this2.props.children.props));\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar object = new _fabricWebpack.fabric.PathGroup(paths, _this2.props);\n\t\t\t\t\t\t_get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, object, cb);\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn PathGroup;\n\t}(_Path3.default);\n\t\n\texports.default = PathGroup;\n\t\n\t\n\tPathGroup.fromElement = function (element, callback, options) {\n\t\treturn _fabricWebpack.fabric.PathGroup.fromElement(element, callback, options);\n\t};\n\tPathGroup.fromObject = function (object, callback) {\n\t\treturn _fabricWebpack.fabric.PathGroup.fromObject(object, callback);\n\t};\n\tPathGroup.attribute = _fabricWebpack.fabric.PathGroup.ATTRIBUTE_NAMES;\n\t\n\tPathGroup.defaultProps = Object.assign(_Path3.default.defaultProps, {\n\t\ttype: 'path-group',\n\t\tfill: ''\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Polygon = function (_FabricObject) {\n\t\t_inherits(Polygon, _FabricObject);\n\t\n\t\tfunction Polygon(props, context) {\n\t\t\t_classCallCheck(this, Polygon);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.commonRender = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.commonRender();\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Polygon, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Polygon.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Polygon(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Polygon.prototype.__proto__ || Object.getPrototypeOf(Polygon.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Polygon;\n\t}(_Object2.default);\n\t\n\texports.default = Polygon;\n\t\n\t\n\tPolygon.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Polygon.fromElement(element, options);\n\t};\n\tPolygon.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Polygon.fromObject(object);\n\t};\n\tPolygon.attribute = _fabricWebpack.fabric.Polygon.ATTRIBUTE_NAMES;\n\t\n\tPolygon.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tpoints: _react.PropTypes.array,\n\t\tminX: _react.PropTypes.number,\n\t\tminY: _react.PropTypes.number\n\t});\n\t\n\tPolygon.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'polygon',\n\t\tpoints: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Polyline = function (_FabricObject) {\n\t\t_inherits(Polyline, _FabricObject);\n\t\n\t\tfunction Polyline(props, context) {\n\t\t\t_classCallCheck(this, Polyline);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Polyline.__proto__ || Object.getPrototypeOf(Polyline)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Polyline, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Polyline.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Polyline(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Polyline.prototype.__proto__ || Object.getPrototypeOf(Polyline.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Polyline;\n\t}(_Object2.default);\n\t\n\texports.default = Polyline;\n\t\n\t\n\tPolyline.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Polyline.fromElement(element, options);\n\t};\n\tPolyline.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Polyline.fromObject(object);\n\t};\n\tPolyline.attribute = _fabricWebpack.fabric.Polyline.ATTRIBUTE_NAMES;\n\t\n\tPolyline.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\tpoints: _react.PropTypes.array,\n\t\tminX: _react.PropTypes.number,\n\t\tminY: _react.PropTypes.number\n\t});\n\t\n\tPolyline.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'polyline',\n\t\tpoints: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Rect = function (_FabricObject) {\n\t\t_inherits(Rect, _FabricObject);\n\t\n\t\tfunction Rect(props, context) {\n\t\t\t_classCallCheck(this, Rect);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Rect.__proto__ || Object.getPrototypeOf(Rect)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Rect, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Rect.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Rect.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Rect(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Rect.prototype.__proto__ || Object.getPrototypeOf(Rect.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Rect;\n\t}(_Object2.default);\n\t\n\texports.default = Rect;\n\t\n\t\n\tRect.fromElement = function (element, options) {\n\t\treturn _fabricWebpack.fabric.Rect.fromElement(element, options);\n\t};\n\tRect.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Rect.fromObject(object);\n\t};\n\tRect.attribute = _fabricWebpack.fabric.Rect.ATTRIBUTE_NAMES;\n\t\n\tRect.propTypes = Object.assign(_Object2.default.propTypes, {\n\t\trx: _react.PropTypes.number,\n\t\try: _react.PropTypes.number\n\t});\n\t\n\tRect.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'rect',\n\t\trx: 0,\n\t\try: 0,\n\t\tstrokeDashArray: null\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// import {PropTypes} from 'react';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabricWebpack = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Triangle = function (_FabricObject) {\n\t\t_inherits(Triangle, _FabricObject);\n\t\n\t\tfunction Triangle(props, context) {\n\t\t\t_classCallCheck(this, Triangle);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Triangle.__proto__ || Object.getPrototypeOf(Triangle)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Triangle, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabricWebpack.fabric.Triangle.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabricWebpack.fabric.Triangle(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Triangle.prototype.__proto__ || Object.getPrototypeOf(Triangle.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Triangle;\n\t}(_Object2.default);\n\t\n\texports.default = Triangle;\n\t\n\t\n\tTriangle.fromObject = function (object) {\n\t\treturn _fabricWebpack.fabric.Triangle.fromObject(object);\n\t};\n\t\n\tTriangle.propTypes = _Object2.default.propTypes;\n\tTriangle.defaultProps = Object.assign(_Object2.default.defaultProps, {\n\t\ttype: 'triangle'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tfunction init () {\n\t  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\t  for (var i = 0, len = code.length; i < len; ++i) {\n\t    lookup[i] = code[i]\n\t    revLookup[code.charCodeAt(i)] = i\n\t  }\n\t\n\t  revLookup['-'.charCodeAt(0)] = 62\n\t  revLookup['_'.charCodeAt(0)] = 63\n\t}\n\t\n\tinit()\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(8);\n\tvar Response = __webpack_require__(41);\n\tvar Base64 = __webpack_require__(24);\n\tvar inherits = __webpack_require__(4);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(8);\n\tvar util = __webpack_require__(57);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(19);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(45);\n\texports.encode = exports.stringify = __webpack_require__(46);\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5)\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(20)\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(21);\n\texports.Stream = __webpack_require__(8);\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(12);\n\texports.Duplex = __webpack_require__(5);\n\texports.Transform = __webpack_require__(11);\n\texports.PassThrough = __webpack_require__(20);\n\tif (!process.browser && ({\"NODE_ENV\":\"production\"}).READABLE_STREAM === 'disable') {\n\t  module.exports = __webpack_require__(8);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(11)\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(12)\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(58)(module), (function() { return this; }())))\n\n/***/ },\n/* 55 */\n4,\n/* 56 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(56);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(55);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(7)))\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 59 */\n13,\n/* 60 */\n13,\n/* 61 */\n13,\n/* 62 */\n13\n/******/ ])))\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** main.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9b7fbdad4bc509c1ef20\n **/","'use strict';\n\nimport _StaticCanvas from './StaticCanvas.jsx';\nimport _Canvas from './Canvas.jsx';\n\nimport _Circle from './shape/Circle.jsx';\nimport _Ellipse from './shape/Ellipse.jsx';\nimport _Line from './shape/Line.jsx';\nimport _Path from './shape/Path.jsx';\nimport _PathGroup from './shape/PathGroup.jsx';\nimport _Polygon from './shape/Polygon.jsx';\nimport _Polyline from './shape/Polyline.jsx';\nimport _Rect from './shape/Rect.jsx';\nimport _Triangle from './shape/Triangle.jsx';\n\nimport _Image from './Image.jsx';\nimport _Text from './Text.jsx';\nimport _Itext from './IText.jsx';\n\nimport _imageFilter from './ImageFilters.js';\nimport _color from './Color.js';\n\n// Main Bundle\nexport default {\n\tStaticCanvas: _StaticCanvas,\n\tCanvas: _Canvas,\n\n\tCircle: _Circle,\n\tEllipse: _Ellipse,\n\tLine: _Line,\n\tPath: _Path,\n\tPathGroup: _PathGroup,\n\tPolygon: _Polygon,\n\tPolyline: _Polyline,\n\tRect: _Rect,\n\tTriangle: _Triangle,\n\n\tImage: _Image,\n\tText: _Text,\n\tItext: _Itext,\n\n\timageFilter: _imageFilter,\n\tcolor: _color,\n};\n\n// Canvas\nexport let StaticCanvas = _StaticCanvas;\nexport let Canvas = _Canvas;\n\n// Shape\nexport let Circle = _Circle;\nexport let Ellipse = _Ellipse;\nexport let Line = _Line;\nexport let Path = _Path;\nexport let PathGroup = _PathGroup;\nexport let Polygon = _Polygon;\nexport let Polyline = _Polyline;\nexport let Rect = _Rect;\nexport let Triangle = _Triangle;\n\nexport let Image = _Image;\nexport let Text = _Text;\nexport let Itext = _Itext;\n\n// utils\nexport let imageFilter = _imageFilter;\nexport let color = _color; \n\n\n\n/** WEBPACK FOOTER **\n ** ./src/react-fabric.js\n **/","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.6.0-rc.1\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      fabric.util.removeFromArray(this.__eventListeners[eventName], handler);\n    }\n    else {\n      this.__eventListeners[eventName].length = 0;\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [ ];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      // avoiding try/catch for perf. reasons\n      listenersForEvent[i].call(this, options || { });\n    }\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#events}\n   * @see {@link http://fabricjs.com/events/|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  /**\n   * Adds objects to collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * Objects should be instances of (or inherit from) fabric.Object\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      this._onObjectAdded(arguments[i]);\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        objects.splice(index, 1);\n        this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Iteration happens in reverse order (for performance reasons).\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects(),\n        i = objects.length;\n    while (i--) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {Any} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = point.x * cos - point.y * sin,\n          ry = point.x * sin + point.y * cos;\n      return new fabric.Point(rx, ry).addEquals(origin);\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          obj = global || fabric.window;\n\n      for (var i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {Any} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && typeof crossOrigin !== 'undefined') {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [ ];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [ ],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        if (klass.async) {\n          klass.fromObject(o, function (obj, error) {\n            if (!error) {\n              enlivenedObjects[index] = obj;\n              reviver && reviver(o, enlivenedObjects[index]);\n            }\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedObjects[index] = klass.fromObject(o);\n          reviver && reviver(o, enlivenedObjects[index]);\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.setSourcePath(path);\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype;\n\n      for (var i = proto.stateProperties.length; i--; ) {\n\n        var propName = proto.stateProperties[i],\n            capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1),\n            setterName = 'set' + capitalizedPropName,\n            getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        a[0] * b[4] + a[2] * b[5] + a[4],\n        a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1);\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n        var temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl/(rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl /(rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( - cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( - sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[ ], [ ], [ ], [ ]],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound = [ ], bounds = [ ],\n    segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n    boundCopy = [[ ], [ ]];\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      boundCopy[0].x = bound[0].x + fx;\n      boundCopy[0].y = bound[0].y + fy;\n      boundCopy[1].x = bound[1].x + fx;\n      boundCopy[1].y = bound[1].y + fy;\n      bounds.push(boundCopy[0]);\n      bounds.push(boundCopy[1]);\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [ ],\n        bounds = [[ ], [ ]],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {Any} searchElement\n     * @param {Number} [fromIndex]\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [ ];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [ ], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [initial] Object to use as the first argument to the first call of the callback\n     * @return {Any}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [ ];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {Any}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {Any}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n\n  /**\n   * Copies all enumerable properties of one object to another\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source) {\n    // JScript DontEnum bug is not taken care of\n    for (var property in source) {\n      destination[property] = source[property];\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object) {\n    return extend({ }, object);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n}());\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} [...] Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var fn = this.constructor.superclass.prototype[methodName];\n    return (arguments.length > 1)\n      ? fn.apply(this, slice.call(arguments, 1))\n      : fn.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [ ];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      element.removeEventListener(eventName, handler, false);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [ ];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [ ];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n    return (typeof event.clientX !== unknown ? event.clientX : 0);\n  },\n\n  pointerY = function(event) {\n    return (typeof event.clientY !== unknown ? event.clientY : 0);\n  };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    while (element && element.parentNode) {\n\n      element = element.parentNode;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {Any} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {Any} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* jshint ignore:start */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* jshint ignore:end */\n\n\n(function() {\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || function() { },\n          abort = options.abort || function() { return false; },\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start);\n        if (abort()) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        onChange(easing(currentTime, startValue, byValue, duration));\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d/2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2/2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5/2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n}());\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      capitalize = fabric.util.string.capitalize,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n        return parseFloat(n);\n      });\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (!attributes[attr] || typeof attributes[colorAttributes[attr]] === 'undefined') {\n        continue;\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var angle = args[0];\n\n      matrix[0] = Math.cos(angle);\n      matrix[1] = Math.sin(angle);\n      matrix[2] = -Math.sin(angle);\n      matrix[3] = Math.cos(angle);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewXMatrix(matrix, args) {\n      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function skewYMatrix(matrix, args) {\n      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [ ];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              return (match !== '' && match != null);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewXMatrix(matrix, args);\n            break;\n          case 'skewY':\n            skewYMatrix(matrix, args);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = normalizeAttr(pair[0].trim().toLowerCase());\n      value = normalizeValue(attr, pair[1].trim());\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = normalizeAttr(prop.toLowerCase());\n      value = normalizeValue(attr, style[prop]);\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, idAttr, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (idAttr === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = doc.getElementsByTagName('use'), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        while (el2.firstChild != null) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.tagName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { };\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]),\n    minY = -parseFloat(viewBoxAttr[2]),\n    viewBoxWidth = parseFloat(viewBoxAttr[3]),\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    // preserveAspectRatio attribute to be implemented\n    scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0) {\n      return parsedDim;\n    }\n\n    matrix = ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.tagName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      while (element.firstChild != null) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished; It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   */\n  fabric.parseSVGDocument = (function() {\n\n    function hasAncestorWithNodeName(element, nodeName) {\n      while (element && (element = element.parentNode)) {\n        if (nodeName.test(element.nodeName) && !element.getAttribute('instantiated_by_use')) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return function(doc, callback, reviver) {\n      if (!doc) {\n        return;\n      }\n\n      parseUseDirectives(doc);\n\n      var startTime = new Date(),\n          svgUid =  fabric.Object.__uid++,\n          options = applyViewboxTransform(doc),\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\n      options.svgUid = svgUid;\n\n      if (descendants.length === 0 && fabric.isLikelyNode) {\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n        var arr = [ ];\n        for (var i = 0, len = descendants.length; i < len; i++) {\n          arr[i] = descendants[i];\n        }\n        descendants = arr;\n      }\n\n      var elements = descendants.filter(function(el) {\n        applyViewboxTransform(el);\n        return reAllowedSVGTagNames.test(el.tagName) &&\n              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n      });\n\n      if (!elements || (elements && !elements.length)) {\n        callback && callback([], {});\n        return;\n      }\n\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n      // Precedence of rules:   style > class > attribute\n      fabric.parseElements(elements, function(instances) {\n        fabric.documentParsingTime = new Date() - startTime;\n        if (callback) {\n          callback(instances, options);\n        }\n      }, clone(options), reviver);\n    };\n  })();\n\n  /**\n   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n   * @namespace\n   */\n  var svgCache = {\n\n    /**\n     * @param {String} name\n     * @param {Function} callback\n     */\n    has: function (name, callback) {\n      callback(false);\n    },\n\n    get: function () {\n      /* NOOP */\n    },\n\n    set: function () {\n      /* NOOP */\n    }\n  };\n\n  /**\n   * @private\n   */\n  function _enlivenCachedObject(cachedObject) {\n\n    var objects = cachedObject.objects,\n        options = cachedObject.options;\n\n    objects = objects.map(function (o) {\n      return fabric[capitalize(o.type)].fromObject(o);\n    });\n\n    return ({ objects: objects, options: options });\n  }\n\n  /**\n   * @private\n   */\n  function _createSVGPattern(markup, canvas, property) {\n    if (canvas[property] && canvas[property].toSVG) {\n      markup.push(\n        '<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n          'width=\"', canvas[property].source.width,\n          '\" height=\"', canvas[property].source.height,\n          '\" patternUnits=\"userSpaceOnUse\">',\n        '<image x=\"0\" y=\"0\" ',\n        'width=\"', canvas[property].source.width,\n        '\" height=\"', canvas[property].source.height,\n        '\" xlink:href=\"', canvas[property].source.src,\n        '\"></image></pattern>'\n      );\n    }\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var linearGradientEls = doc.getElementsByTagName('linearGradient'),\n          radialGradientEls = doc.getElementsByTagName('radialGradient'),\n          el, i, j = 0, id, xlink, elList = [ ],\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      elList.length = linearGradientEls.length + radialGradientEls.length;\n      i = linearGradientEls.length;\n      while (i--) {\n        elList[j++] = linearGradientEls[i];\n      }\n      i = radialGradientEls.length;\n      while (i--) {\n        elList[j++] = radialGradientEls[i];\n      }\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) {\n          attr = normalizeAttr(attr);\n          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      if (ownAttributes.font) {\n        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n      }\n      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver) {\n      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [ ], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i+=2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        var styleContents = styles[i].textContent;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n          ruleObj = { }, declaration = match[2].trim(),\n          propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = normalizeAttr(pair[0]),\n                value = normalizeValue(property, pair[1], pair[0]);\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            allRules[_rule] = fabric.util.object.clone(ruleObj);\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromURL: function(url, callback, reviver) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      svgCache.has(url, function (hasUrl) {\n        if (hasUrl) {\n          svgCache.get(url, function (value) {\n            var enlivedRecord = _enlivenCachedObject(value);\n            callback(enlivedRecord.objects, enlivedRecord.options);\n          });\n        }\n        else {\n          new fabric.util.request(url, {\n            method: 'get',\n            onComplete: onComplete\n          });\n        }\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          return;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n          svgCache.set(url, {\n            objects: fabric.util.array.invoke(results, 'toObject'),\n            options: options\n          });\n          callback(results, options);\n        }, reviver);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromString: function(string, callback, reviver) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n        callback(results, options);\n      }, reviver);\n    },\n\n    /**\n     * Creates markup containing SVG font faces\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function(objects) {\n      var markup = '';\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        if (objects[i].type !== 'text' || !objects[i].path) {\n          continue;\n        }\n\n        markup += [\n          //jscs:disable validateIndentation\n          '@font-face {',\n            'font-family: ', objects[i].fontFamily, '; ',\n            'src: url(\\'', objects[i].path, '\\')',\n          '}'\n          //jscs:enable validateIndentation\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          //jscs:disable validateIndentation\n          '<style type=\"text/css\">',\n            '<![CDATA[',\n              markup,\n            ']]>',\n          '</style>'\n          //jscs:enable validateIndentation\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function(canvas) {\n      var markup = [ ];\n\n      _createSVGPattern(markup, canvas, 'backgroundColor');\n      _createSVGPattern(markup, canvas, 'overlayColor');\n\n      return markup.join('');\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_this, i) {\n      setTimeout(function() {\n        _this.createObject(_this.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName)];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return new Point(this.x + (that.x - this.x)/2, this.y + (that.y - this.y)/2);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.points.push(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length;\n\n    for (var i = 0; i < length; i++) {\n      var b1 = points[i],\n          b2 = points[(i + 1) % length],\n          inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {Number} r1\n   * @param {Number} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) format\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        this.setSource([255, 255, 255, 0]);\n        return;\n      }\n\n      source = Color.sourceFromHex(color);\n\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255, g /= 255, b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color represenation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color represenation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color represenation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1/6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1/2) {\n      return q;\n    }\n    if (t < 2/3) {\n      return p + (q - p) * (2/3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6);\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset'),\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStop) {\n      for (var position in colorStop) {\n        var color = new fabric.Color(colorStop[position]);\n        this.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @return {Object}\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @param {Boolean} normalize Whether coords should be normalized\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = fabric.util.object.clone(this.coords),\n          markup, commonAttributes;\n\n      // colorStops must be sorted ascending\n      this.colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          //jscs:disable validateIndentation\n          '<linearGradient ',\n            commonAttributes,\n            ' x1=\"', coords.x1,\n            '\" y1=\"', coords.y1,\n            '\" x2=\"', coords.x2,\n            '\" y2=\"', coords.y2,\n          '\">\\n'\n          //jscs:enable validateIndentation\n        ];\n      }\n      else if (this.type === 'radial') {\n        markup = [\n          //jscs:disable validateIndentation\n          '<radialGradient ',\n            commonAttributes,\n            ' cx=\"', coords.x2,\n            '\" cy=\"', coords.y2,\n            '\" r=\"', coords.r2,\n            '\" fx=\"', coords.x1,\n            '\" fy=\"', coords.y1,\n          '\">\\n'\n          //jscs:enable validateIndentation\n        ];\n      }\n\n      for (var i = 0; i < this.colorStops.length; i++) {\n        markup.push(\n          //jscs:disable validateIndentation\n          '<stop ',\n            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n            '\" style=\"stop-color:', this.colorStops[i].color,\n            (this.colorStops[i].opacity != null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n          '\"/>\\n'\n          //jscs:enable validateIndentation\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(parseFloat(offset), color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type = (el.nodeName === 'linearGradient' ? 'linear' : 'radial'),\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords = { }, ellipseMatrix;\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry/object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n/**\n * Pattern class\n * @class fabric.Pattern\n * @see {@link http://fabricjs.com/patterns/|Pattern demo}\n * @see {@link http://fabricjs.com/dynamic-patterns/|DynamicPattern demo}\n * @see {@link fabric.Pattern#initialize} for constructor definition\n */\nfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n  /**\n   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n   * @type String\n   * @default\n   */\n  repeat: 'repeat',\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX: 0,\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY: 0,\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @return {fabric.Pattern} thisArg\n   */\n  initialize: function(options) {\n    options || (options = { });\n\n    this.id = fabric.Object.__uid++;\n\n    if (options.source) {\n      if (typeof options.source === 'string') {\n        // function string\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\n        }\n        else {\n          // img src string\n          var _this = this;\n          this.source = fabric.util.createImage();\n          fabric.util.loadImage(options.source, function(img) {\n            _this.source = img;\n          });\n        }\n      }\n      else {\n        // img element\n        this.source = options.source;\n      }\n    }\n    if (options.repeat) {\n      this.repeat = options.repeat;\n    }\n    if (options.offsetX) {\n      this.offsetX = options.offsetX;\n    }\n    if (options.offsetY) {\n      this.offsetY = options.offsetY;\n    }\n  },\n\n  /**\n   * Returns object representation of a pattern\n   * @return {Object} Object representation of a pattern instance\n   */\n  toObject: function() {\n\n    var source;\n\n    // callback\n    if (typeof this.source === 'function') {\n      source = String(this.source);\n    }\n    // <img> element\n    else if (typeof this.source.src === 'string') {\n      source = this.source.src;\n    }\n    // <canvas> element\n    else if (typeof this.source === 'object' && this.source.toDataURL) {\n      source = this.source.toDataURL();\n    }\n\n    return {\n      source: source,\n      repeat: this.repeat,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY\n    };\n  },\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   * @param {fabric.Object} object\n   * @return {String} SVG representation of a pattern\n   */\n  toSVG: function(object) {\n    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n        patternWidth = patternSource.width / object.getWidth(),\n        patternHeight = patternSource.height / object.getHeight(),\n        patternOffsetX = this.offsetX / object.getWidth(),\n        patternOffsetY = this.offsetY / object.getHeight(),\n        patternImgSrc = '';\n    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n      patternHeight = 1;\n    }\n    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n      patternWidth = 1;\n    }\n    if (patternSource.src) {\n      patternImgSrc = patternSource.src;\n    }\n    else if (patternSource.toDataURL) {\n      patternImgSrc = patternSource.toDataURL();\n    }\n\n    return '<pattern id=\"SVGID_' + this.id +\n                  '\" x=\"' + patternOffsetX +\n                  '\" y=\"' + patternOffsetY +\n                  '\" width=\"' + patternWidth +\n                  '\" height=\"' + patternHeight + '\">\\n' +\n             '<image x=\"0\" y=\"0\"' +\n                    ' width=\"' + patternSource.width +\n                    '\" height=\"' + patternSource.height +\n                    '\" xlink:href=\"' + patternImgSrc +\n             '\"></image>\\n' +\n           '</pattern>\\n';\n  },\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive: function(ctx) {\n    var source = typeof this.source === 'function'\n      ? this.source()\n      : this.source;\n\n    // if the image failed to load, return, and allow rest to continue loading\n    if (!source) {\n      return '';\n    }\n\n    // if an image\n    if (typeof source.src !== 'undefined') {\n      if (!source.complete) {\n        return '';\n      }\n      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n        return '';\n      }\n    }\n    return ctx.createPattern(source, this.repeat);\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows/|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [ ],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(this.offsetX) + this.blur) / object.width, 2) * 100 + 20;\n        fBoxY = toFixed((Math.abs(this.offsetY) + this.blur) / object.height, 2) * 100 + 20;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, 3) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + this.offsetX + '\" dy=\"' + this.offsetY + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n      if (this.color !== proto.color) {\n        obj.color = this.color;\n      }\n      if (this.blur !== proto.blur) {\n        obj.blur = this.blur;\n      }\n      if (this.offsetX !== proto.offsetX) {\n        obj.offsetX = this.offsetX;\n      }\n      if (this.offsetY !== proto.offsetY) {\n        obj.offsetY = this.offsetY;\n      }\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas/|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      fabric.StaticCanvas.activeInstance = this;\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: true,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: [1, 0, 0, 1, 0, 0],\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, this.renderAll.bind(this));\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, this.renderAll.bind(this));\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, this.renderAll.bind(this));\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, this.renderAll.bind(this));\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (fabric.devicePixelRatio === 1 || !this.enableRetinaScaling) {\n        return;\n      }\n\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      if (typeof ctx.imageSmoothingEnabled !== 'undefined') {\n        ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n        return;\n      }\n      ctx.webkitImageSmoothingEnabled = this.imageSmoothingEnabled;\n      ctx.mozImageSmoothingEnabled    = this.imageSmoothingEnabled;\n      ctx.msImageSmoothingEnabled     = this.imageSmoothingEnabled;\n      ctx.oImageSmoothingEnabled      = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          this[property] = new fabric.Image(img, options);\n          callback && callback();\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      if (color && color.source) {\n        var _this = this;\n        fabric.util.loadImage(color.source, function(img) {\n          _this[property] = new fabric.Pattern({\n            source: img,\n            repeat: color.repeat,\n            offsetX: color.offsetX,\n            offsetY: color.offsetY\n          });\n          callback && callback();\n        });\n      }\n      else {\n        this[property] = color;\n        callback && callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.document.createElement('canvas');\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      this._initCanvasElement(element);\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element\n     */\n    _initCanvasElement: function(element) {\n      fabric.util.createCanvasElement(element);\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      this._initCanvasElement(this.lowerCanvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this.getActiveGroup();\n      this.viewportTransform = vpt;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      if (activeGroup) {\n        activeGroup.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point;\n      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n      this.viewportTransform[0] = value;\n      this.viewportTransform[3] = value;\n      var after = fabric.util.transformPoint(point, this.viewportTransform);\n      this.viewportTransform[4] += before.x - after.x;\n      this.viewportTransform[5] += before.y - after.y;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      this.viewportTransform[4] = -point.x;\n      this.viewportTransform[5] = -point.y;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * Returns currently selected object, if any\n     * @return {fabric.Object}\n     */\n    getActiveObject: function() {\n      return null;\n    },\n\n    /**\n     * Returns currently selected group of object, if any\n     * @return {fabric.Group}\n     */\n    getActiveGroup: function() {\n      return null;\n    },\n\n    /**\n     * Given a context, renders an object on that context\n     * @param {CanvasRenderingContext2D} ctx Context to render object on\n     * @param {fabric.Object} object Object to render\n     * @private\n     */\n    _draw: function (ctx, object) {\n      if (!object) {\n        return;\n      }\n\n      ctx.save();\n      var v = this.viewportTransform;\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      if (this._shouldRenderObject(object)) {\n        object.render(ctx);\n      }\n      ctx.restore();\n      if (!this.controlsAboveOverlay) {\n        object._renderControls(ctx);\n      }\n    },\n\n    _shouldRenderObject: function(object) {\n      if (!object) {\n        return false;\n      }\n      return (object !== this.getActiveGroup() || !this.preserveObjectStacking);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared');\n      }\n\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      if (this.discardActiveGroup) {\n        this.discardActiveGroup();\n      }\n      if (this.discardActiveObject) {\n        this.discardActiveObject();\n      }\n      this.clearContext(this.contextContainer);\n      if (this.contextTop) {\n        this.clearContext(this.contextTop);\n      }\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @param {Boolean} [allOnTop] Whether we want to force all images to be rendered on the top canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function (allOnTop) {\n      var canvasToDrawOn = this[(allOnTop === true && this.interactive) ? 'contextTop' : 'contextContainer'],\n          activeGroup = this.getActiveGroup();\n\n      if (this.contextTop && this.selection && !this._groupSelector) {\n        this.clearContext(this.contextTop);\n      }\n\n      if (!allOnTop) {\n        this.clearContext(canvasToDrawOn);\n      }\n\n      this.fire('before:render');\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, canvasToDrawOn);\n      }\n\n      this._renderBackground(canvasToDrawOn);\n      this._renderObjects(canvasToDrawOn, activeGroup);\n      this._renderActiveGroup(canvasToDrawOn, activeGroup);\n\n      if (this.clipTo) {\n        canvasToDrawOn.restore();\n      }\n\n      this._renderOverlay(canvasToDrawOn);\n\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(canvasToDrawOn);\n      }\n\n      this.fire('after:render');\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Group} activeGroup\n     */\n    _renderObjects: function(ctx, activeGroup) {\n      var i, length;\n\n      // fast path\n      if (!activeGroup || this.preserveObjectStacking) {\n        for (i = 0, length = this._objects.length; i < length; ++i) {\n          this._draw(ctx, this._objects[i]);\n        }\n      }\n      else {\n        for (i = 0, length = this._objects.length; i < length; ++i) {\n          if (this._objects[i] && !activeGroup.contains(this._objects[i])) {\n            this._draw(ctx, this._objects[i]);\n          }\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Group} activeGroup\n     */\n    _renderActiveGroup: function(ctx, activeGroup) {\n\n      // delegate rendering to group selection (if one exists)\n      if (activeGroup) {\n\n        //Store objects in group preserving order, then replace\n        var sortedObjects = [];\n        this.forEachObject(function (object) {\n          if (activeGroup.contains(object)) {\n            sortedObjects.push(object);\n          }\n        });\n        // forEachObject reverses the object, so we reverse again\n        activeGroup._set('_objects', sortedObjects.reverse());\n        this._draw(ctx, activeGroup);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (this.backgroundColor) {\n        ctx.fillStyle = this.backgroundColor.toLive\n          ? this.backgroundColor.toLive(ctx)\n          : this.backgroundColor;\n\n        ctx.fillRect(\n          this.backgroundColor.offsetX || 0,\n          this.backgroundColor.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      if (this.backgroundImage) {\n        this._draw(ctx, this.backgroundImage);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      if (this.overlayColor) {\n        ctx.fillStyle = this.overlayColor.toLive\n          ? this.overlayColor.toLive(ctx)\n          : this.overlayColor;\n\n        ctx.fillRect(\n          this.overlayColor.offsetX || 0,\n          this.overlayColor.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      if (this.overlayImage) {\n        this._draw(ctx, this.overlayImage);\n      }\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop || this.contextContainer;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection();\n      }\n\n      // delegate rendering to group selection if one exists\n      // used for drawing selection borders/controls\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.render(ctx);\n      }\n\n      this._renderOverlay(ctx);\n\n      this.fire('after:render');\n\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Centers object vertically.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      this._centerObject(object, new fabric.Point(center.left, center.top));\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay());\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function() {\n      var data = {\n        background: (this.backgroundColor && this.backgroundColor.toObject)\n          ? this.backgroundColor.toObject()\n          : this.backgroundColor\n      };\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject()\n          : this.overlayColor;\n      }\n      if (this.backgroundImage) {\n        data.backgroundImage = this.backgroundImage.toObject();\n      }\n      if (this.overlayImage) {\n        data.overlayImage = this.overlayImage.toObject();\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage');\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage');\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (!options.suppressPreamble) {\n        markup.push(\n          '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>',\n            '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n              '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n        );\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width, height, vpt;\n\n      if (options.viewBox) {\n        width = options.viewBox.width;\n        height = options.viewBox.height;\n      }\n      else {\n        width = this.width;\n        height = this.height;\n        if (!this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          width /= vpt[0];\n          height /= vpt[3];\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          (this.backgroundColor && !this.backgroundColor.toLive\n            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n            : null),\n          (options.viewBox\n              ? 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" '\n              : null),\n          'xml:space=\"preserve\">',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>',\n        '<defs>',\n          fabric.createSVGFontFacesMarkup(this.getObjects()),\n          fabric.createSVGRefElementsMarkup(this),\n        '</defs>'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        var instance = objects[i],\n            //If the object is in a selection group, simulate what would happen to that\n            //object when the group is deselected\n            originalProperties = this._realizeGroupTransformOnObject(instance);\n        markup.push(instance.toSVG(reviver));\n        this._unwindGroupTransformOnObject(instance, originalProperties);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG());\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      if (this[property] && this[property].source) {\n        markup.push(\n          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n            'width=\"',\n              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n                ? this[property].source.width\n                : this.width),\n            '\" height=\"',\n              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n                ? this[property].source.height\n                : this.height),\n            '\" fill=\"url(#' + property + 'Pattern)\"',\n          '></rect>'\n        );\n      }\n      else if (this[property] && property === 'overlayColor') {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      var idx = this._objects.indexOf(object);\n\n      // if object is not on the bottom of stack\n      if (idx !== 0) {\n        var newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this.renderAll && this.renderAll();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      var idx = this._objects.indexOf(object);\n\n      // if object is not on top of stack (last item in an array)\n      if (idx !== this._objects.length - 1) {\n        var newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this.renderAll && this.renderAll();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      this.interactive && this.removeListeners();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing/|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color:            'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width:            1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow:           null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap:    'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin:   'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray:  null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur;\n    ctx.shadowOffsetX = this.shadow.offsetX;\n    ctx.shadowOffsetY = this.shadow.offsetY;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [ ];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        p1.x -= 0.5;\n        p2.x += 0.5;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (var i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @param {Number} minX\n     * @param {Number} minY\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [],\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y);\n\n      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n      for (var i = 1, len = points.length; i < len; i++) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        p1 = new fabric.Point(points[i].x, points[i].y);\n        if ((i + 1) < points.length) {\n          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n        }\n      }\n      path.push('L ', p1.x, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n                   fill: null,\n                   stroke: this.color,\n                   strokeWidth: this.width,\n                   strokeLineCap: this.strokeLineCap,\n                   strokeLineJoin: this.strokeLineJoin,\n                   strokeDashArray: this.strokeDashArray,\n                   originX: 'center',\n                   originY: 'center'\n                 });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [ ];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [ ];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [ ];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [ ];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [ ];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [ ];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData);\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction()\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n\n      fabric.Canvas.activeInstance = this;\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [ ],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4/#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _resetCurrentTransform: function(e) {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(e, t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target) {\n      var pointer = this.getPointer(e, true),\n          xy = this._normalizePointer(target, pointer);\n\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var activeGroup = this.getActiveGroup(),\n          x = pointer.x,\n          y = pointer.y,\n          isObjectInGroup = (\n            activeGroup &&\n            object.type !== 'group' &&\n            activeGroup.contains(object)),\n          lt;\n\n      if (isObjectInGroup) {\n        lt = fabric.util.transformPoint(activeGroup.getCenterPoint(), this.viewportTransform, true);\n        x -= lt.x;\n        y -= lt.y;\n        x /= activeGroup.scaleX;\n        y /= activeGroup.scaleY;\n      }\n      return { x: x, y: y };\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners;\n\n      target.hasBorders = target.transparentCorners = false;\n\n      this._draw(this.contextCache, target);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n\n      var isTransparent = fabric.util.isTransparent(\n        this.contextCache, x, y, this.targetFindTolerance);\n\n      this.clearContext(this.contextCache);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e.shiftKey)\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !e.altKey : e.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner) {\n      var action = 'drag';\n      if (corner) {\n        action = (corner === 'ml' || corner === 'mr')\n          ? 'scaleX'\n          : (corner === 'mt' || corner === 'mb')\n            ? 'scaleY'\n            : corner === 'mtr'\n              ? 'rotate'\n              : 'scale';\n      }\n      return action;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     */\n    _translateObject: function (x, y) {\n      var target = this._currentTransform.target;\n\n      if (!target.get('lockMovementX')) {\n        target.set('left', x - this._currentTransform.offsetX);\n      }\n      if (!target.get('lockMovementY')) {\n        target.set('top', y - this._currentTransform.offsetY);\n      }\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY);\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n    },\n\n    /**\n     * @private\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false,\n          dim = target._getNonTransformedDimensions();\n\n      transform.newScaleX = localMouse.x / dim.x;\n      transform.newScaleY = localMouse.y / dim.y;\n\n      if (lockScalingFlip && transform.newScaleX <= 0 && transform.newScaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && transform.newScaleY <= 0 && transform.newScaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || this._scaleObjectEqually(localMouse, target, transform);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || target.set('scaleX', transform.newScaleX);\n        forbidScalingY || lockScalingY || target.set('scaleY', transform.newScaleY);\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || target.set('scaleX', transform.newScaleX);\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || target.set('scaleY', transform.newScaleY);\n      }\n\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\n    },\n\n    /**\n     * @private\n     */\n    _scaleObjectEqually: function(localMouse, target, transform) {\n\n      var dist = localMouse.y + localMouse.x,\n          dim = target._getNonTransformedDimensions(),\n          lastDist = dim.y * transform.original.scaleY +\n                     dim.x * transform.original.scaleX;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > target.padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += target.padding;\n        }\n        else {\n          localMouse.x -= target.padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > target.padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += target.padding;\n        }\n        else {\n          localMouse.y -= target.padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      t.target.angle = angle % 360;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     */\n    _drawSelection: function () {\n      var ctx = this.contextTop,\n          groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      ctx.fillStyle = this.selectionColor;\n\n      ctx.fillRect(\n        groupSelector.ex - ((left > 0) ? 0 : -left),\n        groupSelector.ey - ((top > 0) ? 0 : -top),\n        aleft,\n        atop\n      );\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0: aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0: atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * @private\n     */\n    _isLastRenderedObject: function(e) {\n      return (\n        this.controlsAboveOverlay &&\n        this.lastRenderedObjectWithControlsAboveOverlay &&\n        this.lastRenderedObjectWithControlsAboveOverlay.visible &&\n        this.containsPoint(e, this.lastRenderedObjectWithControlsAboveOverlay) &&\n        this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(this.getPointer(e, true)));\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, group is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      if (this._isLastRenderedObject(e)) {\n        return this.lastRenderedObjectWithControlsAboveOverlay;\n      }\n\n      // first check current group (if one exists)\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup && !skipGroup && this.containsPoint(e, activeGroup)) {\n        return activeGroup;\n      }\n\n      var target = this._searchPossibleTargets(e, skipGroup);\n      this._fireOverOutEvents(target, e);\n\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      if (target) {\n        if (this._hoveredTarget !== target) {\n          if (this._hoveredTarget) {\n            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n            this._hoveredTarget.fire('mouseout');\n          }\n          this.fire('mouse:over', { target: target, e: e });\n          target.fire('mouseover');\n          this._hoveredTarget = target;\n        }\n      }\n      else if (this._hoveredTarget) {\n        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n        this._hoveredTarget.fire('mouseout');\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(e, obj, pointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(e, obj)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(e, skipGroup) {\n\n      // Cache all targets where their bounding box contains point.\n      var target,\n          pointer = this.getPointer(e, true),\n          i = this._objects.length;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if ((!this._objects[i].group || skipGroup) && this._checkTarget(e, this._objects[i], pointer)){\n          this.relatedTarget = this._objects[i];\n          target = this._objects[i];\n          break;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * @param {Event} e\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = fabric.util.transformPoint(\n          pointer,\n          fabric.util.invertTransform(this.viewportTransform)\n        );\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      this.upperCanvasEl = this._createCanvasElement();\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      this._setActiveObject(object);\n      this.renderAll();\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      this._discardActiveObject();\n      this.renderAll();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a speicified one\n     * @param {fabric.Group} group Group to set as a current one\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group\n     * @return {fabric.Canvas} thisArg\n     */\n    discardActiveGroup: function (e) {\n      this._discardActiveGroup();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length;\n      for ( ; i < len; i++) {\n        allObjects[i].set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events\n     * @return {fabric.Canvas} thisArg\n     */\n    deactivateAllWithDispatch: function (e) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this.deactivateAll();\n      if (activeObject) {\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        this._drawGroupControls(ctx, activeGroup);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawGroupControls: function(ctx, activeGroup) {\n      activeGroup._renderControls(ctx);\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n        this.lastRenderedObjectWithControlsAboveOverlay = this._objects[i];\n      }\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n    mt: 0, // n\n    tr: 1, // ne\n    mr: 2, // e\n    br: 3, // se\n    mb: 4, // s\n    bl: 5, // sw\n    ml: 6, // w\n    tl: 7 // nw\n  },\n  addListener = fabric.util.addListener,\n  removeListener = fabric.util.removeListener;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js wheel event\n     * @param {Event} [self] Inner Event object\n     */\n    _onMouseWheel: function(e, self) {\n      this.__onMouseWheel && this.__onMouseWheel(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp);\n      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target;\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (this._currentTransform) {\n        this._finalizeCurrentTransform();\n        target = this._currentTransform.target;\n      }\n      else {\n        target = this.findTarget(e, true);\n      }\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      this._maybeGroupObjects(e);\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      shouldRender && this.renderAll();\n\n      this._handleCursorAndEvent(e, target);\n    },\n\n    _handleCursorAndEvent: function(e, target) {\n      this._setCursorFromEvent(e, target);\n\n      // TODO: why are we doing this?\n      var _this = this;\n      setTimeout(function () {\n        _this._setCursorFromEvent(e, target);\n      }, 50);\n\n      this.fire('mouse:up', { target: target, e: e });\n      target && target.fire('mouseup', { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _finalizeCurrentTransform: function() {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      // only fire :modified event if target coordinates were changed during mousedown-mouseup\n      if (this.stateful && target.hasStateChanged()) {\n        this.fire('object:modified', { target: target });\n        target.fire('modified');\n      }\n\n      this._restoreOriginXY(target);\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var ivt = fabric.util.invertTransform(this.viewportTransform),\n          pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this.fire('mouse:down', { e: e });\n\n      var target = this.findTarget(e);\n      if (typeof target !== 'undefined') {\n        target.fire('mousedown', { e: e, target: target });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var ivt = fabric.util.invertTransform(this.viewportTransform),\n            pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this.fire('mouse:move', { e: e });\n\n      var target = this.findTarget(e);\n      if (typeof target !== 'undefined') {\n        target.fire('mousemove', { e: e, target: target });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this.fire('mouse:up', { e: e });\n\n      var target = this.findTarget(e);\n      if (typeof target !== 'undefined') {\n        target.fire('mouseup', { e: e, target: target });\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is clic ked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      // accept only left clicks\n      var isLeftClick  = 'which' in e ? e.which === 1 : e.button === 1;\n      if (!isLeftClick && !fabric.isTouchSupported) {\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var target = this.findTarget(e),\n          pointer = this.getPointer(e, true);\n\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this._clearSelection(e, target, pointer);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (target && target.selectable && !shouldGroup) {\n        this._beforeTransform(e, target);\n        this._setupCurrentTransform(e, target);\n      }\n      // we must renderAll so that active image is placed on the top canvas\n      shouldRender && this.renderAll();\n\n      this.fire('mouse:down', { target: target, e: e });\n      target && target.fire('mousedown', { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n      if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n        this.deactivateAll();\n        this.setActiveObject(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _clearSelection: function(e, target, pointer) {\n      this.deactivateAllWithDispatch(e);\n\n      if (target && target.selectable) {\n        this.setActiveObject(target, e);\n      }\n      else if (this.selection) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n\n        target = this.findTarget(e);\n\n        if (!target || target && !target.selectable) {\n          this.setCursor(this.defaultCursor);\n        }\n        else {\n          this._setCursorFromEvent(e, target);\n        }\n      }\n      else {\n        this._transformObject(e);\n      }\n\n      this.fire('mouse:move', { target: target, e: e });\n      target && target.fire('mousemove', { e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false,\n      transform.target.isMoving = true;\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action;\n\n      if (action === 'rotate') {\n        this._rotateObject(x, y);\n        this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        this._onScale(e, transform, x, y);\n        this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        this._scaleObject(x, y, 'x');\n        this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        this._scaleObject(x, y, 'y');\n        this._fire('scaling', target, e);\n      }\n      else {\n        this._translateObject(x, y);\n        this._fire('moving', target, e);\n        this.setCursor(this.moveCursor);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(e, transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform(e);\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _onScale: function(e, transform, x, y) {\n      // rotate object only if shift key is not pressed\n      // and if it is not a group we are transforming\n      if ((e.shiftKey || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform(e, transform.target);\n        }\n\n        transform.currentAction = 'scaleEqually';\n        this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target || !target.selectable) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      else {\n        var activeGroup = this.getActiveGroup(),\n            // only show proper corner when group selection is not active\n            corner = target._findTargetCorner\n                      && (!activeGroup || !activeGroup.contains(target))\n                      && target._findTargetCorner(this.getPointer(e, true));\n\n        if (!corner) {\n          this.setCursor(target.hoverCursor || this.hoverCursor);\n        }\n        else {\n          this._setCornerCursor(corner, target);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e.shiftKey &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n\n      if (target === this.getActiveGroup()) {\n\n        // if it's a group, find target again, this time skipping group\n        target = this.findTarget(e, true);\n\n        // if even object is not found, bail out\n        if (!target || target.isType('group')) {\n          return;\n        }\n      }\n      if (this.getActiveGroup()) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        this._resetObjectTransform(activeGroup);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0));\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n        this._resetObjectTransform(activeGroup);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [ this._activeObject, target ]\n            : [ target, this._activeObject ];\n\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [ ],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   */\n  toDataURL: function (options) {\n    options || (options = { });\n\n    var format = options.format || 'png',\n        quality = options.quality || 1,\n        multiplier = options.multiplier || 1,\n        cropping = {\n          left: options.left,\n          top: options.top,\n          width: options.width,\n          height: options.height\n        };\n\n    if (multiplier !== 1) {\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    }\n    else {\n      return this.__toDataURL(format, quality, cropping);\n    }\n  },\n\n  /**\n   * @private\n   */\n  __toDataURL: function(format, quality, cropping) {\n\n    this.renderAll(true);\n\n    var canvasEl = this.upperCanvasEl || this.lowerCanvasEl,\n        croppedCanvasEl = this.__getCroppedCanvas(canvasEl, cropping);\n\n    // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n    if (format === 'jpg') {\n      format = 'jpeg';\n    }\n\n    var data = (fabric.StaticCanvas.supports('toDataURLWithQuality'))\n              ? (croppedCanvasEl || canvasEl).toDataURL('image/' + format, quality)\n              : (croppedCanvasEl || canvasEl).toDataURL('image/' + format);\n\n    this.contextTop && this.clearContext(this.contextTop);\n    this.renderAll();\n\n    if (croppedCanvasEl) {\n      croppedCanvasEl = null;\n    }\n\n    return data;\n  },\n\n  /**\n   * @private\n   */\n  __getCroppedCanvas: function(canvasEl, cropping) {\n\n    var croppedCanvasEl,\n        croppedCtx,\n        shouldCrop = 'left' in cropping ||\n                     'top' in cropping ||\n                     'width' in cropping ||\n                     'height' in cropping;\n\n    if (shouldCrop) {\n\n      croppedCanvasEl = fabric.util.createCanvasElement();\n      croppedCtx = croppedCanvasEl.getContext('2d');\n\n      croppedCanvasEl.width = cropping.width || this.width;\n      croppedCanvasEl.height = cropping.height || this.height;\n\n      croppedCtx.drawImage(canvasEl, -cropping.left || 0, -cropping.top || 0);\n    }\n\n    return croppedCanvasEl;\n  },\n\n  /**\n   * @private\n   */\n  __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n    var origWidth = this.getWidth(),\n        origHeight = this.getHeight(),\n        scaledWidth = origWidth * multiplier,\n        scaledHeight = origHeight * multiplier,\n        activeObject = this.getActiveObject(),\n        activeGroup = this.getActiveGroup(),\n\n        ctx = this.contextTop || this.contextContainer;\n\n    if (multiplier > 1) {\n      this.setWidth(scaledWidth).setHeight(scaledHeight);\n    }\n    ctx.scale(multiplier, multiplier);\n\n    if (cropping.left) {\n      cropping.left *= multiplier;\n    }\n    if (cropping.top) {\n      cropping.top *= multiplier;\n    }\n    if (cropping.width) {\n      cropping.width *= multiplier;\n    }\n    else if (multiplier < 1) {\n      cropping.width = scaledWidth;\n    }\n    if (cropping.height) {\n      cropping.height *= multiplier;\n    }\n    else if (multiplier < 1) {\n      cropping.height = scaledHeight;\n    }\n\n    if (activeGroup) {\n      // not removing group due to complications with restoring it with correct state afterwords\n      this._tempRemoveBordersControlsFromGroup(activeGroup);\n    }\n    else if (activeObject && this.deactivateAll) {\n      this.deactivateAll();\n    }\n\n    this.renderAll(true);\n\n    var data = this.__toDataURL(format, quality, cropping);\n\n    // restoring width, height for `renderAll` to draw\n    // background properly (while context is scaled)\n    this.width = origWidth;\n    this.height = origHeight;\n\n    ctx.scale(1 / multiplier,  1 / multiplier);\n    this.setWidth(origWidth).setHeight(origHeight);\n\n    if (activeGroup) {\n      this._restoreBordersControlsOnGroup(activeGroup);\n    }\n    else if (activeObject && this.setActiveObject) {\n      this.setActiveObject(activeObject);\n    }\n\n    this.contextTop && this.clearContext(this.contextTop);\n    this.renderAll();\n\n    return data;\n  },\n\n  /**\n   * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n   * @deprecated since 1.0.13\n   * @param {String} format (png|jpeg)\n   * @param {Number} multiplier\n   * @param {Number} quality (0..1)\n   * @return {String}\n   */\n  toDataURLWithMultiplier: function (format, multiplier, quality) {\n    return this.toDataURL({\n      format: format,\n      multiplier: multiplier,\n      quality: quality\n    });\n  },\n\n  /**\n   * @private\n   */\n  _tempRemoveBordersControlsFromGroup: function(group) {\n    group.origHasControls = group.hasControls;\n    group.origBorderColor = group.borderColor;\n\n    group.hasControls = true;\n    group.borderColor = 'rgba(0,0,0,0)';\n\n    group.forEachObject(function(o) {\n      o.origBorderColor = o.borderColor;\n      o.borderColor = 'rgba(0,0,0,0)';\n    });\n  },\n\n  /**\n   * @private\n   */\n  _restoreBordersControlsOnGroup: function(group) {\n    group.hideControls = group.origHideControls;\n    group.borderColor = group.origBorderColor;\n\n    group.forEachObject(function(o) {\n      o.borderColor = o.origBorderColor;\n      delete o.origBorderColor;\n    });\n  }\n});\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : json;\n\n    this.clear();\n\n    var _this = this;\n    this._enlivenObjects(serialized.objects, function () {\n      _this._setBgOverlay(serialized, callback);\n    }, reviver);\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var _this = this,\n        loaded = {\n          backgroundColor: false,\n          overlayColor: false,\n          backgroundImage: false,\n          overlayImage: false\n        };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        _this.renderAll();\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\n    cbIfLoaded();\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.Image.fromObject(value, function(img) {\n        _this[property] = img;\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    var _this = this;\n\n    if (!objects || objects.length === 0) {\n      callback && callback();\n      return;\n    }\n\n    var renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      enlivenedObjects.forEach(function(obj, index) {\n        _this.insertAt(obj, index, true);\n      });\n\n      _this.renderOnAddRemove = renderOnAddRemove;\n      callback && callback();\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   *\n   * @fires mousedown\n   * @fires mouseup\n   */\n  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object center. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object center. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               12,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object. Only works with text objects at the moment.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n\n    lockScalingFlip:          false,\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:  (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'alignX alignY meetOrSlice'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initGradient: function(options) {\n      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n        this.set('fill', new fabric.Gradient(options.fill));\n      }\n      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n        this.set('stroke', new fabric.Gradient(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initPattern: function(options) {\n      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n        this.set('fill', new fabric.Pattern(options.fill));\n      }\n      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n        this.set('stroke', new fabric.Pattern(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initClipping: function(options) {\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\n        return;\n      }\n\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n      if (typeof functionBody !== 'undefined') {\n        this.clipTo = new Function('ctx', functionBody);\n      }\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      for (var prop in options) {\n        this.set(prop, options[prop]);\n      }\n      this._initGradient(options);\n      this._initPattern(options);\n      this._initClipping(options);\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && this.canvas.preserveObjectStacking && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix\n          };\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Basic getter\n     * @param {String} property Property name\n     * @return {Any} value of a property\n     */\n    get: function(property) {\n      return this[property];\n    },\n\n    /**\n     * @private\n     */\n    _setObject: function(obj) {\n      for (var prop in obj) {\n        this._set(prop, obj[prop]);\n      }\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      if (typeof key === 'object') {\n        this._setObject(key);\n      }\n      else {\n        if (typeof value === 'function' && key !== 'clipTo') {\n          this._set(key, value(this.get(key)));\n        }\n        else {\n          this._set(key, value);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'width' || key === 'height') {\n        this.minScaleLimit = toFixed(Math.min(0.1, 1/Math.max(this.width, this.height)), 2);\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n\n      this[key] = value;\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Toggles specified property from `true` to `false` or from `false` to `true`\n     * @param {String} property Property to toggle\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    toggle: function(property) {\n      var value = this.get(property);\n      if (typeof value === 'boolean') {\n        this.set(property, !value);\n      }\n      return this;\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value // TODO\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if ((this.width === 0 && this.height === 0) || !this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._render(ctx, noTransform);\n      this.clipTo && ctx.restore();\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group) {\n        this.group._setOpacity(ctx);\n      }\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      if (!this.active || noTransform) {\n        return;\n      }\n      var vpt = this.getViewportTransform();\n      ctx.save();\n      var center;\n      if (this.group) {\n        center = fabric.util.transformPoint(this.group.getCenterPoint(), vpt);\n        ctx.translate(center.x, center.y);\n        ctx.rotate(degreesToRadians(this.group.angle));\n      }\n      center = fabric.util.transformPoint(this.getCenterPoint(), vpt, null != this.group);\n      if (this.group) {\n        center.x *= this.group.scaleX;\n        center.y *= this.group.scaleY;\n      }\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      this.drawBorders(ctx);\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1;\n\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (this.scaleX + this.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * this.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * this.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      if (this.fill.gradientTransform) {\n        var g = this.fill.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.fill.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.fill.offsetX || 0,\n          -this.height / 2 + this.fill.offsetY || 0);\n      }\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeDashArray) {\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n        if (1 & this.strokeDashArray.length) {\n          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n        }\n        if (supportsLineDash) {\n          ctx.setLineDash(this.strokeDashArray);\n          this._stroke && this._stroke(ctx);\n        }\n        else {\n          this._renderDashedStroke && this._renderDashedStroke(ctx);\n        }\n        ctx.stroke();\n      }\n      else {\n        if (this.stroke.gradientTransform) {\n          var g = this.stroke.gradientTransform;\n          ctx.transform.apply(ctx, g);\n        }\n        this._stroke ? this._stroke(ctx) : ctx.stroke();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback) {\n      var dataUrl = this.toDataURL();\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el);\n\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(el.width / 2, el.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 0;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      for (var position in options.colorStops) {\n        var color = new fabric.Color(options.colorStops[position]);\n        gradient.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      this.canvas.remove(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX = originXOffset[toOriginX] - originXOffset[fromOriginX],\n          offsetY = originYOffset[toOriginY] - originYOffset[fromOriginY],\n          dim;\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (originX && originY) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      this.left += xFull * (originXOffset[to] - originXOffset[this.originX]);\n      this.top += yFull * (originXOffset[to] - originXOffset[this.originX]);\n\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Object containing coordinates of object's controls\n     * @type Object\n     * @default\n     */\n    oCoords: null,\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR) {\n      var oCoords = this.oCoords,\n          tl = new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n          tr = new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n          bl = new fabric.Point(oCoords.bl.x, oCoords.bl.y),\n          br = new fabric.Point(oCoords.br.x, oCoords.br.y),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            [tl, tr, br, bl],\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other) {\n      // extracts coords\n      function getCoords(oCoords) {\n        return {\n          tl: new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n          tr: new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n          bl: new fabric.Point(oCoords.bl.x, oCoords.bl.y),\n          br: new fabric.Point(oCoords.br.x, oCoords.br.y)\n        };\n      }\n      var thisCoords = getCoords(this.oCoords),\n          otherCoords = getCoords(other.oCoords),\n          intersection = fabric.Intersection.intersectPolygonPolygon(\n            [thisCoords.tl, thisCoords.tr, thisCoords.br, thisCoords.bl],\n            [otherCoords.tl, otherCoords.tr, otherCoords.br, otherCoords.bl]\n          );\n\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other) {\n      var boundingRect = other.getBoundingRect(),\n          point1 = new fabric.Point(boundingRect.left, boundingRect.top),\n          point2 = new fabric.Point(boundingRect.left + boundingRect.width, boundingRect.top + boundingRect.height);\n\n      return this.isContainedWithinRect(point1, point2);\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR) {\n      var boundingRect = this.getBoundingRect();\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point) {\n      var lines = this._getImageLines(this.oCoords),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} oCoords Coordinates of the object being evaluated\n     */\n    _findCrossPoints: function(point, oCoords) {\n      var b1, b2, a1, a2, xi, yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in oCoords) {\n        iLine = oCoords[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = - (a1 - a2) / (b1 - b2);\n          yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function() {\n      this.oCoords || this.setCoords();\n\n      var xCoords = [this.oCoords.tl.x, this.oCoords.tr.x, this.oCoords.br.x, this.oCoords.bl.x],\n          minX = fabric.util.array.min(xCoords),\n          maxX = fabric.util.array.max(xCoords),\n          width = Math.abs(minX - maxX),\n\n          yCoords = [this.oCoords.tl.y, this.oCoords.tr.y, this.oCoords.br.y, this.oCoords.bl.y],\n          minY = fabric.util.array.min(yCoords),\n          maxY = fabric.util.array.max(yCoords),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns width of an object\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this.width * this.scaleX;\n    },\n\n    /**\n     * Returns height of an object\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this.height * this.scaleY;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      this.setCoords();\n      return this;\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRectWidth() / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRectHeight() / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function() {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = this._calculateCurrentDimensions(true),\n          currentWidth = dim.x, currentHeight = dim.y;\n\n      // If width is negative, make postive. Fixes path selection issue\n      if (currentWidth < 0) {\n        currentWidth = Math.abs(currentWidth);\n      }\n\n      var sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\n          // offset added for rotate and scale actions\n          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n          ml  = new fabric.Point((tl.x + bl.x)/2, (tl.y + bl.y)/2),\n          mt  = new fabric.Point((tr.x + tl.x)/2, (tr.y + tl.y)/2),\n          mr  = new fabric.Point((br.x + tr.x)/2, (br.y + tr.y)/2),\n          mb  = new fabric.Point((br.x + bl.x)/2, (br.y + bl.y)/2),\n          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      this.oCoords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n        // middle\n        ml: ml, mt: mt, mr: mr, mb: mb,\n        // rotating point\n        mtr: mtr\n      };\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      this._setCornerCoords && this._setCornerCoords();\n\n      return this;\n    },\n\n    _calcDimensionsTransformMatrix: function() {\n      // introduce skew matrix here later\n      return [this.scaleX, 0, 0, this.scaleY, 0, 0];\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Returns styles-string for svg-export\n   * @return {String}\n   */\n  getSvgStyles: function() {\n\n    var fill = this.fill\n          ? (this.fill.toLive ? 'url(#SVGID_' + this.fill.id + ')' : this.fill)\n          : 'none',\n        fillRule = this.fillRule,\n        stroke = this.stroke\n          ? (this.stroke.toLive ? 'url(#SVGID_' + this.stroke.id + ')' : this.stroke)\n          : 'none',\n\n        strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n        strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n        strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n        strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n        strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n        opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\n        visibility = this.visible ? '' : ' visibility: hidden;',\n        filter = this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\n    return [\n      'stroke: ', stroke, '; ',\n      'stroke-width: ', strokeWidth, '; ',\n      'stroke-dasharray: ', strokeDashArray, '; ',\n      'stroke-linecap: ', strokeLineCap, '; ',\n      'stroke-linejoin: ', strokeLineJoin, '; ',\n      'stroke-miterlimit: ', strokeMiterLimit, '; ',\n      'fill: ', fill, '; ',\n      'fill-rule: ', fillRule, '; ',\n      'opacity: ', opacity, ';',\n      filter,\n      visibility\n    ].join('');\n  },\n\n  /**\n   * Returns transform-string for svg-export\n   * @return {String}\n   */\n  getSvgTransform: function() {\n    if (this.group && this.group.type === 'path-group') {\n      return '';\n    }\n    var toFixed = fabric.util.toFixed,\n        angle = this.getAngle(),\n        vpt = !this.canvas || this.canvas.svgViewportTransformation ? this.getViewportTransform() : [1, 0, 0, 1, 0, 0],\n        center = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n\n        NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n        translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                          toFixed(center.x, NUM_FRACTION_DIGITS) +\n                          ' ' +\n                          toFixed(center.y, NUM_FRACTION_DIGITS) +\n                        ')',\n\n        anglePart = angle !== 0\n          ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n          : '',\n\n        scalePart = (this.scaleX === 1 && this.scaleY === 1 && vpt[0] === 1 && vpt[3] === 1)\n          ? '' :\n          (' scale(' +\n            toFixed(this.scaleX * vpt[0], NUM_FRACTION_DIGITS) +\n            ' ' +\n            toFixed(this.scaleY * vpt[3], NUM_FRACTION_DIGITS) +\n          ')'),\n\n        addTranslateX = this.type === 'path-group' ? this.width * vpt[0] : 0,\n\n        flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n        addTranslateY = this.type === 'path-group' ? this.height * vpt[3] : 0,\n\n        flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n    return [\n      translatePart, anglePart, scalePart, flipXPart, flipYPart\n    ].join('');\n  },\n\n  /**\n   * Returns transform-string for svg-export from the transform matrix of single elements\n   * @return {String}\n   */\n  getSvgTransformMatrix: function() {\n    return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n  },\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup: function() {\n    var markup = [ ];\n\n    if (this.fill && this.fill.toLive) {\n      markup.push(this.fill.toSVG(this, false));\n    }\n    if (this.stroke && this.stroke.toLive) {\n      markup.push(this.stroke.toSVG(this, false));\n    }\n    if (this.shadow) {\n      markup.push(this.shadow.toSVG(this));\n    }\n    return markup;\n  }\n});\n/* _TO_SVG_END_ */\n\n\n/*\n  Depends on `stateProperties`\n*/\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Returns true if object state (one of its state properties) was changed\n   * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n   */\n  hasStateChanged: function() {\n    return this.stateProperties.some(function(prop) {\n      return this.get(prop) !== this.originalState[prop];\n    }, this);\n  },\n\n  /**\n   * Saves state of an object\n   * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n   * @return {fabric.Object} thisArg\n   */\n  saveState: function(options) {\n    this.stateProperties.forEach(function(prop) {\n      this.originalState[prop] = this.get(prop);\n    }, this);\n\n    if (options && options.stateProperties) {\n      options.stateProperties.forEach(function(prop) {\n        this.originalState[prop] = this.get(prop);\n      }, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Setups state of an object\n   * @return {fabric.Object} thisArg\n   */\n  setupState: function() {\n    this.originalState = { };\n    this.saveState();\n\n    return this;\n  }\n});\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n  //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width,\n          h = this.height,\n          capped = this.strokeLineCap === 'round' || this.strokeLineCap === 'square',\n          vLine = this.type === 'line' && this.width === 0,\n          hLine = this.type === 'line' && this.height === 0,\n          sLine = vLine || hLine,\n          strokeW = (capped && hLine) || !sLine,\n          strokeH = (capped && vLine) || !sLine;\n\n      if (vLine) {\n        w = strokeWidth;\n      }\n      else if (hLine) {\n        h = strokeWidth;\n      }\n      if (strokeW) {\n        w += (w < 0 ? -strokeWidth : strokeWidth);\n      }\n      if (strokeH) {\n        h += (h < 0 ? -strokeWidth : strokeWidth);\n      }\n      return { x: w, y: h };\n    },\n\n    /*\n     * @private\n     */\n    _getTransformedDimensions: function(dimensions) {\n      if (!dimensions) {\n        dimensions = this._getNonTransformedDimensions();\n      }\n      var transformMatrix = this._calcDimensionsTransformMatrix();\n      return fabric.util.transformPoint(dimensions, transformMatrix, true);\n    },\n\n    /*\n     * private\n     */\n    _calculateCurrentDimensions: function(shouldTransform)  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          w = dim.x, h = dim.y;\n\n      w += 2 * this.padding;\n      h += 2 * this.padding;\n\n      if (shouldTransform) {\n        return fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n      }\n      return { x: w, y: h };\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      ctx.save();\n\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      ctx.strokeStyle = this.borderColor;\n      ctx.lineWidth = 1 / this.borderScaleFactor;\n\n      var wh = this._calculateCurrentDimensions(true),\n          width = wh.x,\n          height = wh.y;\n      if (this.group) {\n        width = width * this.group.scaleX;\n        height = height * this.group.scaleY;\n      }\n\n      ctx.strokeRect(\n        ~~(-(width / 2)) - 0.5, // offset needed to make lines look sharper\n        ~~(-(height / 2)) - 0.5,\n        ~~(width) + 1, // double offset needed to make lines look sharper\n        ~~(height) + 1\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(true),\n          width = wh.x,\n          height = wh.y,\n          left = -(width / 2),\n          top = -(height / 2),\n          scaleOffset = this.cornerSize / 2,\n          methodName = this.transparentCorners ? 'strokeRect' : 'fillRect';\n\n      ctx.save();\n\n      ctx.lineWidth = 1;\n\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left - scaleOffset,\n        top - scaleOffset);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width - scaleOffset,\n        top - scaleOffset);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left - scaleOffset,\n        top + height - scaleOffset);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width - scaleOffset,\n        top + height - scaleOffset);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width/2 - scaleOffset,\n          top - scaleOffset);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width/2 - scaleOffset,\n          top + height - scaleOffset);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width - scaleOffset,\n          top + height/2 - scaleOffset);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left - scaleOffset,\n          top + height/2 - scaleOffset);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width/2 - scaleOffset,\n          top - this.rotatingPointOffset - scaleOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize;\n      isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n      ctx[methodName](left, top, size, size);\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [ ], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange();\n      },\n      onComplete: function() {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete();\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint();\n        ctx.translate(\n          cp.x - this.strokeWidth / 2,\n          cp.y - this.strokeWidth / 2\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ',\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object) {\n    var points = [object.x1, object.y1, object.x2, object.y2];\n    return new fabric.Line(points, object);\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n      case nearest:\n        return Math.min(this.get(axis1), this.get(axis2));\n      case center:\n        return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n      case farthest:\n        return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this.set('radius', options.radius || 0);\n\n      this.startAngle = options.startAngle || this.startAngle;\n      this.endAngle = options.endAngle || this.endAngle;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        radius: this.get('radius'),\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n      angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ',\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', + largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object) {\n    return new fabric.Circle(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('width', options.width || 100)\n          .set('height', options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ',\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Returns fabric.Triangle instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @return {Object} instance of Canvas.Triangle\n   */\n  fabric.Triangle.fromObject = function(object) {\n    return new fabric.Triangle(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('rx', options.rx || 0);\n      this.set('ry', options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx'),\n        ry: this.get('ry')\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ',\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry/this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx/this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object) {\n    return new fabric.Ellipse(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry', 'x', 'y');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Used to specify dash pattern for stroke on this object\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this._initRxRy();\n\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(0, 0, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          k = 1 - 0.5522847498 /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */;\n\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx') || 0,\n        ry: this.get('ry') || 0\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object) {\n    return new fabric.Rect(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @param {Boolean} [skipOffset] Whether points offsetting should be skipped\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      return fabric.Polygon.prototype.initialize.call(this, points, options);\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n      return fabric.Polygon.prototype._calcDimensions.call(this);\n    },\n\n    /**\n     * @private\n     */\n    _applyPointOffset: function() {\n      return fabric.Polygon.prototype._applyPointOffset.call(this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!fabric.Polygon.prototype.commonRender.call(this, ctx)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object) {\n    var points = object.points;\n    return new fabric.Polyline(points, object, true);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Object\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Polygon} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n      this.points = points || [ ];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n\n      this.minX = minX || 0,\n      this.minY = minY || 0;\n    },\n\n    /**\n     * @private\n     */\n    _applyPointOffset: function() {\n      // change points to offset polygon into a bounding box\n      // executed one time\n      this.points.forEach(function(p) {\n        p.x -= (this.minX + this.width / 2);\n        p.y -= (this.minY + this.height / 2);\n      }, this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [],\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n      }\n\n      markup.push(\n        '<', this.type, ' ',\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderFill(ctx);\n      if (this.stroke || this.strokeDashArray) {\n        ctx.closePath();\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      ctx.beginPath();\n\n      if (this._applyPointOffset) {\n        if (!(this.group && this.group.type === 'path-group')) {\n          this._applyPointOffset();\n        }\n        this._applyPointOffset = null;\n      }\n\n      ctx.moveTo(this.points[0].x, this.points[0].y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x, point.y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.points.length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object) {\n    return new fabric.Polygon(object.points, object, true);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n\n      this.setOptions(options);\n\n      if (!path) {\n        path = [ ];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice() }),\n        pathOffset: this.pathOffset\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      if (this.transformMatrix) {\n        o.transformMatrix = this.transformMatrix;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        //jscs:disable validateIndentation\n        '<path ',\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n        //jscs:enable validateIndentation\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [ ],\n          coords = [ ],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [ currentPath.charAt(0) ];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [ ];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [ ];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [ ];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [ ];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [ ];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [ ];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [ ];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [ ];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              x,\n              y\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var path = elements[0],\n            pathUrl = object.path;\n\n        delete object.path;\n\n        fabric.util.object.extend(path, object);\n        path.setSourcePath(pathUrl);\n\n        callback(path);\n      });\n    }\n    else {\n      callback(new fabric.Path(object.path, object));\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      invoke = fabric.util.array.invoke,\n      parentToObject = fabric.Object.prototype.toObject;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [ ];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [ ], yC = [ ], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Renders this group on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      ctx.translate(-this.width/2, -this.height/2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {Any} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(parentToObject.call(this, propertiesToInclude), {\n        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = [\n            //jscs:disable validateIndentation\n            '<g ',\n              'style=\"', this.getSvgStyles(), '\" ',\n              'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n            '>\\n'\n            //jscs:enable validateIndentation\n          ];\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push(objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = (this.getObjects()[0].get('fill') || '').toLowerCase();\n      return this.getObjects().every(function(path) {\n        return (path.get('fill') || '').toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    if (typeof object.paths === 'string') {\n      fabric.loadSVGFromURL(object.paths, function (elements) {\n\n        var pathUrl = object.paths;\n        delete object.paths;\n\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n        delete object.paths;\n        callback(new fabric.PathGroup(enlivenedObjects, object));\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      invoke = fabric.util.array.invoke;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      this.originalState = { };\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          center = this.getCenterPoint();\n\n      object.set({\n        originalLeft: objectLeft,\n        originalTop: objectTop,\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords();\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._moveFlippedObject(object);\n      this._restoreObjectsState();\n\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      opacity:          true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      // the array is now sorted in order of highest first, so start from end\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n\n      this.clipTo && ctx.restore();\n\n      ctx.restore();\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      this._moveFlippedObject(object);\n      this._setObjectPosition(object);\n      return object;\n    },\n\n    /**\n     * Moves a flipped object to the position where it's displayed\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _moveFlippedObject: function(object) {\n      var oldOriginX = object.get('originX'),\n          oldOriginY = object.get('originY'),\n          center = object.getCenterPoint();\n\n      object.set({\n        originX: 'center',\n        originY: 'center',\n        left: center.x,\n        top: center.y\n      });\n\n      this._toggleFlipping(object);\n\n      var newOrigin = object.getPointByOrigin(oldOriginX, oldOriginY);\n\n      object.set({\n        originX: oldOriginX,\n        originY: oldOriginY,\n        left: newOrigin.x,\n        top: newOrigin.y\n      });\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _toggleFlipping: function(object) {\n      if (this.flipX) {\n        object.toggle('flipX');\n        object.set('left', -object.get('left'));\n        object.setAngle(-object.getAngle());\n      }\n      if (this.flipY) {\n        object.toggle('flipY');\n        object.set('top', -object.get('top'));\n        object.setAngle(-object.getAngle());\n      }\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this._setObjectPosition(object);\n\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      object.setCoords();\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectPosition: function(object) {\n      var center = this.getCenterPoint(),\n          rotated = this._getRotatedLeftTop(object);\n\n      object.set({\n        angle: object.getAngle() + this.getAngle(),\n        left: center.x + rotated.left,\n        top: center.y + rotated.top,\n        scaleX: object.get('scaleX') * this.get('scaleX'),\n        scaleY: object.get('scaleY') * this.get('scaleY')\n      });\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedLeftTop: function(object) {\n      var groupAngle = this.getAngle() * (Math.PI / 180);\n      return {\n        left: (-Math.sin(groupAngle) * object.getTop() * this.get('scaleY') +\n                Math.cos(groupAngle) * object.getLeft() * this.get('scaleX')),\n\n        top:  (Math.cos(groupAngle) * object.getTop() * this.get('scaleY') +\n               Math.sin(groupAngle) * object.getLeft() * this.get('scaleX'))\n      };\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      this._objects.forEach(this._moveFlippedObject, this);\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all group objects\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      this.forEachObject(function(object) {\n        object.setCoords();\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords();\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = [\n        //jscs:disable validateIndentation\n        '<g ',\n          'transform=\"', this.getSvgTransform(),\n        '\">\\n'\n        //jscs:enable validateIndentation\n      ];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push(this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {Any}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   * @return {fabric.Group} An instance of fabric.Group\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"allow-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [ ];\n      this.resizeFilters = [ ];\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(callback);\n      }\n      else if (callback) {\n        callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      ctx.save();\n      this._setStrokeStyles(ctx);\n      ctx.beginPath();\n      ctx.strokeRect(-this.width / 2, -this.height / 2, this.width, this.height);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [ ];\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        src: this._originalElement.src || this._originalElement._src,\n        filters: filters,\n        crossOrigin: this.crossOrigin,\n        alignX: this.alignX,\n        alignY: this.alignY,\n        meetOrSlice: this.meetOrSlice\n      });\n\n      if (this.resizeFilters.length > 0) {\n        object.resizeFilters = this.resizeFilters.map(function(filterObj) {\n          return filterObj && filterObj.toObject();\n        });\n      }\n\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = [], x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none';\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image xlink:href=\"', this.getSvgSrc(),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @return {String} Source of an image\n     */\n    getSrc: function() {\n      if (this.getElement()) {\n        return this.getElement().src || this.getElement()._src;\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Returns a clone of an instance\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var imgEl = imgElement,\n          canvasEl = fabric.util.createCanvasElement(),\n          replacement = fabric.util.createImage(),\n          _this = this;\n\n      canvasEl.width = imgEl.width;\n      canvasEl.height = imgEl.height;\n      canvasEl.getContext('2d').drawImage(imgEl, 0, 0, imgEl.width, imgEl.height);\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback();\n        return canvasEl;\n      }\n      filters.forEach(function(filter) {\n        filter && filter.applyTo(canvasEl, filter.scaleX || _this.scaleX, filter.scaleY || _this.scaleY);\n        if (!forResizing && filter && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback();\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback();\n          replacement.onload = canvasEl = imgEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), null, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [ ];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [ ];\n          var instance = new fabric.Image(img, object);\n          callback && callback(instance);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        align = 'xMidYMid', meetOrSlice = 'meet', alignX, alignY, aspectRatioAttrs;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      aspectRatioAttrs = parsedAttributes.preserveAspectRatio.split(' ');\n    }\n\n    if (aspectRatioAttrs && aspectRatioAttrs.length) {\n      meetOrSlice = aspectRatioAttrs.pop();\n      if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n        align = meetOrSlice;\n        meetOrSlice = 'meet';\n      }\n      else if (aspectRatioAttrs.length) {\n        align = aspectRatioAttrs.pop();\n      }\n    }\n    //divide align in alignX and alignY\n    alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n    alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n    parsedAttributes.alignX = alignX;\n    parsedAttributes.alignY = alignY;\n    parsedAttributes.meetOrSlice = meetOrSlice;\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#image_filters}\n * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Brightness = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = function(object) {\n    return new fabric.Image.filters.Brightness(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Convolute = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n\n      var canvasEl = fabric.util.createCanvasElement();\n      this.tmpCtx = canvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createImageData: function(w, h) {\n      return this.tmpCtx.createImageData(w, h);\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side/2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n\n          // pad output by the convolution matrix\n          w = sw,\n          h = sh,\n          output = this._createImageData(w, h),\n\n          dst = output.data,\n\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0;\n\n      for (var y = 0; y < h; y++) {\n        for (var x = 0; x < w; x++) {\n          var sy = y,\n              sx = x,\n              dstOff = (y * w + x) * 4,\n              // calculate the weighed sum of the source image pixels that\n              // fall under the convolution matrix\n              r = 0, g = 0, b = 0, a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n\n              var scy = sy + cy - halfSide,\n                  scx = sx + cx - halfSide;\n\n              /* jshint maxdepth:5 */\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              var srcOff = (scy * sw + scx) * 4,\n                  wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = function(object) {\n    return new fabric.Image.filters.Convolute(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.GradientTransparency = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n    return new fabric.Image.filters.GradientTransparency(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Grayscale = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function() {\n    return new fabric.Image.filters.Grayscale();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Invert = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i+=4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function() {\n    return new fabric.Image.filters.Invert();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  fabric.Image.filters.Mask = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [ 0, 1, 2, 3 ].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = maskEl.width;\n      maskCanvasEl.height = maskEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, maskEl.width, maskEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, maskEl.width, maskEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      callback && callback(new fabric.Image.filters.Mask(object));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Noise = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = function(object) {\n    return new fabric.Image.filters.Noise(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Pixelate = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = function(object) {\n    return new fabric.Image.filters.Pixelate(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.RemoveWhite = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 1;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n    return new fabric.Image.filters.RemoveWhite(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Sepia = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i+=4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function() {\n    return new fabric.Image.filters.Sepia();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Sepia2 = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i+=4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function() {\n    return new fabric.Image.filters.Sepia2();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Tint = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i+=4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = function(object) {\n    return new fabric.Image.filters.Tint(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Multiply = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i+=4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = function(object) {\n    return new fabric.Image.filters.Multiply(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Blend = fabric.util.createClass({\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  fabric.Image.filters.Blend.fromObject = function(object) {\n    return new fabric.Image.filters.Blend(object);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Resize = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    sliceByTwo: function(canvasEl, width, height, newWidth, newHeight) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = width, stepH = height,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      newWidth = floor(newWidth);\n      newHeight = floor(newHeight);\n      tmpCanvas.width = max(newWidth, width);\n      tmpCanvas.height = max(newHeight, height);\n\n      if (newWidth > width) {\n        multW = 2;\n        signW = -1;\n      }\n      if (newHeight > height) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, width, height);\n      canvasEl.width = max(newWidth, width);\n      canvasEl.height = max(newHeight, height);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        width = stepW;\n        height = stepH;\n        if (newWidth * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = newWidth;\n          doneW = true;\n        }\n        if (newHeight * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = newHeight;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, width, height);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, width, height, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, newWidth, newHeight);\n    },\n\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0, red = 0, green = 0, blue = 0, alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    bilinearFiltering: function(canvasEl, w, h, w2, h2) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (w - 1), img = context.getImageData(0, 0, w, h),\n          pixels = img.data, destImage = context.getImageData(0, 0, w2, h2),\n          destPixels = destImage.data;\n      for (i = 0; i < h2; i++) {\n        for (j = 0; j < w2; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * w + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /*jshint maxdepth:5 */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                /*jshint maxdepth:6 */\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                /*jshint maxdepth:5 */\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /*jshint maxdepth:4 */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = function(object) {\n    return new fabric.Image.filters.Resize(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor'\n  );\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: {\n      fontSize: true,\n      fontWeight: true,\n      fontFamily: true,\n      fontStyle: true,\n      lineHeight: true,\n      stroke: true,\n      strokeWidth: true,\n      text: true,\n      textAlign: true\n    },\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", or \"right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.setOptions(options);\n      this.__skipDimension = false;\n      this._initDimensions();\n    },\n\n    /**\n     * Renders text object on offscreen canvas, so that it would get dimensions\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      //if textAlign is 'justify' i have to disable caching\n      //when calculating width of text and widths of line.\n      this._cacheLinesWidth = (this.textAlign !== 'justify');\n      this.width = this._getTextWidth(ctx);\n      this._cacheLinesWidth = true;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this._setupCompositeOperation(ctx);\n      this._renderTextBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n      this.clipTo && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n\n      this._translateForTextAlign(ctx);\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n      this._translateForTextAlign(ctx, true);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} back Indicates if translate back or forward\n     */\n    _translateForTextAlign: function(ctx, back) {\n      if (this.textAlign !== 'left' && this.textAlign !== 'justify') {\n        var sign = back ? -1 : 1;\n        ctx.translate(this.textAlign === 'center' ? (sign * this.width / 2) : sign * this.width, 0);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      if (!this.skipTextAlign) {\n        ctx.textAlign = this.textAlign;\n      }\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._textLines.length * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4);\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      ctx[method](chars, left, top);\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      if (this.textAlign !== 'justify') {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      var lineWidth = this._getLineWidth(ctx, lineIndex),\n          totalWidth = this.width;\n      if (totalWidth >= lineWidth) {\n        // stretch the line\n        var words = line.split(/\\s+/),\n            wordsWidth = this._getWidthOfWords(ctx, line, lineIndex),\n            widthDiff = totalWidth - wordsWidth,\n            numSpaces = words.length - 1,\n            spaceWidth = widthDiff / numSpaces,\n            leftOffset = 0;\n\n        for (var i = 0, len = words.length; i < len; i++) {\n          this._renderChars(method, ctx, words[i], left + leftOffset, top, lineIndex);\n          leftOffset += ctx.measureText(words[i]).width + spaceWidth;\n        }\n      }\n      else {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} line\n     */\n    _getWidthOfWords: function (ctx, line) {\n      return ctx.measureText(line.replace(/\\s+/g, '')).width;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this._skipFillStrokeCheck) {\n        return;\n      }\n\n      var lineHeights = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight;\n\n        this._renderTextLine(\n          'fillText',\n          ctx,\n          this._textLines[i],\n          this._getLeftOffset(),\n          this._getTopOffset() + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && !this._skipFillStrokeCheck) {\n        return;\n      }\n\n      var lineHeights = 0;\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeDashArray) {\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n        if (1 & this.strokeDashArray.length) {\n          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n        }\n        supportsLineDash && ctx.setLineDash(this.strokeDashArray);\n      }\n\n      ctx.beginPath();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight;\n\n        this._renderTextLine(\n          'strokeText',\n          ctx,\n          this._textLines[i],\n          this._getLeftOffset(),\n          this._getTopOffset() + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    _getHeightOfLine: function() {\n      return this.fontSize * this._fontSizeMult * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} textLines Array of all text lines\n     */\n    _renderTextBackground: function(ctx) {\n      this._renderTextBoxBackground(ctx);\n      this._renderTextLinesBackground(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextBoxBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        this._getLeftOffset(),\n        this._getTopOffset(),\n        this.width,\n        this.height\n      );\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine = this._getHeightOfLine(),\n          lineWidth, lineLeftOffset;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this._textLines[i] !== '') {\n          lineWidth = this._getLineWidth(ctx, i);\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            this.fontSize * this._fontSizeMult\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [ ];\n      this.__lineHeights = [ ];\n      this.__lineOffsets = [ ];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearCache: function() {\n      var shouldClear = false;\n      if (this._forceClearCache) {\n        this._forceClearCache = false;\n        return true;\n      }\n      for (var prop in this._dimensionAffectingProps) {\n        if (this['__' + prop] !== this[prop]) {\n          this['__' + prop] = this[prop];\n          shouldClear = true;\n        }\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n      var width, wordCount, line = this._textLines[lineIndex];\n      if (line === '') {\n        width = 0;\n      }\n      else if (this.textAlign === 'justify' && this._cacheLinesWidth) {\n        wordCount = line.split(' ');\n        //consider not justify last line, not for now.\n        if (wordCount.length > 1) {\n          width = this.width;\n        }\n        else {\n          width = ctx.measureText(line).width;\n        }\n      }\n      else {\n        width = ctx.measureText(line).width;\n      }\n      this._cacheLinesWidth && (this.__lineWidths[lineIndex] = width);\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i),\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth),\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      this._setTextStyles(ctx);\n\n      if (this._shouldClearCache()) {\n        this._initDimensions(ctx);\n      }\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._render(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        text:                 this.text,\n        fontSize:             this.fontSize,\n        fontWeight:           this.fontWeight,\n        fontFamily:           this.fontFamily,\n        fontStyle:            this.fontStyle,\n        lineHeight:           this.lineHeight,\n        textDecoration:       this.textDecoration,\n        textAlign:            this.textAlign,\n        textBackgroundColor:  this.textBackgroundColor\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      markup.push(\n        '\\t<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ': ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ': ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ': ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ': ''),\n            'style=\"', this.getSvgStyles(), '\" >',\n            textAndBg.textSpans.join(''),\n          '</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [ ],\n          textBgRects = [ ],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      textSpans.push(\n        '<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>'\n      );\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.__lineWidths[i], NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {Any} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key in this._dimensionAffectingProps) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n    var textContent = element.textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' '),\n        text = new fabric.Text(textContent, options),\n        /*\n          Adjust positioning:\n            x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n            top/left properties in Fabric correspond to center point of text bounding box\n        */\n        offX = 0;\n\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - text.getHeight() / 2 + text.fontSize * (0.18 + text._fontSizeFraction) /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object) {\n    return new fabric.Text(object.text, clone(object));\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     * @type Boolean\n     * @default\n     */\n    _skipFillStrokeCheck: false,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    _charWidthsCache: { },\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__maxFontHeights = [ ];\n      this.__widthOfSpace = [ ];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          /*jshint unused:false */\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      if (this.selectionStart !== index) {\n        this.fire('selection:changed');\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n        this.selectionStart = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      if (this.selectionEnd !== index) {\n        this.fire('selection:changed');\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n        this.selectionEnd = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [ ];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n      this.isEditing && this.renderCursorOrSelection();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active) {\n        return;\n      }\n\n      var chars = this.text.split(''),\n          boundaries, ctx;\n\n      if (this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\n      var lineLeftOffset = 0,\n\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getCachedLineOffset(lineIndex);\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCachedLineOffset: function(lineIndex) {\n      var widthOfLine = this._getLineWidth(this.ctx, lineIndex);\n\n      return this.__lineOffsets[lineIndex] ||\n        (this.__lineOffsets[lineIndex] = this._getLineLeftOffset(widthOfLine));\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getCachedLineOffset(lineIndex)\n                    : boundaries.leftOffset;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset,\n        boundaries.top + boundaries.topOffset,\n        this.cursorWidth / this.scaleX,\n        charHeight);\n\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getCachedLineOffset(i) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n        }\n\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth,\n          lineHeight);\n\n        boundaries.topOffset += lineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      this.skipTextAlign = true;\n\n      // set proper box offset\n      left -= this.textAlign === 'center'\n        ? (this.width / 2)\n        : (this.textAlign === 'right')\n          ? this.width\n          : 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          lineLeftOffset = this._getCachedLineOffset(lineIndex),\n          prevStyle,\n          charsToRender = '';\n\n      left += lineLeftOffset || 0;\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = 0, len = line.length; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        var thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i];\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n      this.skipTextAlign = false;\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\n      if (decl) {\n        var shouldStroke = decl.stroke || this.stroke,\n            shouldFill = decl.fill || this.fill;\n\n        ctx.save();\n        charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl);\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\n        if (shouldFill) {\n          ctx.fillText(_char, left, top);\n        }\n        if (shouldStroke) {\n          ctx.strokeText(_char, left, top);\n        }\n\n        this._renderCharDecoration(ctx, decl, left, top, offset, charWidth, charHeight);\n        ctx.restore();\n\n        ctx.translate(charWidth, 0);\n      }\n      else {\n        if (method === 'strokeText' && this.stroke) {\n          ctx[method](_char, left, top);\n        }\n        if (method === 'fillText' && this.fill) {\n          ctx[method](_char, left, top);\n        }\n        charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i);\n        this._renderCharDecoration(ctx, null, left, top, offset, charWidth, this.fontSize);\n\n        ctx.translate(ctx.measureText(_char).width, 0);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, styleDeclaration, left, top, offset, charWidth, charHeight) {\n\n      var textDecoration = styleDeclaration\n            ? (styleDeclaration.textDecoration || this.textDecoration)\n            : this.textDecoration;\n\n      if (!textDecoration) {\n        return;\n      }\n\n      if (textDecoration.indexOf('underline') > -1) {\n        ctx.fillRect(\n          left,\n          top + charHeight / 10,\n          charWidth ,\n          charHeight / 15\n        );\n      }\n      if (textDecoration.indexOf('line-through') > -1) {\n        ctx.fillRect(\n          left,\n          top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + charHeight / 15,\n          charWidth,\n          charHeight / 15\n        );\n      }\n      if (textDecoration.indexOf('overline') > -1) {\n        ctx.fillRect(\n          left,\n          top - (this._fontSizeMult - this._fontSizeFraction) * charHeight,\n          charWidth,\n          charHeight / 15\n        );\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styles) {\n        return;\n      }\n\n      ctx.save();\n\n      if (this.textBackgroundColor) {\n        ctx.fillStyle = this.textBackgroundColor;\n      }\n\n      var lineHeights = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\n        var heightOfLine = this._getHeightOfLine(ctx, i);\n        if (this._textLines[i] === '') {\n          lineHeights += heightOfLine;\n          continue;\n        }\n\n        var lineWidth = this._getLineWidth(ctx, i),\n            lineLeftOffset = this._getCachedLineOffset(i);\n\n        if (this.textBackgroundColor) {\n          ctx.fillStyle = this.textBackgroundColor;\n\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineHeights,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        if (this._getLineStyle(i)) {\n          for (var j = 0, jlen = this._textLines[i].length; j < jlen; j++) {\n            var style = this._getStyleDeclaration(i, j);\n            if (style && style.textBackgroundColor) {\n\n              var _char = this._textLines[i][j];\n\n              ctx.fillStyle = style.textBackgroundColor;\n\n              ctx.fillRect(\n                this._getLeftOffset() + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n                this._getTopOffset() + lineHeights,\n                this._getWidthOfChar(ctx, _char, i, j) + 1,\n                heightOfLine / this.lineHeight\n              );\n            }\n          }\n        }\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontFamily +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle +\n             styleDeclaration.shadow;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var styleDeclaration = decl || this._getStyleDeclaration(lineIndex, charIndex);\n\n      if (styleDeclaration) {\n        // cloning so that original style object is not polluted with following font declarations\n        styleDeclaration = clone(styleDeclaration);\n      }\n      else {\n        styleDeclaration = { };\n      }\n\n      this._applyFontStyles(styleDeclaration);\n\n      var cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles\n      if (this.isEmptyStyles() && this._charWidthsCache[cacheProp] && this.caching) {\n        return this._charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n      this._setShadow.call(styleDeclaration, ctx);\n\n      if (!this.caching) {\n        return ctx.measureText(_char).width;\n      }\n\n      if (!this._charWidthsCache[cacheProp]) {\n        this._charWidthsCache[cacheProp] = ctx.measureText(_char).width;\n      }\n\n      return this._charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n\n      var styleDeclaration = this._getStyleDeclaration(lineIndex, charIndex, true);\n      this._applyFontStyles(styleDeclaration);\n      var cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      if (this._charWidthsCache[cacheProp] && this.caching) {\n        return this._charWidthsCache[cacheProp];\n      }\n      else if (ctx) {\n        ctx.save();\n        var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n        ctx.restore();\n        return width;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfChar: function(ctx, _char, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfCharAt: function(ctx, lineIndex, charIndex) {\n      var _char = this._textLines[lineIndex][charIndex];\n      return this._getHeightOfChar(ctx, _char, lineIndex, charIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n      this.__lineWidths[lineIndex] = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      return this.__lineWidths[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = widthDiff / numSpaces;\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} line\n     * @param {Number} lineIndex\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, line[0], lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, line[i], lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__maxFontHeights[lineIndex] = maxHeight;\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        height += this._getHeightOfLine(ctx, i);\n      }\n      return height;\n    },\n\n    /**\n     * This method is overwritten to account for different top offset\n     * @private\n     */\n    _renderTextBoxBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      ctx.save();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        this._getLeftOffset(),\n        this._getTopOffset(),\n        this.width,\n        this.height\n      );\n\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object) {\n    return new fabric.IText(object.text, clone(object));\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n    },\n\n    /**\n     * Initializes \"selected\" event handler\n     */\n    initSelectedHandler: function() {\n      this.on('selected', function() {\n\n        var _this = this;\n        setTimeout(function() {\n          _this.selected = true;\n        }, 100);\n      });\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        if (this.canvas && !this.canvas._hasITextHandlers) {\n          this.canvas._hasITextHandlers = true;\n          this._initCanvasHandlers();\n        }\n\n        // Track IText instances per-canvas. Only register in this array once added\n        // to a canvas; we don't want to leak a reference to the instance forever\n        // simply because it existed at some point.\n        // (Might be added to a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          _this.canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        // (Might be removed from a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n        }\n      });\n    },\n\n    /**\n     * @private\n     */\n    _initCanvasHandlers: function() {\n      var _this = this;\n\n      this.canvas.on('selection:cleared', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n\n      this.canvas.on('mouse:up', function() {\n        if (_this.canvas._iTextInstances) {\n          _this.canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      });\n\n      this.canvas.on('object:selected', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          if (obj.canvas) {\n            obj.canvas.clearContext(obj.canvas.contextTop || obj.ctx);\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n      clearTimeout(this._cursorTimeout1);\n      this._currentCursorOpacity = 1;\n      if (this.canvas) {\n        this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n        this.renderCursorOrSelection();\n      }\n      if (this._cursorTimeout2) {\n        clearTimeout(this._cursorTimeout2);\n      }\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.setSelectionStart(0);\n      this.setSelectionEnd(this.text.length);\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction: 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd   = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionEnd);\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd   = this.findLineBoundaryRight(selectionStart);\n\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionEnd);\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function() {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea();\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n\n      this._tick();\n      this.fire('editing:entered');\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.renderAll();\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      var _this = this;\n      this.canvas.on('mouse:move', function(options) {\n        if (!_this.__isMousedown || !_this.isEditing) {\n          return;\n        }\n\n        var newSelectionStart = _this.getSelectionStartFromPointer(options.e);\n        if (newSelectionStart >= _this.__selectionStartOnMouseDown) {\n          _this.setSelectionStart(_this.__selectionStartOnMouseDown);\n          _this.setSelectionEnd(newSelectionStart);\n        }\n        else {\n          _this.setSelectionStart(newSelectionStart);\n          _this.setSelectionEnd(_this.__selectionStartOnMouseDown);\n        }\n      });\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n      this.hiddenTextarea = null;\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      this.canvas && this.canvas.fire('text:editing:exited', { target: this });\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.setSelectionStart(start);\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n        this.setSelectionEnd(this.selectionStart);\n      }\n\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.copiedTextStyle[i];\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.setSelectionStart(this.selectionStart + 1);\n      this.setSelectionEnd(this.selectionStart);\n      if (skipUpdate) {\n        return;\n      }\n      this.canvas && this.canvas.renderAll();\n      this.setCoords();\n      this.fire('changed');\n      this.canvas && this.canvas.fire('text:changed', { target: this });\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      if (!this.styles[lineIndex + 1]) {\n        this.styles[lineIndex + 1] = {};\n      }\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        for (var index in this.styles[lineIndex]) {\n          if (parseInt(index, 10) >= charIndex) {\n            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this.styles[lineIndex][charIndex] =\n        style || clone(currentLineStyles[charIndex - 1]);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (isBeginningOfLine) {\n\n        var textOnPreviousLine     = this._textLines[lineIndex - 1],\n            newCharIndexOnPrevLine = textOnPreviousLine\n              ? textOnPreviousLine.length\n              : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n\n        this.shiftLineStyles(lineIndex, -1);\n\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n          //console.log('deleting', lineIndex, charIndex + offset);\n        }\n\n        var currentLineStylesCloned = clone(currentLineStyles);\n\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initSelectedHandler();\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.hiddenTextarea && this.canvas) {\n        this.canvas.wrapperEl.appendChild(this.hiddenTextarea);\n      }\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        this.initDelayedCursor(true);\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (this._isObjectMoved(options.e)) {\n        return;\n      }\n\n      if (this.__lastSelected) {\n        this.enterEditing();\n        this.initDelayedCursor(true);\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelectionStart = this.getSelectionStartFromPointer(e);\n\n    if (e.shiftKey) {\n      if (newSelectionStart < this.selectionStart) {\n        this.setSelectionEnd(this.selectionStart);\n        this.setSelectionStart(newSelectionStart);\n      }\n      else {\n        this.setSelectionEnd(newSelectionStart);\n      }\n    }\n    else {\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionStart);\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      if (this.flipX) {\n        // when oject is horizontally flipped we reverse chars\n        // we should reverse also style or do not revers at all.\n        this._textLines[i] = line.reverse().join('');\n      }\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.style.cssText = 'position: fixed; bottom: 20px; left: 0px; opacity: 0;'\n                                        + ' width: 0px; height: 0px; z-index: -999;';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMap: {\n    65: 'selectAll',\n    88: 'cut'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this._keysMap) {\n      this[this._keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this._ctrlKeysMap) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMap[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this._cancelOnInput) {\n      this._cancelOnInput = false;\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff = newTextLength - textLength,\n        charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(\n                          this.selectionStart,\n                          this.selectionEnd);\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    this._cancelOnInput = true;\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy();\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return e && (e.clipboardData || fabric.window.clipboardData);\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        _char, lineLeftOffset, lineIndex = cursorLocation.lineIndex,\n        textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n        textOnSameLineAfterCursor = this._textLines[lineIndex].slice(cursorLocation.charIndex),\n        textOnNextLine = this._textLines[lineIndex + 1] || '';\n\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n\n    var widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, lineIndex);\n    lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor);\n\n    var widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\n    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n      _char = textOnSameLineBeforeCursor[i];\n      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n\n    var indexOnNextLine = this._getIndexOnNextLine(\n      cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor);\n\n    return textOnSameLineAfterCursor.length + 1 + indexOnNextLine;\n  },\n\n  /**\n   * @private\n   */\n  _getIndexOnNextLine: function(cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor) {\n    var lineIndex = cursorLocation.lineIndex + 1,\n        widthOfNextLine = this._getLineWidth(this.ctx, lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfNextLine),\n        widthOfCharsOnNextLine = lineLeftOffset,\n        indexOnNextLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnNextLine.length; j < jlen; j++) {\n\n      var _char = textOnNextLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnNextLine += widthOfChar;\n\n      if (widthOfCharsOnNextLine > widthOfCharsOnSameLineBeforeCursor) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnNextLine - widthOfChar,\n            rightEdge = widthOfCharsOnNextLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\n        indexOnNextLine = offsetFromRightEdge < offsetFromLeftEdge ? j + 1 : j;\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnNextLine = textOnNextLine.length;\n    }\n\n    return indexOnNextLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    var offset = this.getDownCursorOffset(e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorDownWithShift(offset);\n    }\n    else {\n      this.moveCursorDownWithoutShift(offset);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor down without keeping selection\n   * @param {Number} offset\n   */\n  moveCursorDownWithoutShift: function(offset) {\n    this._selectionDirection = 'right';\n    this.setSelectionStart(this.selectionStart + offset);\n    this.setSelectionEnd(this.selectionStart);\n  },\n\n  /**\n   * private\n   */\n  swapSelectionPoints: function() {\n    var swapSel = this.selectionEnd;\n    this.setSelectionEnd(this.selectionStart);\n    this.setSelectionStart(swapSel);\n  },\n\n  /**\n   * Moves cursor down while keeping selection\n   * @param {Number} offset\n   */\n  moveCursorDownWithShift: function(offset) {\n    if (this.selectionEnd === this.selectionStart) {\n      this._selectionDirection = 'right';\n    }\n    if (this._selectionDirection === 'right') {\n      this.setSelectionEnd(this.selectionEnd + offset);\n    }\n    else {\n      this.setSelectionStart(this.selectionStart + offset);\n    }\n    if (this.selectionEnd < this.selectionStart  && this._selectionDirection === 'left') {\n      this.swapSelectionPoints();\n      this._selectionDirection = 'right';\n    }\n    if (this.selectionEnd > this.text.length) {\n      this.setSelectionEnd(this.text.length);\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on first line, up cursor goes to start of line\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      return selectionProp;\n    }\n\n    var textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n        textOnPreviousLine = this._textLines[lineIndex - 1] || '',\n        _char,\n        widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, cursorLocation.lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor),\n        widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\n    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n      _char = textOnSameLineBeforeCursor[i];\n      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n\n    var indexOnPrevLine = this._getIndexOnPrevLine(\n      cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor);\n\n    return textOnPreviousLine.length - indexOnPrevLine + textOnSameLineBeforeCursor.length;\n  },\n\n  /**\n   * @private\n   */\n  _getIndexOnPrevLine: function(cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor) {\n\n    var lineIndex = cursorLocation.lineIndex - 1,\n        widthOfPreviousLine = this._getLineWidth(this.ctx, lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfPreviousLine),\n        widthOfCharsOnPreviousLine = lineLeftOffset,\n        indexOnPrevLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnPreviousLine.length; j < jlen; j++) {\n\n      var _char = textOnPreviousLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnPreviousLine += widthOfChar;\n\n      if (widthOfCharsOnPreviousLine > widthOfCharsOnSameLineBeforeCursor) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnPreviousLine - widthOfChar,\n            rightEdge = widthOfCharsOnPreviousLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\n        indexOnPrevLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnPrevLine = textOnPreviousLine.length - 1;\n    }\n\n    return indexOnPrevLine;\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    var offset = this.getUpCursorOffset(e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorUpWithShift(offset);\n    }\n    else {\n      this.moveCursorUpWithoutShift(offset);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor up with shift\n   * @param {Number} offset\n   */\n  moveCursorUpWithShift: function(offset) {\n    if (this.selectionEnd === this.selectionStart) {\n      this._selectionDirection = 'left';\n    }\n    if (this._selectionDirection === 'right') {\n      this.setSelectionEnd(this.selectionEnd - offset);\n    }\n    else {\n      this.setSelectionStart(this.selectionStart - offset);\n    }\n    if (this.selectionEnd < this.selectionStart && this._selectionDirection === 'right') {\n      this.swapSelectionPoints();\n      this._selectionDirection = 'left';\n    }\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorUpWithoutShift: function(offset) {\n    if (this.selectionStart === this.selectionEnd) {\n      this.setSelectionStart(this.selectionStart - offset);\n    }\n    this.setSelectionEnd(this.selectionStart);\n\n    this._selectionDirection = 'left';\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      this.moveCursorLeftWithShift(e);\n    }\n    else {\n      this.moveCursorLeftWithoutShift(e);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * @private\n   */\n  _move: function(e, prop, direction) {\n    var propMethod = (prop === 'selectionStart' ? 'setSelectionStart' : 'setSelectionEnd');\n    if (e.altKey) {\n      this[propMethod](this['findWordBoundary' + direction](this[prop]));\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      this[propMethod](this['findLineBoundary' + direction](this[prop]));\n    }\n    else {\n      this[propMethod](this[prop] + (direction === 'Left' ? -1 : 1));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart) {\n      this._moveLeft(e, 'selectionStart');\n    }\n    this.setSelectionEnd(this.selectionStart);\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      this._moveLeft(e, 'selectionEnd');\n    }\n    else {\n      this._selectionDirection = 'left';\n      this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      this.moveCursorRightWithShift(e);\n    }\n    else {\n      this.moveCursorRightWithoutShift(e);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      this._moveRight(e, 'selectionStart');\n    }\n    else {\n      this._selectionDirection = 'right';\n      this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      this._moveRight(e, 'selectionStart');\n      this.setSelectionEnd(this.selectionStart);\n    }\n    else {\n      this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText());\n      this.setSelectionStart(this.selectionEnd);\n    }\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this.styles[lineIndex]) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getSVGLineLeftOffset(lineIndex) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this.styles[lineIndex][i] || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineLeftOffset: function(lineIndex) {\n      return fabric.util.toFixed(this._getLineLeftOffset(this.__lineWidths[lineIndex]), 2);\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        //jscs:disable validateIndentation\n        '<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>'\n        //jscs:enable validateIndentation\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text'\n      }, styleDecl));\n\n      return [\n        //jscs:disable validateIndentation\n        '<tspan x=\"', lineLeftOffset + charOffset, '\" y=\"',\n          lineTopOffset - this.height/2, '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ': ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ': ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ': ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ': ''),\n          'style=\"', fillStyles, '\">',\n          fabric.util.string.escapeXml(_char),\n        '</tspan>'\n        //jscs:enable validateIndentation\n      ].join('');\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone  = fabric.util.object.clone;\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 0,\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this.callSuper('initialize', text, options);\n      this.set({\n        lockUniScaling: false,\n        lockScalingY: true,\n        lockScalingFlip: true,\n        hasBorders: true\n      });\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.width = true;\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines();\n\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n      this._setLineWidths();\n    },\n\n    /**\n     * set the __lineWidths cache array to support\n     * functions that expect it to be filled\n     * @private\n     */\n    _setLineWidths: function() {\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        this.__lineWidths[i] = this.width;\n      }\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n') {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ') {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : {};\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0, decl;\n      charOffset = charOffset || 0;\n\n      for (var i = 0; i < text.length; i++) {\n        if (this.styles && this.styles[lineIndex] && (decl = this.styles[lineIndex][i + charOffset])) {\n          ctx.save();\n          width += this._applyCharStylesGetWidth(ctx, text[i], lineIndex, i, decl);\n          ctx.restore();\n        }\n        else {\n          // @note: we intentionally pass in an empty style declaration, because if we pass in nothing, it will\n          // retry fetching style declaration\n          width += this._applyCharStylesGetWidth(ctx, text[i], lineIndex, i, {});\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var maxWidth  = this.width,\n          lineWidth = this._measureText(ctx, text, lineIndex, 0);\n\n      // first case: does the whole line fit?\n      if (lineWidth < maxWidth) {\n        // if the current line is only one word, we need to keep track of it if it's a large word\n        if (text.indexOf(' ') === -1 && lineWidth > this.dynamicMinWidth) {\n          this.dynamicMinWidth = lineWidth;\n        }\n\n        return [text];\n      }\n\n      // if the whole line doesn't fit, we break it up into words\n      var lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          offset           = 0,\n          infix            = '',\n          wordWidth        = 0,\n          largestWordWidth = 0;\n\n      while (words.length > 0) {\n        infix = line === '' ? '' : ' ';\n        wordWidth = this._measureText(ctx, words[0], lineIndex, line.length + infix.length + offset);\n        lineWidth = line === '' ? wordWidth : this._measureText(ctx, line + infix + words[0], lineIndex, offset);\n\n        if (lineWidth < maxWidth || (line === '' && wordWidth >= maxWidth)) {\n          line += infix + words.shift();\n        }\n        else {\n          offset += line.length + 1; // add 1 because each word is separated by a space\n          lines.push(line);\n          line = '';\n        }\n\n        if (words.length === 0) {\n          lines.push(line);\n        }\n\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth;\n      }\n\n      return lines;\n    },\n\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function() {\n      this.ctx.save();\n      this._setTextStyles(this.ctx);\n\n      var lines = this._wrapText(this.ctx, this.text);\n\n      this.ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {Any} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getCachedLineOffset(cursorLocation.lineIndex);\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        minWidth: this.minWidth\n      });\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object) {\n    return new fabric.Textbox(object.text, clone(object));\n  };\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n  /**\n   * Contains all fabric.Textbox objects that have been created\n   * @static\n   * @memberOf fabric.Textbox\n   * @type Array\n   */\n  fabric.Textbox.instances = [];\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n      }\n    }\n    else {\n      setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles),\n          map          = this._styleMap[lineIndex];\n\n      // adjust line index\n      lineIndex = map.line;\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n          //console.log('deleting', lineIndex, charIndex + offset);\n        }\n\n        var currentLineStylesCloned = clone(currentLineStyles);\n\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      var oImg = new fabric.Image(img);\n\n      oImg._initConfig(object);\n      oImg._initFilters(object.filters, function(filters) {\n        oImg.filters = filters || [ ];\n        oImg._initFilters(object.resizeFilters, function(resizeFilters) {\n          oImg.resizeFilters = resizeFilters || [ ];\n          callback && callback(oImg);\n        });\n      });\n    });\n  };\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.Font = Canvas.Font;\n\n    return fabricCanvas;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  var origSetWidth = fabric.StaticCanvas.prototype.setWidth;\n  fabric.StaticCanvas.prototype.setWidth = function(width, options) {\n    origSetWidth.call(this, width, options);\n    this.nodeCanvas.width = width;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth;\n  }\n\n  var origSetHeight = fabric.StaticCanvas.prototype.setHeight;\n  fabric.StaticCanvas.prototype.setHeight = function(height, options) {\n    origSetHeight.call(this, height, options);\n    this.nodeCanvas.height = height;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight;\n  }\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fabric-webpack/dist/fabric.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nimport React, { PropTypes } from 'react';\nimport {fabric} from 'fabric-webpack';\nimport diff from 'deep-diff';\nimport observable from '../mixin/observable.js';\n\nexport default class FabricObject extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\t// Observable\n\t\tobservable(this);\n\n\t\t//Object\n\t\tthis.adjustPosition = to => this.state.object &&\n\t\t\tthis.state.object.adjustPosition(to);\n\t\tthis.animate = (property, value, opts) => this.state.object &&\n\t\t\tthis.state.object.animate(property, value, opts);\n\t\tthis.bringForward = intersecting => this.state.object &&\n\t\t\tthis.state.object.bringForward(intersecting);\n\t\tthis.bringToFront = () => this.state.object &&\n\t\t\tthis.state.object.bringToFront();\n\t\tthis.center = () => this.state.object &&\n\t\t\tthis.state.object.center();\n\t\tthis.centerH = () => this.state.object &&\n\t\t\tthis.state.object.centerH();\n\t\tthis.centerV = () => this.state.object &&\n\t\t\tthis.state.object.centerV();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.cloneAsImage = (callback) => this.state.object &&\n\t\t\tthis.state.object.cloneAsImage(callback);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.containsPoint = (point) => this.state.object &&\n\t\t\tthis.state.object.containsPoint(point);\n\t\tthis.drawBorders = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawBorders(ctx);\n\t\tthis.drawControls = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawControls(ctx);\n\t\tthis.fxStraighten = (callbacks) => this.state.object &&\n\t\t\tthis.state.object.fxStraighten(callbacks);\n\t\tthis.get = (property) => this.state.object &&\n\t\t\tthis.state.object.get(property);\n\t\tthis.getAngle = () => this.state.object &&\n\t\t\tthis.state.object.getAngle();\n\t\tthis.getBoundingRect = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRect();\n\t\tthis.getBoundingRectHeight = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectHeight();\n\t\tthis.getBoundingRectWidth = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectWidth();\n\t\tthis.getCenterPoint = () => this.state.object &&\n\t\t\tthis.state.object.getCenterPoint();\n\t\tthis.getClipTo = () => this.state.object &&\n\t\t\tthis.state.object.getClipTo();\n\t\tthis.getFill = () => this.state.object &&\n\t\t\tthis.state.object.getFill();\n\t\tthis.getFlipX = () => this.state.object &&\n\t\t\tthis.state.object.getFlipX();\n\t\tthis.getFlipY = () => this.state.object &&\n\t\t\tthis.state.object.getFlipY();\n\t\tthis.getLeft = () => this.state.object &&\n\t\t\tthis.state.object.getLeft();\n\t\tthis.getLocalPointer = (e, pointer) => this.state.object &&\n\t\t\tthis.state.object.getLocalPointer(e, pointer);\n\t\tthis.getOpacity = () => this.state.object &&\n\t\t\tthis.state.object.getOpacity();\n\t\tthis.getOriginX = () => this.state.object &&\n\t\t\tthis.state.object.getOriginX();\n\t\tthis.getOriginY = () => this.state.object &&\n\t\t\tthis.state.object.getOriginY();\n\t\tthis.getPointByOrigin = (originX, originY) => this.state.object &&\n\t\t\tthis.state.object.getPointByOrigin(originX, originY);\n\n\t\tthis.getScaleX = () => this.state.object &&\n\t\t\tthis.state.object.getScaleX();\n\t\tthis.getScaleY = () => this.state.object &&\n\t\t\tthis.state.object.getScaleY();\n\t\tthis.getShadow = () => this.state.object &&\n\t\t\tthis.state.object.getShadow();\n\t\tthis.getStrokeWidth = () => this.state.object &&\n\t\t\tthis.state.object.getStrokeWidth();\n\t\tthis.getSvgStyles = () => this.state.object &&\n\t\t\tthis.state.object.getSvgStyles();\n\t\tthis.getSvgTransform = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransform();\n\t\tthis.getSvgTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransformMatrix();\n\t\tthis.getTop = () => this.state.object &&\n\t\t\tthis.state.object.getTop();\n\t\tthis.getTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getTransformMatrix();\n\t\tthis.getViewportTransform = () => this.state.object &&\n\t\t\tthis.state.object.getViewportTransform();\n\t\tthis.getVisible = () => this.state.object &&\n\t\t\tthis.state.object.getVisible();\n\t\tthis.getWidth = () => this.state.object &&\n\t\t\tthis.state.object.getWidth();\n\t\tthis.hasStateChanged = () => this.state.object &&\n\t\t\tthis.state.object.hasStateChanged();\n\t\tthis.intersectsWithObject = (other) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithObject(other);\n\t\tthis.intersectsWithRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithRect(pointTL, pointBR);\n\t\tthis.isContainedWithinObject = (other) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinObject(other);\n\t\tthis.isContainedWithinRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\tthis.isControlVisible = (controlName) => this.state.object &&\n\t\t\tthis.state.object.isControlVisible(controlName);\n\t\tthis.isType = (type) => this.state.object &&\n\t\t\tthis.state.object.isType(type);\n\t\tthis.moveTo = (index) => this.state.object &&\n\t\t\tthis.state.object.moveTo(index);\n\t\tthis.remove = () => this.state.object &&\n\t\t\tthis.state.object.remove();\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.saveState = (options) => this.state.object &&\n\t\t\tthis.state.object.saveState(options);\n\t\tthis.scale = (value) => this.state.object &&\n\t\t\tthis.state.object.scale(value);\n\t\tthis.scaleToHeight = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToHeight(value);\n\t\tthis.scaleToWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToWidth(value);\n\t\tthis.sendBackwards = () => this.state.object &&\n\t\t\tthis.state.object.sendBackwards();\n\t\tthis.sendToBack = () => this.state.object &&\n\t\t\tthis.state.object.sendToBack();\n\t\tthis.set = (key, value) => this.state.object &&\n\t\t\tthis.state.object.set(key, value);\n\t\tthis.setAngle = (value) => this.state.object &&\n\t\t\tthis.state.object.setAngle(value);\n\t\tthis.setClipTo = (clipTo) => this.state.object &&\n\t\t\tthis.state.object.setClipTo(clipTo);\n\t\tthis.setColor = (color) => this.state.object &&\n\t\t\tthis.state.object.setColor(color);\n\t\tthis.setControlsVisibility = (options) => this.state.object &&\n\t\t\tthis.state.object.setControlsVisibility(options);\n\t\tthis.setControlVisible = (controlName, visible) => this.state.object &&\n\t\t\tthis.state.object.setControlVisible(controlName, visible);\n\t\tthis.setCoords = (value) => this.state.object &&\n\t\t\tthis.state.object.setCoords(value);\n\t\tthis.setFill = (value) => this.state.object &&\n\t\t\tthis.state.object.setFill(value);\n\t\tthis.setFlipX = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipX(value);\n\t\tthis.setFlipY = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipY(value);\n\t\tthis.setGradient = (property, options) => this.state.object &&\n\t\t\tthis.state.object.setGradient(property, options);\n\t\tthis.setLeft = (value) => this.state.object &&\n\t\t\tthis.state.object.setLeft(value);\n\t\tthis.setOpacity = (value) => this.state.object &&\n\t\t\tthis.state.object.setOpacity(value);\n\t\tthis.setOptions = (options) => this.state.object &&\n\t\t\tthis.state.object.setOptions(options);\n\t\tthis.setOriginX = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginX(value);\n\t\tthis.setOriginY = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginY(value);\n\t\tthis.setPatternFill = (options) => this.state.object &&\n\t\t\tthis.state.object.setPatternFill(options);\n\t\tthis.setPositionByOrigin = (pos, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.setPositionByOrigin(pos, originX, originY);\n\t\tthis.setScaleX = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleX(value);\n\t\tthis.setScaleY = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleY(value);\n\t\tthis.setShadow = (options) => this.state.object &&\n\t\t\tthis.state.object.setShadow(options);\n\t\tthis.setSourcePath = (value) => this.state.object &&\n\t\t\tthis.state.object.setSourcePath(value);\n\t\tthis.setStroke = (value) => this.state.object &&\n\t\t\tthis.state.object.setStroke(value);\n\t\tthis.setStrokeWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.setStrokeWidth(value);\n\t\tthis.setTop = (value) => this.state.object &&\n\t\t\tthis.state.object.setTop(value);\n\t\tthis.setTransformMatrix = (transformMatrix) => this.state.object &&\n\t\t\tthis.state.object.setTransformMatrix(transformMatrix);\n\t\tthis.setupState = () => this.state.object &&\n\t\t\tthis.state.object.setupState(value);\n\t\tthis.setVisible = (value) => this.state.object &&\n\t\t\tthis.state.object.setVisible(value);\n\t\tthis.straighten = () => this.state.object &&\n\t\t\tthis.state.object.straighten();\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject();\n\t\tthis.toDataURL = () => this.state.object &&\n\t\t\tthis.state.object.toDataURL(options);\n\t\tthis.toggle = (property) => this.state.object &&\n\t\t\tthis.state.object.toggle(property);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toJSON(propertiesToInclude);\n\t\tthis.toLocalPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.toLocalPoint(point, originX, originY);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.transform = (ctx, fromLeft) => this.state.object &&\n\t\t\tthis.state.object.transform(ctx, fromLeft);\n\t\tthis.translateToCenterPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToCenterPoint(point, originX, originY);\n\t\tthis.translateToOriginPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToOriginPoint(point, originX, originY);\n\n\t\t// React\n\t\tthis.getObject = () => this.state.object;\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst difference = diff(this.props, nextProps);\n\t\tif (difference) {\n\t\t\tdifference.forEach(comparsion => {\n\t\t\t\tthis.set(comparsion.path[0], comparsion.rhs);\n\t\t\t});\n\t\t}\n\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tdraw(object, cb) {\n\t\tthis.setState({object}, () => {\n\t\t\tcb && cb(object);\n\t\t\t// canvas.add(object);\n\t\t\tthis.initEvent();\n\t\t});\n\t}\n\n\tinitEvent() {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded instanceof Function) {\n\t\t\tobject.on('added', this.props.onAdded);\n\t\t}\n\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t}\n\t\tif (this.props.onSelected instanceof Function) {\n\t\t\tobject.on('selected', this.props.onSelected);\n\t\t}\n\t\tif (this.props.onModified instanceof Function) {\n\t\t\tobject.on('modified', this.props.onModified);\n\t\t}\n\t\tif (this.props.onRotating instanceof Function) {\n\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t}\n\t\tif (this.props.onScaling instanceof Function) {\n\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t}\n\t\tif (this.props.onMoving instanceof Function) {\n\t\t\tobject.on('moving', this.props.onMoving);\n\t\t}\n\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t}\n\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t}\n\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\tobject.off('added');\n\t\t} else if (nextProps.onAdded instanceof Function) {\n\t\t\tobject.on('added', this.props.onAdded);\n\t\t}\n\n\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\tobject.off('removed');\n\t\t} else if (nextProps.onRemoved instanceof Function) {\n\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t}\n\n\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\tobject.off('selected');\n\t\t} else if (nextProps.onSelected instanceof Function) {\n\t\t\tobject.on('selected', this.props.onSelected);\n\t\t}\n\n\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\tobject.off('modified');\n\t\t} else if (nextProps.onModified instanceof Function) {\n\t\t\tobject.on('modified', this.props.onModified);\n\t\t}\n\n\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\tobject.off('rotating');\n\t\t} else if (nextProps.onRotating instanceof Function) {\n\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t}\n\n\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\tobject.off('scaling');\n\t\t} else if (nextProps.onScaling instanceof Function) {\n\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t}\n\n\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\tobject.off('moving');\n\t\t} else if (nextProps.onMoving instanceof Function) {\n\t\t\tobject.on('moving', this.props.onMoving);\n\t\t}\n\n\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\tobject.off('mousedown');\n\t\t} else if (nextProps.onMousedown instanceof Function) {\n\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t}\n\n\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\tobject.off('mouseup');\n\t\t} else if (nextProps.onMouseup instanceof Function) {\n\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nFabricObject.__uid = fabric.Object.__uid;\nFabricObject.NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\nFabricObject.rotate = fabric.Object.rotate;\n\nFabricObject.propTypes = {\n\tangle: PropTypes.number,\n\tbackgroundColor: PropTypes.string,\n\tborderColor: PropTypes.string,\n\tborderOpacityWhenMoving: PropTypes.number,\n\tborderScaleFactor: PropTypes.number,\n\tcenteredRotation: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tclipTo: PropTypes.func,\n\tcornerColor: PropTypes.string,\n\tcornerSize: PropTypes.number,\n\tevented: PropTypes.bool,\n\tfill: PropTypes.string,\n\tfillRule: PropTypes.string,\n\tflipX: PropTypes.bool,\n\tflipY: PropTypes.bool,\n\tglobalCompositeOperation: PropTypes.string,\n\thasBorders: PropTypes.bool,\n\thasControls: PropTypes.bool,\n\thasRotatingPoint: PropTypes.bool,\n\theight: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tincludeDefaultValues: PropTypes.bool,\n\tleft: PropTypes.number,\n\tlockMovementX: PropTypes.bool,\n\tlockMovementY: PropTypes.bool,\n\tlockRotation: PropTypes.bool,\n\tlockScalingFlip: PropTypes.bool,\n\tlockScalingX: PropTypes.bool,\n\tlockScalingY: PropTypes.bool,\n\tlockUniScaling: PropTypes.bool,\n\tminScaleLimit: PropTypes.number,\n\toCoords: PropTypes.object,\n\topacity: PropTypes.number,\n\toriginX: PropTypes.oneOf(['left', 'right', 'center']),\n\toriginY: PropTypes.oneOf(['top', 'bottom', 'center']),\n\tpadding: PropTypes.number,\n\tperPixelTargetFind: PropTypes.bool,\n\trotatingPointOffset: PropTypes.number,\n\tscaleX: PropTypes.number,\n\tscaleY: PropTypes.number,\n\tselectable: PropTypes.bool,\n\tshadow: PropTypes.oneOfType([React.PropTypes.instanceOf(fabric.Shadow), PropTypes.string]),\n\tstateProperties: PropTypes.array,\n\tstroke: PropTypes.string,\n\tstrokeDashArray: PropTypes.array,\n\tstrokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n\tstrokeLineJoin: PropTypes.oneOf(['bevil', 'round', 'miter']),\n\tstrokeMiterLimit: PropTypes.number,\n\tstrokeWidth: PropTypes.number,\n\ttop: PropTypes.number,\n\ttransformMatrix: PropTypes.array,\n\ttransparentCorners: PropTypes.bool,\n\ttype: PropTypes.string,\n\tvisible: PropTypes.bool,\n\twidth: PropTypes.number,\n};\n\nFabricObject.defaultProps = {\n\ttype: 'object',\n\toriginX: 'left',\n\toriginY: 'top',\n\ttop: 0,\n\tleft: 0,\n\twidth: 0,\n\theight: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\tflipX: false,\n\tflipY: false,\n\topacity: 1,\n\tangle: 0,\n\tskewX: 0,\n\tskewY: 0,\n\tcornerSize: 12,\n\ttransparentCorners: true,\n\thoverCursor: null,\n\tpadding: 0,\n\tborderColor: 'rgba(102,153,255,0.75)',\n\tcornerColor: 'rgba(102,153,255,0.5)',\n\tcenteredScaling: false,\n\tcenteredRotation: true,\n\tfill: 'rgb(0,0,0)',\n\tfillRule: 'nonzero',\n\tglobalCompositeOperation: 'source-over',\n\tbackgroundColor: '',\n\tstroke: null,\n\tstrokeWidth: 1,\n\tstrokeDashArray: null,\n\tstrokeLineCap: 'butt',\n\tstrokeLineJoin: 'miter',\n\tstrokeMiterLimit: 10,\n\tshadow: null,\n\tborderOpacityWhenMoving: 0.4,\n\tborderScaleFactor: 1,\n\ttransformMatrix: null,\n\tminScaleLimit: 0.01,\n\tselectable: true,\n\tevented: true,\n\tvisible: true,\n\thasControls: true,\n\thasBorders: true,\n\thasRotatingPoint: true,\n\trotatingPointOffset: 40,\n\tperPixelTargetFind: false,\n\tincludeDefaultValues: true,\n\n\tclipTo: null,\n\n\tlockMovementX: false,\n\tlockMovementY: false,\n\tlockRotation: false,\n\tlockScalingX: false,\n\tlockScalingY: false,\n\tlockUniScaling: false,\n\tlockSkewingX: false,\n\tlockSkewingY: false,\n\tlockScalingFlip: false,\n\n\t// oCoords: null,\n\n\tstateProperties:  (\n\t\t'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t\t'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t\t'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t\t'alignX alignY meetOrSlice skewX skewY'\n\t).split(' ')\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/base/Object.jsx\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 4\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 6\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/process/browser.js\n ** module id = 7\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/index.js\n ** module id = 8\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-util-is/lib/util.js\n ** module id = 9\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/events/events.js\n ** module id = 10\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_transform.js\n ** module id = 11\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_writable.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nimport React, { PropTypes } from 'react';\nimport {fabric} from 'fabric-webpack';\nimport diff from 'deep-diff';\nimport collection from './mixin/collection.js';\nimport observable from './mixin/observable.js';\n\nexport default class StaticCanvas extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tcollection(this);\n\t\tobservable(this);\n\n\t\t//Static Canvas\n\t\tthis.absolutePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.absolutePan(point);\n\t\tthis.bringForward = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringForward(object, intersecting);\n\t\tthis.bringToFront = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringToFront(object);\n\t\tthis.centerObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObject(object);\n\t\tthis.centerObjectH = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectH(object);\n\t\tthis.centerObjectV = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectV(object);\n\t\tthis.clear = () => this.state.canvas &&\n\t\t\tthis.state.canvas.clear();\n\t\tthis.clearContext = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.clearContext(ctx);\n\t\tthis.clone = (callback, properties) => this.state.canvas &&\n\t\t\tthis.state.canvas.clone(callback, properties);\n\t\tthis.cloneWithoutData = (callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.cloneWithoutData(callback);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.fxCenterObjectH = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectH(object, callbacks);\n\t\tthis.fxCenterObjectV = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectV(object, callbacks);\n\t\tthis.fxRemove = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxRemove(object, callbacks);\n\t\tthis.fxStraightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxStraightenObject(object);\n\t\tthis.getActiveGroup = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveGroup();\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.getCenter = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getCenter();\n\t\tthis.getContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getContext();\n\t\tthis.getElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getElement();\n\t\tthis.getHeight = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getHeight();\n\t\tthis.getWidth = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getWidth();\n\t\tthis.getZoom = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getZoom();\n\t\tthis.loadFromDatalessJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\tthis.loadFromJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromJSON(json, callback, reviver);\n\t\tthis.moveTo = (object, index) => this.state.canvas &&\n\t\t\tthis.state.canvas.moveTo(object, index);\n\t\tthis.onBeforeScaleRotate = () => this.state.canvas &&\n\t\t\tthis.state.canvas.onBeforeScaleRotate();\n\t\tthis.relativePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.relativePan(point);\n\t\tthis.renderAll = (allOnTop) => this.state.canvas &&\n\t\t\tthis.state.canvas.renderAll(allOnTop);\n\t\tthis.renderTop = () => this.state.canvas &&\n\t\t\tthis.state.canvas.renderTop();\n\t\tthis.sendBackwards = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendBackwards(object, intersecting);\n\t\tthis.sendToBack = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendToBack(object);\n\t\tthis.setBackgroundColor = (backgroundColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\tthis.setBackgroundImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundImage(image, callback, options);\n\t\tthis.setDimensions = (dimensions, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setDimensions(dimensions, options);\n\t\tthis.setHeight = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setHeight(value, options);\n\t\tthis.setOverlayColor = (overlayColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayColor(overlayColor, callback);\n\t\tthis.setOverlayImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayImage(image, callback, options);\n\t\tthis.setViewportTransform = (vpt) => this.state.canvas &&\n\t\t\tthis.state.canvas.setViewportTransform(vpt);\n\t\tthis.setWidth = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setWidth(value, options);\n\t\tthis.setZoom = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setZoom(value);\n\t\tthis.straightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.straightenObject(object);\n\t\tthis.toDatalessJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessObject(propertiesToInclude);\n\t\tthis.toDataURL = (options) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURL(options);\n\t\tthis.toDataURLWithMultiplier = (format, multiplier, quality) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toJSON(propertiesToInclude);\n\t\tthis.toObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.canvas &&\n\t\t\tthis.state.canvas.toString();\n\t\tthis.toSVG = (options, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.toSVG(options, reviver);\n\t\tthis.zoomToPoint = (point, value) => this.state.canvas &&\n\t\t\tthis.state.canvas.zoomToPoint(point, value);\n\n\t\t// React\n\t\tthis.getChild = this.getChild.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst canvas = new fabric.Canvas(this.props.id);\n\n\t\tthis.setState({canvas}, () => {\n\t\t\tthis.initEvent.call(this);\n\t\t\tObject.keys(this.ref).forEach(key => {\n\t\t\t\tconst ref = this.ref[key];\n\t\t\t\tref.draw(obj => this.add(obj));\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.prevRef = {};\n\t\tObject.keys(this.ref).forEach(key => {\n\t\t\tthis.prevRef[key] = this.ref[key];\n\t\t});\n\t\tthis.ref = {};\n\n\t\t/* Options Changed */\n\t\tif (diff(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t}\n\t\tif (diff(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t}\n\n\t\tif (this.props.height !== nextProps.height) {\n\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t}\n\t\tif (this.props.width !== nextProps.width) {\n\t\t\tthis.state.canvas.setHeight(nextProps.width);\n\t\t}\n\n\t\tif (diff(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t}\n\t\tif (diff(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t}\n\n\t\tif (diff(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t}\n\n\t\t/* TODO: Event Changed */\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t/* TODO: Children Changed */\n\n\t\tif (prevState.canvas) {\n\t\t\tReact.Children.map(\n\t\t\t\tthis.props.children,\n\t\t\t\t(child, i) => {\n\t\t\t\t\tif (!child) return;\n\n\t\t\t\t\tconst key = child.ref ? child.ref : `layer${i}`;\n\t\t\t\t\tconst ref = this.ref[key];\n\t\t\t\t\tref.draw(obj => this.add(obj));\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tObject.keys(this.prevRef).forEach(key => {\n\t\t\t\tconst ref = this.prevRef[key];\n\t\t\t\tthis.remove(ref.getObject());\n\t\t\t});\n\t\t}\n\n\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t}\n\n\t// childAddedrRemove(oldChild, child, index) {\n\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t// } else if (oldChild && !child) {\n\t\t// \tconst key = oldChild.ref;\n\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t// \tconst obj = ref.getObject();\n\t\t//\n\t\t// \tthis.remove(obj);\n\t\t// \tthis.ref[ref] = null;\n\t\t// }\n\t// }\n\n\tinitEvent() {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t}\n\t\tif (this.props.afterRender instanceof Function) {\n\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t}\n\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t}\n\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\tcanvas.off('before:render');\n\t\t} else if (nextProps.beforeRender instanceof Function) {\n\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t}\n\n\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\tobject.off('after:render');\n\t\t} else if (nextProps.afterRender instanceof Function) {\n\t\t\tobject.on('after:render', this.props.afterRender);\n\t\t}\n\n\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\tobject.off('canvas:cleared');\n\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n\t\t\tobject.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n\n\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\tobject.off('object:added');\n\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n\t\t\tobject.on('object:added', this.props.onObjectAdded);\n\t\t}\n\n\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\tobject.off('object:removed');\n\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n\t\t\tobject.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n\t}\n\n\tgetChild(ref) {\n\t\treturn this.ref[ref];\n\t}\n\n\trender() {\n\t\tconst {id, children} = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<canvas id={id} width={this.props.width} height={this.props.height}/>\n\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.canvas &&\n\t\t\t\t\t\tReact.Children.map(\n\t\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t\t(child, i) => child && React.cloneElement(child, {\n\t\t\t\t\t\t\t\tref: c => {\n\t\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t\tthis.ref[child.ref||`layer${i}`] = c;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nStaticCanvas.emptyJSON = fabric.StaticCanvas.EMPTY_JSON;\nStaticCanvas.supports = (methodName) =>  fabric.StaticCanvas.supports(methodName);\n\nStaticCanvas.propTypes = {\n\tallowTouchScrolling: PropTypes.bool,\n\tbackgroundColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\tbackgroundImage: PropTypes.instanceOf(fabric.Image),\n\tclipTo: PropTypes.func,\n\tcontrolsAboveOverlay: PropTypes.bool,\n\tFX_DURATION: PropTypes.number,\n\timageSmoothingEnabled: PropTypes.bool,\n\tincludeDefaultValues: PropTypes.bool,\n\toverlayColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\toverlayImage: PropTypes.instanceOf(fabric.Image),\n\tpreserveObjectStacking: PropTypes.bool,\n\trenderOnAddRemove: PropTypes.bool,\n\tstateful: PropTypes.bool,\n\tsvgViewportTransformation: PropTypes.bool,\n\tviewportTransform: PropTypes.array,\n\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\tid: PropTypes.string,\n\tbeforeRender: PropTypes.func,\n\tafterRender: PropTypes.func,\n\tonCanvasCleared: PropTypes.func,\n\tonObjectAdded: PropTypes.func,\n\tonObjectRemoved: PropTypes.func,\n};\n\nStaticCanvas.defaultProps = {\n\tallowTouchScrolling: false,\n\tbackgroundColor: '',\n\tbackgroundImage: null,\n\tclipTo: null,\n\tcontrolsAboveOverlay: false,\n\tFX_DURATION: 500,\n\timageSmoothingEnabled: true,\n\tincludeDefaultValues: true,\n\toverlayColor: '',\n\toverlayImage: null,\n\tpreserveObjectStacking: false,\n\trenderOnAddRemove: true,\n\tstateful: true,\n\tsvgViewportTransformation: true,\n\tviewportTransform: null,\n\n\twidth: 100,\n\theight: 100,\n\n\tid: 'c',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StaticCanvas.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from './base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Text extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.isEmptyStyles = () => this.state.object &&\n\t\t\tthis.state.object.isEmptyStyles();\n\t\tthis.renderf = (ctx) => this.state.object &&\n\t\t\tthis.state.object.render(ctx);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Text.fromObject(this.props.object);\n\t\t} else if (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Text.fromElement(this.props.element, this.props);\n\t\t} else {\n\t\t\tobject = new fabric.Text(this.props.text, this.props);\n\t\t}\n\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nText.attribute = fabric.Text.ATTRIBUTE_NAMES;\nText.defaultSvgFontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\nText.fromElement = (element, options) => fabric.Text.fromElement(element, options);\nText.fromObject = (object) => fabric.Text.fromObject(object);\n\nText.propTypes = Object.assign(FabricObject.propTypes, {\n\tfontSize: PropTypes.number,\n\tfontWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tfontFamily: PropTypes.string,\n\ttextDecoration: PropTypes.oneOf(['', 'underline', 'overline', 'line-through']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right', 'justify']),\n\tfontStyle: PropTypes.oneOf(['', 'normal', 'italic', 'oblique']),\n\tlineHeight: PropTypes.number,\n\ttextBackgroundColor: PropTypes.string,\n});\n\nText.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'text',\n\tstateProperties: FabricObject.defaultProps.stateProperties.concat(['fontFamily',\n\t\t'fontWeight',\n\t\t'fontSize',\n\t\t'text',\n\t\t'textDecoration',\n\t\t'textAlign',\n\t\t'fontStyle',\n\t\t'lineHeight',\n\t\t'textBackgroundColor',\n  ]),\n\tfontSize: 40,\n\tfontWeight: 'normal',\n\tfontFamily: 'Times New Roman',\n\ttextDecoration: '',\n\ttextAlign: 'left',\n\tfontStyle: '',\n\tlineHeight: 1.16,\n\ttextBackgroundColor: '',\n\tstroke: null,\n\tshadow: null,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Text.jsx\n **/","function observableMixin(delgete) {\n\tdelgete.observe = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.observe(eventName, handler);\n\tdelgete.stopObserving = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.stopObserving(eventName, handler);\n\tdelgete.fire = (eventName, options) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.fire(eventName, options);\n\tdelgete.on = delgete.observe;\n\tdelgete.off = delgete.stopObserving;\n\tdelgete.trigger = delgete.fire;\n}\n\nexport default observableMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixin/observable.js\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Path extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.Path.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Path.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst object = new fabric.Path(this.props.path, this.props);\n\t\t\tsuper.draw(object, cb);\n\n\t\t\treturn object;\n\t\t}\n\t}\n\n}\n\nPath.fromElement = (element, callback, options) => fabric.Path.fromElement(element, callback, options);\nPath.fromObject = (object, callback) => fabric.Path.fromObject(object, callback);\nPath.attribute = fabric.Path.ATTRIBUTE_NAMES;\n\nPath.propTypes = Object.assign(FabricObject.propTypes, {\n\tpath: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPath.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'path',\n\tpath: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Path.jsx\n **/","/*!\n * deep-diff.\n * Licensed under the MIT License.\n */\n;(function(root, factory) {\n  'use strict';\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return factory();\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.DeepDiff = factory();\n  }\n}(this, function(undefined) {\n  'use strict';\n\n  var $scope, conflict, conflictResolution = [];\n  if (typeof global === 'object' && global) {\n    $scope = global;\n  } else if (typeof window !== 'undefined') {\n    $scope = window;\n  } else {\n    $scope = {};\n  }\n  conflict = $scope.DeepDiff;\n  if (conflict) {\n    conflictResolution.push(\n      function() {\n        if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n          $scope.DeepDiff = conflict;\n          conflict = undefined;\n        }\n      });\n  }\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString !== 'undefined' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    path = path || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined') {\n      if (prefilter) {\n        if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) { return; }\n        else if (typeof(prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) { return; }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    if (ltype === 'undefined') {\n      if (rtype !== 'undefined') {\n        changes(new DiffNew(currentPath, rhs));\n      }\n    } else if (rtype === 'undefined') {\n      changes(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    } else if (Object.prototype.toString.call(lhs) === '[object Date]' && Object.prototype.toString.call(rhs) === '[object Date]' && ((lhs - rhs) !== 0)) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      stack = stack || [];\n      if (stack.indexOf(lhs) < 0) {\n        stack.push(lhs);\n        if (Array.isArray(lhs)) {\n          var i, len = lhs.length;\n          for (i = 0; i < lhs.length; i++) {\n            if (i >= rhs.length) {\n              changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n            } else {\n              deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n            }\n          }\n          while (i < rhs.length) {\n            changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          akeys.forEach(function(k, i) {\n            var other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n              pkeys = arrayRemove(pkeys, other);\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n            }\n          });\n          pkeys.forEach(function(k) {\n            deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n          });\n        }\n        stack.length = stack.length - 1;\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    accum = accum || [];\n    deepDiff(lhs, rhs,\n      function(diff) {\n        if (diff) {\n          accum.push(diff);\n        }\n      },\n      prefilter);\n    return (accum.length) ? accum : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n          i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n          i = -1,\n          last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n          i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n          i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function(change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      deepDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: deepDiff,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function() {\n        return 'undefined' !== typeof conflict;\n      },\n      enumerable: true\n    },\n    noConflict: {\n      value: function() {\n        if (conflictResolution) {\n          conflictResolution.forEach(function(it) {\n            it();\n          });\n          conflictResolution = null;\n        }\n        return accumulateDiff;\n      },\n      enumerable: true\n    }\n  });\n\n  return accumulateDiff;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-diff/index.js\n ** module id = 18\n ** module chunks = 0\n **/","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/index.js\n ** module id = 19\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js\n ** module id = 20\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_readable.js\n ** module id = 21\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/string_decoder/index.js\n ** module id = 22\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/url.js\n ** module id = 23\n ** module chunks = 0\n **/",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n\nimport { PropTypes } from 'react';\nimport StaticCanvas from './StaticCanvas.jsx';\n\nexport default class Canvas extends StaticCanvas {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tthis.ref = {};\n\t\tthis.containsPoint = (e, target) => this.state.canvas &&\n\t\t\tthis.state.canvas.containsPoint(e, target);\n\t\tthis.isTargetTransparent = (target, x, y) => this.state.canvas &&\n\t\t\tthis.state.canvas.isTargetTransparent(target, x, y);\n\t\tthis.setCursor = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setCursor(value);\n\t\tthis.findTarget = (e, skipGroup) => this.state.canvas &&\n\t\t\tthis.state.canvas.findTarget(e, skipGroup);\n\t\tthis.getPointer = (e, ignoreZoom, upperCanvasEl) => this.state.canvas &&\n\t\t\tthis.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\tthis.getSelectionContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionContext();\n\t\tthis.getSelectionElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionElement();\n\t\tthis.setActiveObject = (object, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveObject(object, e);\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.discardActiveObject = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveObject(e);\n\t\tthis.setActiveGroup = (group, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveGroup(group, e);\n\t\tthis.discardActiveGroup = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveGroup(e);\n\t\tthis.deactivateAll = () => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAll();\n\t\tthis.deactivateAllWithDispatch = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAllWithDispatch(e);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.drawControls = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.drawControls(ctx);\n\t}\n}\n\nCanvas.propTypes = Object.assign(StaticCanvas.propTypes, {\n\tuniScaleTransform: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tcenteredRotation: PropTypes.bool,\n\tinteractive: PropTypes.bool,\n\tselection: PropTypes.bool,\n\tselectionColor: PropTypes.string,\n\tselectionDashArray: PropTypes.array,\n\tselectionBorderColor: PropTypes.string,\n\tselectionLineWidth: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tmoveCursor: PropTypes.string,\n\tdefaultCursor: PropTypes.string,\n\tfreeDrawingCursor: PropTypes.string,\n\trotationCursor: PropTypes.string,\n\tcontainerClass: PropTypes.string,\n\tperPixelTargetFind: PropTypes.bool,\n\ttargetFindTolerance: PropTypes.number,\n\tskipTargetFind: PropTypes.bool,\n\tisDrawingMode: PropTypes.bool,\n});\n\nCanvas.defaultProps = Object.assign(StaticCanvas.defaultProps, {\n\tuniScaleTransform: false,\n\tcenteredScaling: false,\n\tcenteredRotation: false,\n\tinteractive: true,\n\tselection: true,\n\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\tselectionDashArray: [],\n\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\tselectionLineWidth: 1,\n\thoverCursor: 'move',\n\tmoveCursor: 'move',\n\tdefaultCursor: 'default',\n\tfreeDrawingCursor: 'crosshair',\n\trotationCursor: 'crosshair',\n\tcontainerClass: 'canvas-container',\n\tperPixelTargetFind: false,\n\ttargetFindTolerance: 0,\n\tskipTargetFind: false,\n\tisDrawingMode: false,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Canvas.jsx\n **/","'use strict';\n\nimport {fabric} from 'fabric-webpack';\nexport default fabric.Color;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.js\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport Text from './Text';\nimport {fabric} from 'fabric-webpack';\n\nexport default class IText extends Text {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.isEmptyStyles = () => this.state.object &&\n\t\t\tthis.state.object.isEmptyStyles();\n\t\tthis.setSelectionStart = (index) => this.state.object &&\n\t\t\tthis.state.object.setSelectionStart(index);\n\t\tthis.setSelectionEnd = (index) => this.state.object &&\n\t\t\tthis.state.object.setSelectionEnd(index);\n\t\tthis.getSelectionStyles = () => this.state.object &&\n\t\t\tthis.state.object.getSelectionStyles();\n\t\tthis.setSelectionStyles = (styles) => this.state.object &&\n\t\t\tthis.state.object.setSelectionStyles(styles);\n\t\tthis.renderCursorOrSelection = () => this.state.object &&\n\t\t\tthis.state.object.renderCursorOrSelection();\n\t\tthis.get2DCursorLocation = (selectionStart) => this.state.object &&\n\t\t\tthis.state.object.get2DCursorLocation(selectionStart);\n\t\tthis.getCurrentCharStyle = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharStyle(lineIndex, charIndex);\n\t\tthis.getCurrentCharFontSize = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n\t\tthis.getCurrentCharColor = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharColor(lineIndex, charIndex);\n\t\tthis.renderCursor = (boundaries, ctx) => this.state.object &&\n\t\t\tthis.state.object.renderCursor(boundaries, ctx);\n\t\tthis.renderSelection = (chars, boundaries, ctx) => this.state.object &&\n\t\t\tthis.state.object.renderSelection(chars, boundaries, ctx);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t}\n\n\tdraw(canvas) {\n\t\tlet object;\n\t\tif (this.props.object instanceof Object) {\n\t\t\tobject = fabric.IText.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.IText(this.props.text, this.props);\n\t\t}\n\n\t\tsuper.draw(canvas, object);\n\t}\n\n\tinitEvent() {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tsuper.initEvent();\n\t\tif (this.props.onChanged instanceof Function) {\n\t\t\tobject.on('changed', this.props.onChanged);\n\t\t}\n\t\tif (this.props.onSelectionChanged instanceof Function) {\n\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t}\n\t\tif (this.props.onEditingEntered instanceof Function) {\n\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t}\n\t\tif (this.props.onEditingExited instanceof Function) {\n\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t}\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tsuper.eventChanged(nextProps);\n\t\tif (this.props.onChanged && !nextProps.onChanged) {\n\t\t\tobject.off('changed');\n\t\t} else if (nextProps.onChanged instanceof Function) {\n\t\t\tobject.on('changed', this.props.onChanged);\n\t\t}\n\t\tif (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n\t\t\tobject.off('selection:changed');\n\t\t} else if (nextProps.onSelectionChanged instanceof Function) {\n\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t}\n\t\tif (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n\t\t\tobject.off('editing:entered');\n\t\t} else if (nextProps.onEditingEntered instanceof Function) {\n\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t}\n\t\tif (this.props.onEditingExited && !nextProps.onEditingExited) {\n\t\t\tobject.off('editing:exited');\n\t\t} else if (nextProps.onEditingExited instanceof Function) {\n\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t}\n\t}\n}\nIText.fromObject = (object) => fabric.IText.fromObject(object);\n\nIText.propTypes = Object.assign(Text.propTypes, {\n\tselectionStart: PropTypes.number,\n\tselectionEnd: PropTypes.number,\n\tselectionColor: PropTypes.string,\n\tisEditing: PropTypes.bool,\n\teditable: PropTypes.bool,\n\teditingBorderColor: PropTypes.string,\n\tcursorWidth: PropTypes.number,\n\tcursorColor: PropTypes.string,\n\tcursorDelay: PropTypes.number,\n\tcursorDuration: PropTypes.number,\n\tstyles: PropTypes.object,\n\tcaching: PropTypes.bool,\n});\n\nIText.defaultProps = Object.assign(Text.defaultProps, {\n\ttype: 'i-text',\n\tselectionStart: 0,\n\tselectionEnd: 0,\n\tselectionColor: 'rgba(17,119,255,0.3)',\n\tisEditing: false,\n\teditable: true,\n\teditingBorderColor: 'rgba(102,153,255,0.25)',\n\tcursorWidth: 2,\n\tcursorColor: '#333',\n\tcursorDelay: 1000,\n\tcursorDuration: 600,\n\t// styles: [],\n\t// caching: true,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/IText.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from './base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Image extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.getElement = () => this.state.object &&\n\t\t\tthis.state.object.getElement();\n\t\tthis.setElement = (element, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setElement(element, callback, options);\n\t\tthis.setCrossOrigin = (value) => this.state.object &&\n\t\t\tthis.state.object.setCrossOrigin(value);\n\t\tthis.getOriginalSize = () => this.state.object &&\n\t\t\tthis.state.object.getOriginalSize();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getSrc = () => this.state.object &&\n\t\t\tthis.state.object.getSrc();\n\t\tthis.setSrc = (src, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setSrc(src, callback, options);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.applyFilters = (callback, filters, imgElement, forResizing) => this.state.object &&\n\t\t\tthis.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tif (typeof(this.props.src) === 'string') {\n\t\t\tfabric.Image.fromURL(\n\t\t\t\tthis.props.src,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Image.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else if (this.props.element instanceof Object) {\n\t\t\tfabric.Image.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else {\n\t\t\tconst instance = new fabric.Image(this.props.imgElement, this.props);\n\t\t\tsuper.draw(instance, cb);\n\t\t}\n\t}\n}\n\nImage.getSvgSrc = fabric.Image.prototype.getSrc;\nImage.css = fabric.Image.CSS_CANVAS;\nImage.fromObject = (object, callback) => fabric.Image.fromObject(object, callback);\nImage.fromURL = (url, callback, imgOptions) => fabric.Image.fromURL(url, callback, imgOptions);\nImage.fromElement = (element, callback, options) => fabric.Image.fromElement(element, callback, options);\nImage.attribute = fabric.Image.ATTRIBUTE_NAMES;\nImage.async = true;\nImage.pngCompression = 1;\n\nImage.propTypes = Object.assign(FabricObject.propTypes, {\n\tcrossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\talignX: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\talignY: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\tmeetOrSlice: PropTypes.oneOf(['meet', 'slice']),\n});\n\nImage.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'image',\n\tcrossOrigin: '',\n\talignX: 'none',\n\talignY: 'none',\n\tmeetOrSlice: 'meet',\n\tstrokeWidth: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Image.jsx\n **/","'use strict';\n\nimport {fabric} from 'fabric-webpack';\n\nexport const BaseFilter = fabric.Image.filters.BaseFilter;\nexport const Brightness = fabric.Image.filters.Brightness;\nexport const Convolute = fabric.Image.filters.Convolute;\nexport const GradientTransparency = fabric.Image.filters.GradientTransparency;\nexport const Grayscale = fabric.Image.filters.Grayscale;\nexport const Invert = fabric.Image.filters.Invert;\nexport const Mask = fabric.Image.filters.Mask;\nexport const Multiply = fabric.Image.filters.Multiply;\n\nexport const Noise = fabric.Image.filters.Noise;\nexport const Pixelate = fabric.Image.filters.Pixelate;\nexport const RemoveWhite = fabric.Image.filters.RemoveWhite;\nexport const Resize = fabric.Image.filters.Resize;\nexport const Sepia = fabric.Image.filters.Sepia;\nexport const Sepia2 = fabric.Image.filters.Sepia2;\nexport const Tint = fabric.Image.filters.Tint;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ImageFilters.js\n **/","function collectionMixin(delgete) {\n\tdelgete.add = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.add(...args);\n\tdelgete.insertAt = (object, index, nonSplicing) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.insertAt(object, index, nonSplicing);\n\tdelgete.remove = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.remove(...args);// arguments\n\tdelgete.forEachObject = (callback, context) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.forEachObject(callback, context);\n\tdelgete.getObjects = (type) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.getObjects(type);\n\tdelgete.item = (index) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.item(index);\n\tdelgete.isEmpty = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.isEmpty();\n\tdelgete.size = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.size();\n\tdelgete.contains = (object) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.contains(object);\n\tdelgete.complexity = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.complexity(object);\n};\n\nexport default collectionMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixin/collection.js\n **/","'use strict';\n\nimport React, {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\nconst PI = Math.PI;\n\nexport default class Circle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getRadiusX = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusX();\n\t\tthis.getRadiusY = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusY();\n\t\tthis.setRadius = (value) => this.state.object &&\n\t\t\tthis.state.object.setRadius(value);\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Circle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Circle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Circle(this.props);\n\t\t}\n\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nCircle.fromElement = (element, options) => fabric.Circle.fromElement(element, options);\nCircle.fromObject = (object) => fabric.Circle.fromObject(object);\nCircle.attribute = fabric.Circle.ATTRIBUTE_NAMES;\n\nCircle.propTypes = Object.assign(FabricObject.propTypes, {\n\tendAngle: PropTypes.number,\n\tradius: PropTypes.number,\n\tstartAngle: PropTypes.number,\n});\n\nCircle.defaultProps = Object.assign(FabricObject.defaultProps, {\n\tendAngle: 2 * PI,\n\tradius: 0,\n\tstartAngle: 0,\n\ttype: 'circle',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Circle.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Ellipse extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.getRx = () => this.state.object &&\n\t\t\tthis.state.object.getRx();\n\t\tthis.getRy = () => this.state.object &&\n\t\t\tthis.state.object.getRy();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toObject(reviver);\n\t\tthis.renderf = () => this.state.object &&\n\t\t\t\tthis.state.object.render();\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Ellipse(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nEllipse.fromElement = (element, options) => fabric.Ellipse.fromElement(element, options);\nEllipse.fromObject = (object) => fabric.Ellipse.fromObject(object);\nEllipse.attribute = fabric.Ellipse.ATTRIBUTE_NAMES;\n\nEllipse.propTypes = Object.assign(FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nEllipse.defaultProps = Object.assign(FabricObject.defaultProps, {\n\trx: 0,\n\try: 0,\n\ttype: 'ellipse',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Ellipse.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Line extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.calcLinePoints = () => this.state.object &&\n\t\t\tthis.state.object.calcLinePoints();\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => 1;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Line.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Line.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Line(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nLine.fromElement = (element, options) => fabric.Line.fromElement(element, options);\nLine.fromObject = (object) => fabric.Line.fromObject(object);\nLine.attribute = fabric.Line.ATTRIBUTE_NAMES;\n\nLine.propTypes = Object.assign(FabricObject.propTypes, {\n\tx1: PropTypes.number,\n\ty1: PropTypes.number,\n\tx2: PropTypes.number,\n\ty2: PropTypes.number,\n});\n\nLine.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'line',\n\tx1: 0,\n\ty1: 0,\n\tx2: 0,\n\ty2: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Line.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport Path from './Path';\nimport {fabric} from 'fabric-webpack';\n\nexport default class PathGroup extends Path {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.parseDimensionsFromPaths = (options) => this.state.object &&\n\t\t\tthis.state.object.parseDimensionsFromPaths(options);\n\t\tthis.renderf = (ctx) => this.state.object &&\n\t\t\tthis.state.object.renderf(ctx);\n\t\tthis.toObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.toString =  () => this.state.object &&\n\t\t\tthis.state.object.toSVG();\n\t\tthis.isSameColor =  () => this.state.object &&\n\t\t\tthis.state.object.isSameColor();\n\t\tthis.complexity =  () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.getObjects =  () => this.state.object &&\n\t\t\tthis.state.object.getObjects();\n\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.PathGroup.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.PathGroup.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst paths = [];\n\t\t\tif (this.props.children instanceof Array) {\n\t\t\t\tthis.props.children.forEach(child => paths.push(new fabric.Path(child.props.path, child.props)));\n\t\t\t} else {\n\t\t\t\tpaths.push(new fabric.Path(this.props.children.props.path, this.props.children.props));\n\t\t\t}\n\n\t\t\tconst object = new fabric.PathGroup(paths, this.props);\n\t\t\tsuper.draw(object, cb);\n\t\t}\n\t}\n\n}\n\nPathGroup.fromElement = (element, callback, options) => fabric.PathGroup.fromElement(element, callback, options);\nPathGroup.fromObject = (object, callback) => fabric.PathGroup.fromObject(object, callback);\nPathGroup.attribute = fabric.PathGroup.ATTRIBUTE_NAMES;\n\nPathGroup.defaultProps = Object.assign(Path.defaultProps, {\n\ttype: 'path-group',\n\tfill: '',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/PathGroup.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Polygon extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.commonRender = () => this.state.object &&\n\t\t\tthis.state.object.commonRender();\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polygon(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nPolygon.fromElement = (element, options) => fabric.Polygon.fromElement(element, options);\nPolygon.fromObject = (object) => fabric.Polygon.fromObject(object);\nPolygon.attribute = fabric.Polygon.ATTRIBUTE_NAMES;\n\nPolygon.propTypes = Object.assign(FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolygon.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'polygon',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Polygon.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Polyline extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polyline(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nPolyline.fromElement = (element, options) => fabric.Polyline.fromElement(element, options);\nPolyline.fromObject = (object) => fabric.Polyline.fromObject(object);\nPolyline.attribute = fabric.Polyline.ATTRIBUTE_NAMES;\n\nPolyline.propTypes = Object.assign(FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolyline.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'polyline',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Polyline.jsx\n **/","'use strict';\n\nimport {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Rect extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Rect.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Rect.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Rect(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nRect.fromElement = (element, options) => fabric.Rect.fromElement(element, options);\nRect.fromObject = (object) => fabric.Rect.fromObject(object);\nRect.attribute = fabric.Rect.ATTRIBUTE_NAMES;\n\nRect.propTypes = Object.assign(FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nRect.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'rect',\n\trx: 0,\n\try: 0,\n\tstrokeDashArray: null,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Rect.jsx\n **/","'use strict';\n\n// import {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric-webpack';\n\nexport default class Triangle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Triangle(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nTriangle.fromObject = (object) => fabric.Triangle.fromObject(object);\n\nTriangle.propTypes = FabricObject.propTypes;\nTriangle.defaultProps = Object.assign(FabricObject.defaultProps, {\n\ttype: 'triangle',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Triangle.jsx\n **/","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/lib/b64.js\n ** module id = 39\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/request.js\n ** module id = 40\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/response.js\n ** module id = 41\n ** module chunks = 0\n **/","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/https-browserify/index.js\n ** module id = 42\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 43\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 44\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 45\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 46\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/isarray/index.js\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/duplex.js\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/passthrough.js\n ** module id = 50\n ** module chunks = 0\n **/","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/readable.js\n ** module id = 51\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/transform.js\n ** module id = 52\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/writable.js\n ** module id = 53\n ** module chunks = 0\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/~/punycode/punycode.js\n ** module id = 54\n ** module chunks = 0\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/support/isBufferBrowser.js\n ** module id = 56\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/util.js\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 58\n ** module chunks = 0\n **/"],"sourceRoot":""}